{"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":227,"6":227,"7":1,"8":3,"9":3,"10":1,"11":3,"12":3,"13":1},"f":{"0":1,"1":227,"2":3,"3":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/IInsightFacade.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d47666835c4ecddbcc3bd0a086bf82a634ac4da0","contentHash":"d761353b137d345aa2135bd749043e4bd34fad94c92e663c586fa23538b973e2"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":49}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":76}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":42}},"10":{"start":{"line":13,"column":17},"end":{"line":13,"column":34}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":27}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":43}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":26}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":49}},"15":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":83}},"17":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":102}},"19":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":55}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":49}},"22":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":83}},"24":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"25":{"start":{"line":39,"column":12},"end":{"line":39,"column":99}},"26":{"start":{"line":41,"column":8},"end":{"line":48,"column":9}},"27":{"start":{"line":42,"column":12},"end":{"line":42,"column":77}},"28":{"start":{"line":43,"column":12},"end":{"line":43,"column":50}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":39}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":95}},"31":{"start":{"line":51,"column":8},"end":{"line":69,"column":11}},"32":{"start":{"line":52,"column":26},"end":{"line":52,"column":28}},"33":{"start":{"line":53,"column":21},"end":{"line":53,"column":51}},"34":{"start":{"line":54,"column":12},"end":{"line":68,"column":13}},"35":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"36":{"start":{"line":56,"column":20},"end":{"line":56,"column":81}},"37":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"38":{"start":{"line":59,"column":20},"end":{"line":59,"column":87}},"39":{"start":{"line":61,"column":16},"end":{"line":61,"column":40}},"40":{"start":{"line":62,"column":34},"end":{"line":62,"column":58}},"41":{"start":{"line":63,"column":16},"end":{"line":63,"column":48}},"42":{"start":{"line":64,"column":16},"end":{"line":64,"column":33}},"43":{"start":{"line":67,"column":16},"end":{"line":67,"column":30}},"44":{"start":{"line":72,"column":8},"end":{"line":80,"column":11}},"45":{"start":{"line":73,"column":25},"end":{"line":73,"column":27}},"46":{"start":{"line":74,"column":12},"end":{"line":78,"column":13}},"47":{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},"48":{"start":{"line":76,"column":20},"end":{"line":76,"column":41}},"49":{"start":{"line":79,"column":12},"end":{"line":79,"column":28}},"50":{"start":{"line":83,"column":8},"end":{"line":98,"column":9}},"51":{"start":{"line":84,"column":12},"end":{"line":84,"column":57}},"52":{"start":{"line":85,"column":24},"end":{"line":85,"column":66}},"53":{"start":{"line":86,"column":12},"end":{"line":94,"column":13}},"54":{"start":{"line":87,"column":29},"end":{"line":87,"column":85}},"55":{"start":{"line":88,"column":27},"end":{"line":92,"column":17}},"56":{"start":{"line":93,"column":16},"end":{"line":93,"column":60}},"57":{"start":{"line":97,"column":12},"end":{"line":97,"column":60}},"58":{"start":{"line":101,"column":25},"end":{"line":101,"column":29}},"59":{"start":{"line":102,"column":8},"end":{"line":109,"column":9}},"60":{"start":{"line":103,"column":12},"end":{"line":108,"column":13}},"61":{"start":{"line":104,"column":16},"end":{"line":104,"column":28}},"62":{"start":{"line":106,"column":17},"end":{"line":108,"column":13}},"63":{"start":{"line":107,"column":16},"end":{"line":107,"column":35}},"64":{"start":{"line":110,"column":8},"end":{"line":110,"column":26}},"65":{"start":{"line":113,"column":8},"end":{"line":152,"column":9}},"66":{"start":{"line":114,"column":26},"end":{"line":114,"column":52}},"67":{"start":{"line":115,"column":33},"end":{"line":115,"column":63}},"68":{"start":{"line":116,"column":24},"end":{"line":116,"column":45}},"69":{"start":{"line":117,"column":12},"end":{"line":117,"column":46}},"70":{"start":{"line":118,"column":26},"end":{"line":118,"column":35}},"71":{"start":{"line":119,"column":29},"end":{"line":119,"column":31}},"72":{"start":{"line":120,"column":12},"end":{"line":142,"column":13}},"73":{"start":{"line":121,"column":16},"end":{"line":141,"column":17}},"74":{"start":{"line":123,"column":20},"end":{"line":138,"column":21}},"75":{"start":{"line":124,"column":35},"end":{"line":124,"column":54}},"76":{"start":{"line":125,"column":24},"end":{"line":137,"column":25}},"77":{"start":{"line":126,"column":28},"end":{"line":135,"column":31}},"78":{"start":{"line":129,"column":45},"end":{"line":129,"column":68}},"79":{"start":{"line":130,"column":45},"end":{"line":130,"column":61}},"80":{"start":{"line":131,"column":32},"end":{"line":131,"column":60}},"81":{"start":{"line":134,"column":32},"end":{"line":134,"column":57}},"82":{"start":{"line":136,"column":28},"end":{"line":136,"column":54}},"83":{"start":{"line":143,"column":12},"end":{"line":143,"column":40}},"84":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"85":{"start":{"line":145,"column":16},"end":{"line":145,"column":77}},"86":{"start":{"line":147,"column":12},"end":{"line":147,"column":97}},"87":{"start":{"line":148,"column":12},"end":{"line":148,"column":94}},"88":{"start":{"line":151,"column":12},"end":{"line":151,"column":83}},"89":{"start":{"line":155,"column":8},"end":{"line":200,"column":9}},"90":{"start":{"line":156,"column":33},"end":{"line":156,"column":63}},"91":{"start":{"line":157,"column":24},"end":{"line":157,"column":45}},"92":{"start":{"line":158,"column":12},"end":{"line":158,"column":46}},"93":{"start":{"line":159,"column":24},"end":{"line":159,"column":46}},"94":{"start":{"line":160,"column":12},"end":{"line":162,"column":13}},"95":{"start":{"line":161,"column":16},"end":{"line":161,"column":77}},"96":{"start":{"line":163,"column":31},"end":{"line":163,"column":56}},"97":{"start":{"line":164,"column":30},"end":{"line":164,"column":63}},"98":{"start":{"line":165,"column":24},"end":{"line":165,"column":47}},"99":{"start":{"line":166,"column":28},"end":{"line":166,"column":59}},"100":{"start":{"line":167,"column":31},"end":{"line":167,"column":63}},"101":{"start":{"line":168,"column":27},"end":{"line":168,"column":41}},"102":{"start":{"line":169,"column":12},"end":{"line":189,"column":13}},"103":{"start":{"line":171,"column":27},"end":{"line":171,"column":47}},"104":{"start":{"line":172,"column":16},"end":{"line":188,"column":17}},"105":{"start":{"line":173,"column":39},"end":{"line":173,"column":54}},"106":{"start":{"line":174,"column":20},"end":{"line":187,"column":21}},"107":{"start":{"line":175,"column":24},"end":{"line":185,"column":37}},"108":{"start":{"line":178,"column":28},"end":{"line":183,"column":29}},"109":{"start":{"line":179,"column":45},"end":{"line":179,"column":81}},"110":{"start":{"line":180,"column":32},"end":{"line":180,"column":65}},"111":{"start":{"line":186,"column":24},"end":{"line":186,"column":50}},"112":{"start":{"line":190,"column":12},"end":{"line":190,"column":40}},"113":{"start":{"line":191,"column":12},"end":{"line":191,"column":36}},"114":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"115":{"start":{"line":193,"column":16},"end":{"line":193,"column":74}},"116":{"start":{"line":195,"column":12},"end":{"line":195,"column":92}},"117":{"start":{"line":196,"column":12},"end":{"line":196,"column":89}},"118":{"start":{"line":199,"column":12},"end":{"line":199,"column":83}},"119":{"start":{"line":203,"column":19},"end":{"line":208,"column":9}},"120":{"start":{"line":209,"column":8},"end":{"line":209,"column":112}},"121":{"start":{"line":212,"column":22},"end":{"line":212,"column":24}},"122":{"start":{"line":213,"column":19},"end":{"line":217,"column":9}},"123":{"start":{"line":218,"column":8},"end":{"line":218,"column":58}},"124":{"start":{"line":219,"column":8},"end":{"line":223,"column":9}},"125":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"126":{"start":{"line":221,"column":16},"end":{"line":221,"column":47}},"127":{"start":{"line":224,"column":8},"end":{"line":224,"column":40}},"128":{"start":{"line":227,"column":0},"end":{"line":227,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":21,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":40},"end":{"line":33,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":28},"end":{"line":49,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":24},"end":{"line":70,"column":5}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":27},"end":{"line":51,"column":28}},"loc":{"start":{"line":51,"column":48},"end":{"line":69,"column":9}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":19},"end":{"line":81,"column":5}},"line":71},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":27},"end":{"line":72,"column":28}},"loc":{"start":{"line":72,"column":48},"end":{"line":80,"column":9}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":17},"end":{"line":99,"column":5}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":21},"end":{"line":111,"column":5}},"line":100},"10":{"name":"(anonymous_10)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":41},"end":{"line":153,"column":5}},"line":112},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":38},"end":{"line":128,"column":39}},"loc":{"start":{"line":128,"column":55},"end":{"line":132,"column":29}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":133,"column":39},"end":{"line":133,"column":40}},"loc":{"start":{"line":133,"column":46},"end":{"line":135,"column":29}},"line":133},"13":{"name":"(anonymous_13)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":39},"end":{"line":201,"column":5}},"line":154},"14":{"name":"(anonymous_14)","decl":{"start":{"line":177,"column":34},"end":{"line":177,"column":35}},"loc":{"start":{"line":177,"column":55},"end":{"line":184,"column":25}},"line":177},"15":{"name":"(anonymous_15)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":38},"end":{"line":210,"column":5}},"line":202},"16":{"name":"(anonymous_16)","decl":{"start":{"line":211,"column":4},"end":{"line":211,"column":5}},"loc":{"start":{"line":211,"column":34},"end":{"line":225,"column":5}},"line":211}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"4":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"5":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"6":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"7":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"8":{"loc":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},{"start":{"line":55,"column":16},"end":{"line":57,"column":17}}],"line":55},"9":{"loc":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},{"start":{"line":58,"column":16},"end":{"line":60,"column":17}}],"line":58},"10":{"loc":{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},"type":"if","locations":[{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},{"start":{"line":75,"column":16},"end":{"line":77,"column":17}}],"line":75},"11":{"loc":{"start":{"line":103,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":108,"column":13}},{"start":{"line":103,"column":12},"end":{"line":108,"column":13}}],"line":103},"12":{"loc":{"start":{"line":106,"column":17},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":17},"end":{"line":108,"column":13}},{"start":{"line":106,"column":17},"end":{"line":108,"column":13}}],"line":106},"13":{"loc":{"start":{"line":123,"column":20},"end":{"line":138,"column":21}},"type":"if","locations":[{"start":{"line":123,"column":20},"end":{"line":138,"column":21}},{"start":{"line":123,"column":20},"end":{"line":138,"column":21}}],"line":123},"14":{"loc":{"start":{"line":123,"column":24},"end":{"line":123,"column":86}},"type":"binary-expr","locations":[{"start":{"line":123,"column":24},"end":{"line":123,"column":43}},{"start":{"line":123,"column":47},"end":{"line":123,"column":86}}],"line":123},"15":{"loc":{"start":{"line":125,"column":24},"end":{"line":137,"column":25}},"type":"if","locations":[{"start":{"line":125,"column":24},"end":{"line":137,"column":25}},{"start":{"line":125,"column":24},"end":{"line":137,"column":25}}],"line":125},"16":{"loc":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},{"start":{"line":144,"column":12},"end":{"line":146,"column":13}}],"line":144},"17":{"loc":{"start":{"line":160,"column":12},"end":{"line":162,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":162,"column":13}},{"start":{"line":160,"column":12},"end":{"line":162,"column":13}}],"line":160},"18":{"loc":{"start":{"line":172,"column":16},"end":{"line":188,"column":17}},"type":"if","locations":[{"start":{"line":172,"column":16},"end":{"line":188,"column":17}},{"start":{"line":172,"column":16},"end":{"line":188,"column":17}}],"line":172},"19":{"loc":{"start":{"line":172,"column":20},"end":{"line":172,"column":52}},"type":"binary-expr","locations":[{"start":{"line":172,"column":20},"end":{"line":172,"column":24}},{"start":{"line":172,"column":28},"end":{"line":172,"column":52}}],"line":172},"20":{"loc":{"start":{"line":174,"column":20},"end":{"line":187,"column":21}},"type":"if","locations":[{"start":{"line":174,"column":20},"end":{"line":187,"column":21}},{"start":{"line":174,"column":20},"end":{"line":187,"column":21}}],"line":174},"21":{"loc":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},{"start":{"line":192,"column":12},"end":{"line":194,"column":13}}],"line":192},"22":{"loc":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},{"start":{"line":220,"column":12},"end":{"line":222,"column":13}}],"line":220}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":71,"13":71,"14":71,"15":91,"16":8,"17":83,"18":4,"19":79,"20":54,"21":25,"22":18,"23":3,"24":15,"25":3,"26":12,"27":12,"28":12,"29":12,"30":0,"31":113,"32":113,"33":113,"34":113,"35":113,"36":0,"37":113,"38":2,"39":111,"40":50,"41":50,"42":43,"43":70,"44":15,"45":15,"46":15,"47":20,"48":17,"49":15,"50":71,"51":71,"52":71,"53":71,"54":10,"55":10,"56":10,"57":0,"58":120,"59":120,"60":514,"61":7,"62":507,"63":474,"64":113,"65":54,"66":54,"67":54,"68":54,"69":54,"70":51,"71":51,"72":51,"73":30021,"74":30021,"75":29926,"76":29926,"77":29926,"78":29926,"79":29921,"80":29921,"81":9,"82":29926,"83":51,"84":51,"85":11,"86":40,"87":40,"88":14,"89":25,"90":25,"91":25,"92":25,"93":22,"94":22,"95":6,"96":16,"97":16,"98":16,"99":16,"100":16,"101":16,"102":16,"103":309,"104":309,"105":309,"106":309,"107":89,"108":89,"109":89,"110":89,"111":89,"112":16,"113":16,"114":16,"115":11,"116":5,"117":5,"118":20,"119":45,"120":45,"121":45,"122":45,"123":45,"124":45,"125":59,"126":59,"127":45,"128":1},"f":{"0":5,"1":71,"2":91,"3":18,"4":113,"5":113,"6":15,"7":15,"8":71,"9":120,"10":54,"11":29926,"12":9,"13":25,"14":89,"15":45,"16":45},"b":{"0":[1,1,1],"1":[3,2],"2":[5,5],"3":[8,83],"4":[4,79],"5":[54,25],"6":[3,15],"7":[3,12],"8":[0,113],"9":[2,111],"10":[17,3],"11":[7,507],"12":[474,33],"13":[29926,95],"14":[30021,29981],"15":[29926,0],"16":[11,40],"17":[6,16],"18":[309,0],"19":[309,309],"20":[89,220],"21":[11,5],"22":[59,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/InsightFacade.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport Sections from \"../models/Sections\";\nimport Rooms from \"../models/Rooms\";\n\nimport fs from \"fs-extra\";\nimport JSZip from \"jszip\";\nimport QueryValidator from \"../utils/QueryValidator\";\nimport {Query} from \"../models/Query\";\nimport {JSONQuery} from \"../models/IQuery\";\nimport {parse} from \"parse5\";\nimport {Document} from \"parse5/dist/tree-adapters/default\";\n\nconst persistDir = \"./data\";\n// const tempDir = \"./temp\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n */\nexport default class InsightFacade implements IInsightFacade {\n\t// Datasets is a map of dataset ids to if they are used or not.\n\tprivate static datasets: Map<string, InsightDataset | false>;\n\n\tconstructor() {\n\t\tInsightFacade.datasets = new Map();\n\t\tthis.initialize();\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t}\n\n\t// 1. Check valid InsightDatasetKind\n\t// 2. Check valid id\n\t// 3. Check Valid content\n\t// 4. Add dataset\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tif (this.isNotValidID(id)) {\n\t\t\t// Reject if id is not valid\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\n\t\t}\n\t\t// Reject if a dataset with the same id is already present\n\t\tif (InsightFacade.datasets.get(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"id already present in dataset\"));\n\t\t}\n\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\treturn this.addSectionDataset(id, content);\n\t\t}\n\t\treturn this.addRoomsDataset(id, content);\n\t}\n\n\t// 1. Check valid id\n\t// 2. Check id is in dataset\n\t// 3. Remove dataset\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tif (this.isNotValidID(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\n\t\t}\n\t\tif (!InsightFacade.datasets.get(id)) {\n\t\t\treturn Promise.reject(new NotFoundError(\"ID not present in dataset\"));\n\t\t}\n\n\t\ttry {\n\t\t\tawait fs.remove(persistDir + \"/\" + id + \".json\");\n\t\t\tInsightFacade.datasets.set(id, false);\n\t\t\treturn Promise.resolve(id);\n\t\t} catch {\n\t\t\treturn Promise.reject(new InsightError(\"Error removing dataset\"));\n\t\t}\n\t}\n\n\t// 1. Check dataset is present\n\t// 2. Check Query is valid\n\t// 3. Check id is a query that was added\n\t// 4. Check that output is not too large\n\t// 5. return output\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet results: InsightResult[] = [];\n\t\t\tlet QV: QueryValidator = new QueryValidator();\n\n\t\t\ttry {\n\t\t\t\tif (!fs.pathExistsSync(persistDir)) {\n\t\t\t\t\tthrow new InsightError(\"No datasets added\");\n\t\t\t\t}\n\n\t\t\t\tif (typeof query !== \"object\") {\n\t\t\t\t\tthrow new InsightError(\"Query must be an object\");\n\t\t\t\t}\n\t\t\t\tQV.validateQuery(query as object);\n\t\t\t\tlet parsedQuery = new Query(query as JSONQuery);\n\t\t\t\tresults = parsedQuery.execute();\n\t\t\t\tresolve(results);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet result: InsightDataset[] = [];\n\t\t\tfor (let dataset of InsightFacade.datasets.values()) {\n\t\t\t\tif (dataset) {\n\t\t\t\t\tresult.push(dataset);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve(result);\n\t\t});\n\t}\n\n\tprivate initialize(): void {\n\t\ttry {\n\t\t\tfs.ensureDirSync(persistDir);\n\t\t\tlet files = fs.readdirSync(persistDir);\n\t\t\tfor (let file of files) {\n\t\t\t\tlet object = fs.readJSONSync(persistDir + \"/\" + file);\n\t\t\t\tlet data: InsightDataset = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tkind: object.kind,\n\t\t\t\t\tnumRows: object.numRows,\n\t\t\t\t};\n\t\t\t\tInsightFacade.datasets.set(object.id, data);\n\t\t\t}\n\t\t} catch {\n\t\t\tconsole.error(\"Unable to initialize directory\");\n\t\t}\n\t}\n\n\t// Returns true if id is an empty string, contains only white space or contains an undersore\n\tpublic isNotValidID(id: string): boolean {\n\t\tlet isNotValid: boolean = true;\n\t\tfor (let letter of id) {\n\t\t\tif (letter === \"_\") {\n\t\t\t\treturn true;\n\t\t\t} else if (letter !== \" \") {\n\t\t\t\tisNotValid = false;\n\t\t\t}\n\t\t}\n\t\treturn isNotValid;\n\t}\n\n\tprivate async addSectionDataset(id: string, content: string): Promise<string[]> {\n\t\ttry {\n\t\t\tlet dataset = new Sections(id);\n\t\t\tconst stringBuffer = Buffer.from(content, \"base64\");\n\t\t\tconst zip = new JSZip();\n\t\t\tawait zip.loadAsync(stringBuffer);\n\t\t\tconst files = zip.files;\n\n\t\t\tconst promises = [];\n\n\t\t\tfor (let fileName of Object.keys(files)) {\n\t\t\t\ttry {\n\t\t\t\t\tlet newPromise;\n\t\t\t\t\tif (fileName.length > 8 && fileName.substring(0, 8) === \"courses/\") {\n\t\t\t\t\t\tlet file = zip.files[fileName];\n\t\t\t\t\t\tif (!file.dir) {\n\t\t\t\t\t\t\tnewPromise = file\n\t\t\t\t\t\t\t\t.async(\"text\")\n\t\t\t\t\t\t\t\t.then((fileContent) => {\n\t\t\t\t\t\t\t\t\tlet object = JSON.parse(fileContent);\n\t\t\t\t\t\t\t\t\tlet result = object[\"result\"];\n\t\t\t\t\t\t\t\t\tdataset.addSections(result);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t}); // Catch any error\n\t\t\t\t\t\t\tpromises.push(newPromise);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch {\n\t\t\t\t\t// It's ok to catch a single itteration\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait Promise.all(promises);\n\n\t\t\tif (dataset.getSize() < 1) {\n\t\t\t\tthrow new InsightError(\"No valid sections\");\n\t\t\t}\n\t\t\tawait this.writeDatasetToFile(dataset, InsightDatasetKind.Sections);\n\t\t\treturn this.updateDatasets(dataset, InsightDatasetKind.Sections);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"Error extracting data: \" + e);\n\t\t}\n\t}\n\n\tprivate async addRoomsDataset(id: string, content: string): Promise<string[]> {\n\t\ttry {\n\t\t\tconst stringBuffer = Buffer.from(content, \"base64\");\n\t\t\tconst zip = new JSZip();\n\t\t\tawait zip.loadAsync(stringBuffer);\n\t\t\tlet index = zip.files[\"index.htm\"];\n\t\t\tif (!index) {\n\t\t\t\tthrow new InsightError(\"No index.htm file\");\n\t\t\t}\n\t\t\tlet indexContent = await index.async(\"text\");\n\t\t\tlet htmlContent = parse(indexContent);\n\t\t\tlet rooms = new Rooms(id);\n\t\t\tlet buildings = rooms.addBuildings(htmlContent);\n\t\t\tlet firstPromise = rooms.getGeolocations(buildings);\n\t\t\tlet promises = [firstPromise];\n\t\t\tfor (let building of buildings) {\n\t\t\t\tlet newPromise;\n\t\t\t\tlet link = building.get(\"href\");\n\t\t\t\tif (link && typeof link === \"string\") {\n\t\t\t\t\tlet buildingFile = zip.files[link];\n\t\t\t\t\tif (buildingFile) {\n\t\t\t\t\t\tnewPromise = buildingFile\n\t\t\t\t\t\t\t.async(\"text\")\n\t\t\t\t\t\t\t.then((buildingContent) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tlet parsed = parse(buildingContent);\n\t\t\t\t\t\t\t\t\trooms.addRooms(parsed, building);\n\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(); // Do nothing\n\t\t\t\t\t\tpromises.push(newPromise);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait Promise.all(promises);\n\t\t\trooms.update(buildings);\n\t\t\t\n\t\t\tif (rooms.getSize() < 1) {\n\t\t\t\tthrow new InsightError(\"No valid rooms\");\n\t\t\t}\n\t\t\tawait this.writeDatasetToFile(rooms, InsightDatasetKind.Rooms);\n\t\t\treturn this.updateDatasets(rooms, InsightDatasetKind.Rooms);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"Error extracting data: \" + e);\n\t\t}\n\t}\n\n\tprivate writeDatasetToFile(dataset: Sections | Rooms, kind: InsightDatasetKind): Promise<void> {\n\t\tlet data = {\n\t\t\tid: dataset.getId(),\n\t\t\tkind: kind,\n\t\t\tnumRows: dataset.getSize(),\n\t\t\tsections: dataset.getSections(),\n\t\t};\n\t\treturn fs.writeFile(persistDir + \"/\" + dataset.getId() + \".json\", JSON.stringify(data));\n\t}\n\n\tprivate updateDatasets(dataset: Sections | Rooms, kind: InsightDatasetKind): Promise<string[]> {\n\t\tlet results: string[] = [];\n\t\tlet data: InsightDataset = {\n\t\t\tid: dataset.getId(),\n\t\t\tkind: kind,\n\t\t\tnumRows: dataset.getSize(),\n\t\t};\n\t\tInsightFacade.datasets.set(dataset.getId(), data);\n\t\tfor (let potentialDataset of InsightFacade.datasets.keys()) {\n\t\t\tif (InsightFacade.datasets.get(potentialDataset)) {\n\t\t\t\tresults.push(potentialDataset);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(results);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d5ee6e5870c458ab63ece6a9e85f19227550ad6","contentHash":"372c474254143e244301420e90c5027798875a4d96615d771d706071342330f5"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Sections.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Sections.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":65}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"9":{"start":{"line":25,"column":20},"end":{"line":25,"column":29}},"10":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"11":{"start":{"line":27,"column":12},"end":{"line":27,"column":41}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":19}},"13":{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},"14":{"start":{"line":33,"column":12},"end":{"line":39,"column":13}},"15":{"start":{"line":34,"column":41},"end":{"line":34,"column":65}},"16":{"start":{"line":35,"column":16},"end":{"line":35,"column":53}},"17":{"start":{"line":36,"column":16},"end":{"line":36,"column":28}},"18":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"19":{"start":{"line":44,"column":12},"end":{"line":44,"column":73}},"20":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"21":{"start":{"line":47,"column":12},"end":{"line":47,"column":37}},"22":{"start":{"line":51,"column":25},"end":{"line":62,"column":9}},"23":{"start":{"line":63,"column":8},"end":{"line":63,"column":26}},"24":{"start":{"line":66,"column":20},"end":{"line":66,"column":32}},"25":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"26":{"start":{"line":68,"column":12},"end":{"line":68,"column":75}},"27":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"28":{"start":{"line":71,"column":12},"end":{"line":71,"column":23}},"29":{"start":{"line":73,"column":8},"end":{"line":87,"column":9}},"30":{"start":{"line":74,"column":12},"end":{"line":83,"column":13}},"31":{"start":{"line":75,"column":16},"end":{"line":75,"column":38}},"32":{"start":{"line":78,"column":29},"end":{"line":78,"column":46}},"33":{"start":{"line":79,"column":16},"end":{"line":81,"column":17}},"34":{"start":{"line":80,"column":20},"end":{"line":80,"column":62}},"35":{"start":{"line":82,"column":16},"end":{"line":82,"column":30}},"36":{"start":{"line":86,"column":12},"end":{"line":86,"column":93}},"37":{"start":{"line":90,"column":8},"end":{"line":90,"column":54}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":54}},"39":{"start":{"line":96,"column":8},"end":{"line":101,"column":9}},"40":{"start":{"line":97,"column":12},"end":{"line":97,"column":24}},"41":{"start":{"line":100,"column":12},"end":{"line":100,"column":53}},"42":{"start":{"line":104,"column":0},"end":{"line":104,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":20},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":14},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":23},"end":{"line":30,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":30},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":43},"end":{"line":28,"column":9}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":24},"end":{"line":41,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":26},"end":{"line":49,"column":5}},"line":42},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":24},"end":{"line":64,"column":5}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":34},"end":{"line":88,"column":5}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":30},"end":{"line":91,"column":5}},"line":89},"11":{"name":"(anonymous_11)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":30},"end":{"line":94,"column":5}},"line":92},"12":{"name":"(anonymous_12)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":21},"end":{"line":102,"column":5}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},{"start":{"line":32,"column":8},"end":{"line":40,"column":9}}],"line":32},"1":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"2":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{"line":67,"column":8},"end":{"line":69,"column":9}}],"line":67},"3":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"4":{"loc":{"start":{"line":74,"column":12},"end":{"line":83,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":83,"column":13}},{"start":{"line":74,"column":12},"end":{"line":83,"column":13}}],"line":74},"5":{"loc":{"start":{"line":79,"column":16},"end":{"line":81,"column":17}},"type":"if","locations":[{"start":{"line":79,"column":16},"end":{"line":81,"column":17}},{"start":{"line":79,"column":16},"end":{"line":81,"column":17}}],"line":79},"6":{"loc":{"start":{"line":79,"column":20},"end":{"line":79,"column":43}},"type":"binary-expr","locations":[{"start":{"line":79,"column":20},"end":{"line":79,"column":27}},{"start":{"line":79,"column":31},"end":{"line":79,"column":43}}],"line":79},"7":{"loc":{"start":{"line":96,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":101,"column":9}},{"start":{"line":96,"column":8},"end":{"line":101,"column":9}}],"line":96}},"s":{"0":1,"1":1,"2":116,"3":116,"4":116,"5":116,"6":160,"7":143,"8":132,"9":43,"10":43,"11":2778316,"12":43,"13":3309787,"14":3309786,"15":3309786,"16":3309761,"17":3309761,"18":29970,"19":3,"20":29967,"21":3309778,"22":3309786,"23":3309761,"24":32973802,"25":32973802,"26":23,"27":32973779,"28":32422471,"29":551308,"30":551308,"31":337621,"32":213687,"33":213687,"34":2,"35":213685,"36":2,"37":16548892,"38":16424910,"39":3309774,"40":123933,"41":3185841,"42":1},"f":{"0":116,"1":160,"2":143,"3":132,"4":43,"5":2778316,"6":3309787,"7":29970,"8":3309786,"9":32973802,"10":16548892,"11":16424910,"12":3309774},"b":{"0":[3309786,1],"1":[3,29967],"2":[23,32973779],"3":[32422471,551308],"4":[337621,213687],"5":[2,213685],"6":[213687,4],"7":[123933,3185841]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Sections.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Sections.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\n\nexport interface Section {\n\tid: string;\n\tCourse: string;\n\tTitle: string;\n\tProfessor: string;\n\tSubject: string;\n\tYear: number;\n\tAvg: number;\n\tPass: number;\n\tFail: number;\n\tAudit: number;\n}\n\nexport default class Sections {\n\tprivate id: string;\n\tprivate size: number;\n\tprivate sections: Section[];\n\tprivate kind: InsightDatasetKind;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t\tthis.size = 0;\n\t\tthis.sections = [];\n\t\tthis.kind = InsightDatasetKind.Sections;\n\t}\n\n\t// Getters\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getSize(): number {\n\t\treturn this.size;\n\t}\n\n\tpublic getSections(): Section[] {\n\t\treturn this.sections;\n\t}\n\n\tpublic getSectionsAsMap(): Map<string, Section> {\n\t\tconst map = new Map<string, Section>();\n\t\tthis.sections.forEach((section) => {\n\t\t\tmap.set(section.id, section);\n\t\t});\n\t\treturn map;\n\t}\n\n\t// Adds section to this.section and increases size by 1\n\t// If section is missing required keys then it does not add\n\tpublic addSection(section: any): void {\n\t\tif (section !== undefined) {\n\t\t\ttry {\n\t\t\t\tconst formattedSection: Section = this.newSection(section);\n\t\t\t\tthis.sections.push(formattedSection);\n\t\t\t\t// console.log(this.sections)\n\t\t\t\tthis.size++;\n\t\t\t} catch {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t}\n\n\t// Adds sections to a dataset\n\t// Throws InsightError if input list is empty\n\tpublic addSections(sections: any[]): void {\n\t\t// console.log(this.getSize())\n\t\tif (sections === undefined) {\n\t\t\tthrow new InsightError(\"No valid sections\");\n\t\t}\n\t\tfor (let section of sections) {\n\t\t\tthis.addSection(section);\n\t\t}\n\t\t// console.log(this.getSize())\n\t}\n\n\tprivate newSection(section: any): Section {\n\t\tlet newSection: Section = {\n\t\t\tid: this.keyToString(section, \"id\"),\n\t\t\tCourse: this.keyToString(section, \"Course\"),\n\t\t\tTitle: this.keyToString(section, \"Title\"),\n\t\t\tProfessor: this.keyToString(section, \"Professor\"),\n\t\t\tSubject: this.keyToString(section, \"Subject\"),\n\t\t\tYear: this.getYear(section),\n\t\t\tAvg: this.keyToNumber(section, \"Avg\"),\n\t\t\tPass: this.keyToNumber(section, \"Pass\"),\n\t\t\tFail: this.keyToNumber(section, \"Fail\"),\n\t\t\tAudit: this.keyToNumber(section, \"Audit\"),\n\t\t};\n\t\treturn newSection;\n\t}\n\n\t// Checks the type of the key and tries to conver to type, otherwise throws InsightError\n\tprivate keyToType(section: any, key: string, type: \"string\" | \"number\"): string | number {\n\t\tconst obj = section[key];\n\t\tif (obj === undefined) {\n\t\t\tthrow new InsightError(key + \" is undefined\");\n\t\t}\n\t\tif (typeof obj === type) {\n\t\t\treturn obj;\n\t\t}\n\n\t\ttry {\n\t\t\tif (type === \"string\") {\n\t\t\t\t// console.log(\"returning: \" + key)\n\t\t\t\treturn obj.toString();\n\t\t\t} else {\n\t\t\t\tlet result = parseInt(obj, 10);\n\t\t\t\tif (!result && result !== 0) {\n\t\t\t\t\tthrow new InsightError();\n\t\t\t\t}\n\t\t\t\t// console.log(\"returning: \" + key);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch {\n\t\t\tthrow new InsightError(key + \" cannot be converted to \" + type);\n\t\t}\n\t}\n\n\tprivate keyToString(section: any, key: string): string {\n\t\treturn this.keyToType(section, key, \"string\") as string;\n\t}\n\n\tprivate keyToNumber(section: any, key: string): number {\n\t\treturn this.keyToType(section, key, \"number\") as number;\n\t}\n\n\tprivate getYear(section: any): number {\n\t\tif (section[\"Section\"] === \"overall\") {\n\t\t\treturn 1900;\n\t\t} else {\n\t\t\treturn this.keyToNumber(section, \"Year\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"86f46e57f3e8daecea6a2310a214ddd4c0777a27","contentHash":"e173b26922c2b5b88a1c6f14522be32385d64005f42b0a50e2744d3ef7d823c1"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Rooms.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Rooms.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":57}},"4":{"start":{"line":11,"column":16},"end":{"line":11,"column":79}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":21}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":22}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":26}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":26}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"12":{"start":{"line":30,"column":24},"end":{"line":30,"column":26}},"13":{"start":{"line":31,"column":21},"end":{"line":31,"column":50}},"14":{"start":{"line":32,"column":8},"end":{"line":41,"column":9}},"15":{"start":{"line":33,"column":23},"end":{"line":33,"column":52}},"16":{"start":{"line":34,"column":23},"end":{"line":34,"column":51}},"17":{"start":{"line":35,"column":12},"end":{"line":40,"column":13}},"18":{"start":{"line":36,"column":31},"end":{"line":36,"column":52}},"19":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"20":{"start":{"line":38,"column":20},"end":{"line":38,"column":45}},"21":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"22":{"start":{"line":45,"column":29},"end":{"line":45,"column":65}},"23":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"24":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"25":{"start":{"line":48,"column":16},"end":{"line":48,"column":29}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"27":{"start":{"line":54,"column":23},"end":{"line":54,"column":32}},"28":{"start":{"line":55,"column":8},"end":{"line":55,"column":116}},"29":{"start":{"line":56,"column":8},"end":{"line":56,"column":115}},"30":{"start":{"line":57,"column":8},"end":{"line":57,"column":100}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":76}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":24}},"33":{"start":{"line":62,"column":20},"end":{"line":62,"column":22}},"34":{"start":{"line":63,"column":21},"end":{"line":63,"column":60}},"35":{"start":{"line":64,"column":8},"end":{"line":79,"column":9}},"36":{"start":{"line":65,"column":23},"end":{"line":65,"column":52}},"37":{"start":{"line":66,"column":23},"end":{"line":66,"column":51}},"38":{"start":{"line":67,"column":12},"end":{"line":78,"column":13}},"39":{"start":{"line":68,"column":27},"end":{"line":68,"column":44}},"40":{"start":{"line":69,"column":32},"end":{"line":69,"column":57}},"41":{"start":{"line":70,"column":29},"end":{"line":70,"column":47}},"42":{"start":{"line":71,"column":16},"end":{"line":74,"column":17}},"43":{"start":{"line":72,"column":31},"end":{"line":72,"column":55}},"44":{"start":{"line":73,"column":20},"end":{"line":73,"column":43}},"45":{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},"46":{"start":{"line":76,"column":20},"end":{"line":76,"column":37}},"47":{"start":{"line":80,"column":8},"end":{"line":80,"column":37}},"48":{"start":{"line":83,"column":8},"end":{"line":107,"column":9}},"49":{"start":{"line":84,"column":24},"end":{"line":84,"column":45}},"50":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"51":{"start":{"line":86,"column":16},"end":{"line":86,"column":25}},"52":{"start":{"line":88,"column":12},"end":{"line":106,"column":13}},"53":{"start":{"line":89,"column":16},"end":{"line":105,"column":17}},"54":{"start":{"line":90,"column":35},"end":{"line":102,"column":21}},"55":{"start":{"line":103,"column":20},"end":{"line":103,"column":46}},"56":{"start":{"line":104,"column":20},"end":{"line":104,"column":32}},"57":{"start":{"line":110,"column":27},"end":{"line":110,"column":83}},"58":{"start":{"line":111,"column":8},"end":{"line":115,"column":9}},"59":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"60":{"start":{"line":113,"column":16},"end":{"line":113,"column":29}},"61":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"62":{"start":{"line":117,"column":12},"end":{"line":117,"column":25}},"63":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"64":{"start":{"line":122,"column":19},"end":{"line":122,"column":28}},"65":{"start":{"line":123,"column":8},"end":{"line":123,"column":107}},"66":{"start":{"line":124,"column":8},"end":{"line":124,"column":104}},"67":{"start":{"line":125,"column":8},"end":{"line":125,"column":98}},"68":{"start":{"line":126,"column":8},"end":{"line":126,"column":94}},"69":{"start":{"line":127,"column":8},"end":{"line":127,"column":45}},"70":{"start":{"line":128,"column":8},"end":{"line":128,"column":20}},"71":{"start":{"line":131,"column":21},"end":{"line":131,"column":23}},"72":{"start":{"line":132,"column":19},"end":{"line":132,"column":25}},"73":{"start":{"line":133,"column":8},"end":{"line":143,"column":9}},"74":{"start":{"line":134,"column":23},"end":{"line":134,"column":33}},"75":{"start":{"line":135,"column":12},"end":{"line":139,"column":13}},"76":{"start":{"line":136,"column":16},"end":{"line":138,"column":17}},"77":{"start":{"line":137,"column":20},"end":{"line":137,"column":37}},"78":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"79":{"start":{"line":141,"column":16},"end":{"line":141,"column":34}},"80":{"start":{"line":144,"column":8},"end":{"line":144,"column":22}},"81":{"start":{"line":147,"column":19},"end":{"line":147,"column":23}},"82":{"start":{"line":148,"column":8},"end":{"line":155,"column":9}},"83":{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},"84":{"start":{"line":150,"column":16},"end":{"line":150,"column":42}},"85":{"start":{"line":153,"column":16},"end":{"line":153,"column":42}},"86":{"start":{"line":156,"column":8},"end":{"line":156,"column":20}},"87":{"start":{"line":159,"column":20},"end":{"line":159,"column":45}},"88":{"start":{"line":160,"column":8},"end":{"line":176,"column":9}},"89":{"start":{"line":161,"column":29},"end":{"line":161,"column":39}},"90":{"start":{"line":162,"column":12},"end":{"line":175,"column":13}},"91":{"start":{"line":163,"column":16},"end":{"line":174,"column":17}},"92":{"start":{"line":164,"column":20},"end":{"line":173,"column":21}},"93":{"start":{"line":168,"column":36},"end":{"line":168,"column":66}},"94":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"95":{"start":{"line":170,"column":28},"end":{"line":170,"column":38}},"96":{"start":{"line":172,"column":24},"end":{"line":172,"column":87}},"97":{"start":{"line":177,"column":8},"end":{"line":177,"column":25}},"98":{"start":{"line":180,"column":29},"end":{"line":180,"column":53}},"99":{"start":{"line":181,"column":8},"end":{"line":190,"column":9}},"100":{"start":{"line":182,"column":29},"end":{"line":182,"column":39}},"101":{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},"102":{"start":{"line":184,"column":16},"end":{"line":188,"column":17}},"103":{"start":{"line":185,"column":20},"end":{"line":187,"column":21}},"104":{"start":{"line":186,"column":24},"end":{"line":186,"column":47}},"105":{"start":{"line":191,"column":8},"end":{"line":191,"column":25}},"106":{"start":{"line":194,"column":23},"end":{"line":194,"column":25}},"107":{"start":{"line":195,"column":8},"end":{"line":221,"column":9}},"108":{"start":{"line":196,"column":26},"end":{"line":196,"column":49}},"109":{"start":{"line":197,"column":12},"end":{"line":220,"column":13}},"110":{"start":{"line":198,"column":16},"end":{"line":219,"column":17}},"111":{"start":{"line":199,"column":20},"end":{"line":199,"column":58}},"112":{"start":{"line":200,"column":34},"end":{"line":215,"column":22}},"113":{"start":{"line":201,"column":24},"end":{"line":214,"column":27}},"114":{"start":{"line":202,"column":39},"end":{"line":202,"column":41}},"115":{"start":{"line":203,"column":28},"end":{"line":205,"column":31}},"116":{"start":{"line":204,"column":32},"end":{"line":204,"column":46}},"117":{"start":{"line":206,"column":28},"end":{"line":211,"column":31}},"118":{"start":{"line":207,"column":45},"end":{"line":207,"column":61}},"119":{"start":{"line":208,"column":32},"end":{"line":208,"column":67}},"120":{"start":{"line":209,"column":32},"end":{"line":209,"column":67}},"121":{"start":{"line":210,"column":32},"end":{"line":210,"column":46}},"122":{"start":{"line":213,"column":28},"end":{"line":213,"column":47}},"123":{"start":{"line":216,"column":20},"end":{"line":216,"column":43}},"124":{"start":{"line":222,"column":8},"end":{"line":222,"column":44}},"125":{"start":{"line":225,"column":0},"end":{"line":225,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":20},"end":{"line":16,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":12},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":15},"end":{"line":22,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":18},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":14},"end":{"line":28,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":24},"end":{"line":43,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":30},"end":{"line":52,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":21},"end":{"line":60,"column":5}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":40},"end":{"line":81,"column":5}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":22},"end":{"line":108,"column":5}},"line":82},"11":{"name":"(anonymous_11)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":22},"end":{"line":120,"column":5}},"line":109},"12":{"name":"(anonymous_12)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":17},"end":{"line":129,"column":5}},"line":121},"13":{"name":"(anonymous_13)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":24},"end":{"line":145,"column":5}},"line":130},"14":{"name":"(anonymous_14)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":24},"end":{"line":157,"column":5}},"line":146},"15":{"name":"(anonymous_15)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":36},"end":{"line":178,"column":5}},"line":158},"16":{"name":"(anonymous_16)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":19},"end":{"line":192,"column":5}},"line":179},"17":{"name":"(anonymous_17)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":37},"end":{"line":223,"column":5}},"line":193},"18":{"name":"(anonymous_18)","decl":{"start":{"line":200,"column":46},"end":{"line":200,"column":47}},"loc":{"start":{"line":200,"column":67},"end":{"line":215,"column":21}},"line":200},"19":{"name":"(anonymous_19)","decl":{"start":{"line":201,"column":74},"end":{"line":201,"column":75}},"loc":{"start":{"line":201,"column":88},"end":{"line":212,"column":25}},"line":201},"20":{"name":"(anonymous_20)","decl":{"start":{"line":203,"column":48},"end":{"line":203,"column":49}},"loc":{"start":{"line":203,"column":59},"end":{"line":205,"column":29}},"line":203},"21":{"name":"(anonymous_21)","decl":{"start":{"line":206,"column":47},"end":{"line":206,"column":48}},"loc":{"start":{"line":206,"column":53},"end":{"line":211,"column":29}},"line":206},"22":{"name":"(anonymous_22)","decl":{"start":{"line":212,"column":39},"end":{"line":212,"column":40}},"loc":{"start":{"line":212,"column":52},"end":{"line":214,"column":25}},"line":212}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},{"start":{"line":37,"column":16},"end":{"line":39,"column":17}}],"line":37},"4":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"5":{"loc":{"start":{"line":71,"column":16},"end":{"line":74,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":74,"column":17}},{"start":{"line":71,"column":16},"end":{"line":74,"column":17}}],"line":71},"6":{"loc":{"start":{"line":71,"column":20},"end":{"line":71,"column":67}},"type":"binary-expr","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":43}},{"start":{"line":71,"column":47},"end":{"line":71,"column":67}}],"line":71},"7":{"loc":{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},"type":"if","locations":[{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},{"start":{"line":75,"column":16},"end":{"line":77,"column":17}}],"line":75},"8":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85},"9":{"loc":{"start":{"line":88,"column":12},"end":{"line":106,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":106,"column":13}},{"start":{"line":88,"column":12},"end":{"line":106,"column":13}}],"line":88},"10":{"loc":{"start":{"line":88,"column":16},"end":{"line":88,"column":55}},"type":"binary-expr","locations":[{"start":{"line":88,"column":16},"end":{"line":88,"column":35}},{"start":{"line":88,"column":39},"end":{"line":88,"column":55}}],"line":88},"11":{"loc":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},{"start":{"line":112,"column":12},"end":{"line":114,"column":13}}],"line":112},"12":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"13":{"loc":{"start":{"line":135,"column":12},"end":{"line":139,"column":13}},"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":139,"column":13}},{"start":{"line":135,"column":12},"end":{"line":139,"column":13}}],"line":135},"14":{"loc":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},{"start":{"line":140,"column":12},"end":{"line":142,"column":13}}],"line":140},"15":{"loc":{"start":{"line":148,"column":15},"end":{"line":148,"column":60}},"type":"binary-expr","locations":[{"start":{"line":148,"column":15},"end":{"line":148,"column":30}},{"start":{"line":148,"column":34},"end":{"line":148,"column":60}}],"line":148},"16":{"loc":{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},{"start":{"line":149,"column":12},"end":{"line":154,"column":13}}],"line":149},"17":{"loc":{"start":{"line":162,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":175,"column":13}},{"start":{"line":162,"column":12},"end":{"line":175,"column":13}}],"line":162},"18":{"loc":{"start":{"line":164,"column":20},"end":{"line":173,"column":21}},"type":"if","locations":[{"start":{"line":164,"column":20},"end":{"line":173,"column":21}},{"start":{"line":164,"column":20},"end":{"line":173,"column":21}}],"line":164},"19":{"loc":{"start":{"line":164,"column":24},"end":{"line":167,"column":53}},"type":"binary-expr","locations":[{"start":{"line":164,"column":24},"end":{"line":164,"column":38}},{"start":{"line":165,"column":24},"end":{"line":165,"column":50}},{"start":{"line":166,"column":24},"end":{"line":166,"column":39}},{"start":{"line":167,"column":24},"end":{"line":167,"column":53}}],"line":164},"20":{"loc":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"type":"if","locations":[{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},{"start":{"line":169,"column":24},"end":{"line":171,"column":25}}],"line":169},"21":{"loc":{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},{"start":{"line":183,"column":12},"end":{"line":189,"column":13}}],"line":183},"22":{"loc":{"start":{"line":185,"column":20},"end":{"line":187,"column":21}},"type":"if","locations":[{"start":{"line":185,"column":20},"end":{"line":187,"column":21}},{"start":{"line":185,"column":20},"end":{"line":187,"column":21}}],"line":185},"23":{"loc":{"start":{"line":185,"column":24},"end":{"line":185,"column":67}},"type":"binary-expr","locations":[{"start":{"line":185,"column":24},"end":{"line":185,"column":38}},{"start":{"line":185,"column":42},"end":{"line":185,"column":67}}],"line":185},"24":{"loc":{"start":{"line":197,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":220,"column":13}},{"start":{"line":197,"column":12},"end":{"line":220,"column":13}}],"line":197}},"s":{"0":1,"1":1,"2":1,"3":1,"4":16,"5":16,"6":16,"7":16,"8":20,"9":0,"10":5,"11":26,"12":16,"13":16,"14":16,"15":17,"16":17,"17":17,"18":309,"19":309,"20":309,"21":16,"22":309,"23":309,"24":927,"25":0,"26":309,"27":309,"28":309,"29":309,"30":309,"31":309,"32":309,"33":89,"34":89,"35":89,"36":55,"37":55,"38":55,"39":387,"40":387,"41":387,"42":387,"43":386,"44":386,"45":387,"46":381,"47":89,"48":16,"49":309,"50":309,"51":2,"52":307,"53":48,"54":377,"55":377,"56":377,"57":387,"58":387,"59":2314,"60":4,"61":383,"62":2,"63":381,"64":387,"65":387,"66":387,"67":387,"68":387,"69":387,"70":387,"71":3420,"72":3420,"73":3420,"74":287088,"75":287088,"76":127511,"77":283668,"78":287088,"79":14895,"80":3420,"81":4925,"82":4925,"83":6300,"84":4920,"85":1380,"86":4925,"87":2475,"88":2475,"89":8217,"90":8217,"91":8217,"92":8217,"93":2465,"94":2465,"95":5,"96":2460,"97":10,"98":696,"99":696,"100":694,"101":694,"102":694,"103":694,"104":694,"105":2,"106":16,"107":16,"108":309,"109":309,"110":309,"111":309,"112":309,"113":309,"114":309,"115":309,"116":309,"117":309,"118":309,"119":309,"120":309,"121":309,"122":0,"123":309,"124":16,"125":1},"f":{"0":1,"1":16,"2":20,"3":0,"4":5,"5":26,"6":16,"7":309,"8":309,"9":89,"10":16,"11":387,"12":387,"13":3420,"14":4925,"15":2475,"16":696,"17":16,"18":309,"19":309,"20":309,"21":309,"22":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[309,0],"4":[0,927],"5":[386,1],"6":[387,387],"7":[381,6],"8":[2,307],"9":[48,259],"10":[307,87],"11":[4,2310],"12":[2,381],"13":[127511,159577],"14":[14895,272193],"15":[11225,6305],"16":[4920,1380],"17":[8217,0],"18":[2465,5752],"19":[8217,8217,8217,8217],"20":[5,2460],"21":[694,0],"22":[694,0],"23":[694,694],"24":[309,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Rooms.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\nimport {Document} from \"parse5/dist/tree-adapters/default\";\nimport Http from \"node:http\";\n\nexport interface Room {\n\tnumber: string;\n\tname: string;\n\tseats: number;\n\ttype: string;\n\tfurniture: string;\n\thref: string;\n\tfullname: string;\n\tshortname: string;\n\taddress: string;\n\tlat: number;\n\tlon: number;\n}\n\nexport interface Building {\n\tfullname: string;\n\tshortname: string;\n\taddress: string;\n\tlat: number;\n\tlon: number;\n\trooms: Room[];\n}\n\nexport default class Rooms {\n\tprivate id: string;\n\tprivate rooms: Room[];\n\tprivate size: number;\n\tprivate urlPrefix: string = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team123/\";\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t\tthis.rooms = [];\n\t\tthis.size = 0;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getRooms(): Room[] {\n\t\treturn this.rooms;\n\t}\n\n\tpublic getSections(): Room[] {\n\t\treturn this.rooms;\n\t}\n\n\tpublic getSize(): number {\n\t\treturn this.size;\n\t}\n\n\t// Searches nodes for links to building files\n\tpublic addBuildings(index: any): Array<Map<string, string | undefined>> {\n\t\tlet buildings = [];\n\t\tlet tables = this.findTags(index, \"table\");\n\t\tfor (const table of tables) {\n\t\t\tlet body = this.findTags(table, \"tbody\");\n\t\t\tlet rows = this.findTags(body[0], \"tr\");\n\t\t\tfor (let row of rows) {\n\t\t\t\tlet building = this.addBuilding(row);\n\t\t\t\tif (this.buildingIsValid(building)) {\n\t\t\t\t\tbuildings.push(building);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn buildings;\n\t}\n\n\tprivate buildingIsValid(building: Map<string, string | undefined>): boolean {\n\t\tconst requiredKeys = [\"shortname\", \"fullname\", \"address\"];\n\t\tfor (let key of requiredKeys) {\n\t\t\tif (building.get(key) === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate addBuilding(row: any): Map<string, string | undefined> {\n\t\tlet building: Map<string, string | undefined> = new Map();\n\t\tbuilding.set(\"address\", String(this.findClassValue(row, \"views-field views-field-field-building-address\")));\n\t\tbuilding.set(\"shortname\", String(this.findClassValue(row, \"views-field views-field-field-building-code\")));\n\t\tbuilding.set(\"fullname\", String(this.findClassValue(row, \"views-field views-field-title\")));\n\t\tbuilding.set(\"href\", String(this.findHref(row)?.replace(\"./\", \"\")));\n\t\treturn building;\n\t}\n\n\tpublic addRooms(buildingContent: any, building: Map<string, string | any[] | undefined>) {\n\t\tlet rooms = [];\n\t\tlet tables = this.findTags(buildingContent, \"table\");\n\t\tfor (const table of tables) {\n\t\t\tlet body = this.findTags(table, \"tbody\");\n\t\t\t// console.log(body)\n\t\t\tlet rows = this.findTags(body[0], \"tr\");\n\t\t\t// console.log(rows)\n\t\t\tfor (let row of rows) {\n\t\t\t\t// console.log(row)\n\t\t\t\tlet room = this.addRoom(row);\n\t\t\t\tlet shortname = building.get(\"shortname\");\n\t\t\t\tlet number = room.get(\"number\");\n\t\t\t\tif (shortname !== undefined && number !== undefined) {\n\t\t\t\t\tlet name = shortname + \"_\" + number;\n\t\t\t\t\troom.set(\"name\", name);\n\t\t\t\t}\n\t\t\t\tif (this.isValidRoom(room)) {\n\t\t\t\t\t// console.log(room)\n\t\t\t\t\trooms.push(room);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbuilding.set(\"rooms\", rooms);\n\t}\n\n\tpublic update(buildings: any[]): void {\n\t\tfor (let building of buildings) {\n\t\t\tlet rooms = building.get(\"rooms\");\n\t\t\tif (building.get(\"lat\") === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (rooms !== undefined && rooms.length > 0) {\n\t\t\t\tfor (let room of rooms) {\n\t\t\t\t\tlet roomData: Room = {\n\t\t\t\t\t\tnumber: room.get(\"number\"),\n\t\t\t\t\t\tname: room.get(\"name\"),\n\t\t\t\t\t\tseats: room.get(\"seats\"),\n\t\t\t\t\t\ttype: room.get(\"type\"),\n\t\t\t\t\t\tfurniture: room.get(\"furniture\"),\n\t\t\t\t\t\thref: room.get(\"href\"),\n\t\t\t\t\t\tfullname: building.get(\"fullname\"),\n\t\t\t\t\t\tshortname: building.get(\"shortname\"),\n\t\t\t\t\t\taddress: building.get(\"address\"),\n\t\t\t\t\t\tlat: building.get(\"lat\"),\n\t\t\t\t\t\tlon: building.get(\"lon\"),\n\t\t\t\t\t};\n\t\t\t\t\tthis.rooms.push(roomData);\n\t\t\t\t\tthis.size++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isValidRoom(room: Map<string, string | number | undefined>): boolean {\n\t\tlet requiredKeys = [\"number\", \"name\", \"seats\", \"type\", \"furniture\", \"href\"];\n\t\tfor (let key of requiredKeys) {\n\t\t\t// console.log(key)\n\t\t\t// console.log(key)\n\t\t\t// console.log(room.get(key))\n\t\t\tif (room.get(key) === undefined) {\n\t\t\t\t// console.log(key)\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (isNaN(Number(room.get(\"seats\")))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate addRoom(row: any): Map<string, string | number | undefined> {\n\t\tlet room: Map<string, string | number | undefined> = new Map();\n\n\t\troom.set(\"seats\", Number(this.findClassValue(row, \"views-field views-field-field-room-capacity\")));\n\t\troom.set(\"furniture\", this.findClassValue(row, \"views-field views-field-field-room-furniture\"));\n\t\troom.set(\"number\", this.findClassValue(row, \"views-field views-field-field-room-number\"));\n\t\troom.set(\"type\", this.findClassValue(row, \"views-field views-field-field-room-type\"));\n\t\troom.set(\"href\", this.findHref(row));\n\t\t// console.log(room)\n\t\treturn room;\n\t}\n\n\tprivate findTags(node: any, tag: string): any[] {\n\t\tlet result = [];\n\t\tlet todo = [node];\n\t\twhile (todo.length > 0) {\n\t\t\tlet curr = todo.pop();\n\t\t\tif (curr.childNodes) {\n\t\t\t\tfor (let child of curr.childNodes) {\n\t\t\t\t\ttodo.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curr.nodeName === tag) {\n\t\t\t\tresult.push(curr);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate findFirstLeaf(node: any): any {\n\t\tlet curr = node;\n\t\twhile (curr.childNodes && curr.childNodes.length > 0) {\n\t\t\tif (curr.childNodes.length === 1) {\n\t\t\t\tcurr = curr.childNodes[0];\n\t\t\t} else {\n\t\t\t\tcurr = curr.childNodes[1];\n\t\t\t}\n\t\t}\n\t\treturn curr;\n\t}\n\n\tprivate findClassValue(node: any, className: string): string | undefined {\n\t\tlet cells = this.findTags(node, \"td\");\n\t\tfor (let cell of cells) {\n\t\t\tlet attributes = cell.attrs;\n\t\t\tif (attributes) {\n\t\t\t\tfor (let attribute of attributes) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tattribute.name &&\n\t\t\t\t\t\tattribute.name === \"class\" &&\n\t\t\t\t\t\tattribute.value &&\n\t\t\t\t\t\tattribute.value === className\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet value = this.findFirstLeaf(cell).value;\n\t\t\t\t\t\t// console.log(value)\n\t\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.findFirstLeaf(cell).value.replace(\"\\n\", \"\").trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate findHref(node: any): string | undefined {\n\t\tlet potentialLinks = this.findTags(node, \"a\");\n\t\tfor (let link of potentialLinks) {\n\t\t\tlet attributes = link.attrs;\n\t\t\tif (attributes) {\n\t\t\t\tfor (let attribute of attributes) {\n\t\t\t\t\tif (attribute.name && attribute.name === \"href\") {\n\t\t\t\t\t\treturn attribute.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic async getGeolocations(buildings: Array<Map<string, string | undefined>>): Promise<void> {\n\t\tlet promises = [];\n\t\tfor (let building of buildings) {\n\t\t\tlet address = building.get(\"address\");\n\t\t\tif (address !== undefined) {\n\t\t\t\ttry {\n\t\t\t\t\taddress = address.replace(\" \", \"%20\");\n\t\t\t\t\tlet promise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tHttp.get(this.urlPrefix + address, (response: any) => {\n\t\t\t\t\t\t\tlet body = \"\";\n\t\t\t\t\t\t\tresponse.on(\"data\", (chunk: any) => {\n\t\t\t\t\t\t\t\tbody += chunk;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresponse.on(\"end\", () => {\n\t\t\t\t\t\t\t\tlet result = JSON.parse(body);\n\t\t\t\t\t\t\t\tbuilding.set(\"lat\", result[\"lat\"]);\n\t\t\t\t\t\t\t\tbuilding.set(\"lon\", result[\"lon\"]);\n\t\t\t\t\t\t\t\tresolve(body);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}).on(\"error\", function (e) {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tpromises.push(promise);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(promises).then();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3b5d537a007b4ba14227c6be8c7d12c9295b7bc","contentHash":"15413ced4ededa1f24a82f3c3bd3a94bdcf0d3e9c5fedc061e8ef8cc38ac6003"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\QueryValidator.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":26}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},"4":{"start":{"line":11,"column":23},"end":{"line":11,"column":28}},"5":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":45}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":28}},"9":{"start":{"line":19,"column":21},"end":{"line":19,"column":39}},"10":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":76}},"12":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":69}},"14":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":27,"column":12},"end":{"line":27,"column":71}},"16":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":74}},"18":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"19":{"start":{"line":33,"column":12},"end":{"line":33,"column":76}},"20":{"start":{"line":37,"column":21},"end":{"line":37,"column":41}},"21":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":78}},"23":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":79}},"25":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":87}},"27":{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},"28":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"29":{"start":{"line":49,"column":16},"end":{"line":49,"column":89}},"30":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"31":{"start":{"line":53,"column":12},"end":{"line":53,"column":91}},"32":{"start":{"line":55,"column":30},"end":{"line":55,"column":32}},"33":{"start":{"line":56,"column":8},"end":{"line":59,"column":11}},"34":{"start":{"line":57,"column":12},"end":{"line":57,"column":40}},"35":{"start":{"line":58,"column":12},"end":{"line":58,"column":42}},"36":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"37":{"start":{"line":61,"column":12},"end":{"line":61,"column":44}},"38":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"39":{"start":{"line":63,"column":16},"end":{"line":63,"column":88}},"40":{"start":{"line":68,"column":21},"end":{"line":68,"column":39}},"41":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"42":{"start":{"line":70,"column":12},"end":{"line":70,"column":88}},"43":{"start":{"line":72,"column":20},"end":{"line":72,"column":27}},"44":{"start":{"line":73,"column":26},"end":{"line":73,"column":70}},"45":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":76}},"47":{"start":{"line":77,"column":8},"end":{"line":88,"column":9}},"48":{"start":{"line":78,"column":12},"end":{"line":78,"column":48}},"49":{"start":{"line":80,"column":13},"end":{"line":88,"column":9}},"50":{"start":{"line":81,"column":12},"end":{"line":81,"column":44}},"51":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"52":{"start":{"line":84,"column":12},"end":{"line":84,"column":44}},"53":{"start":{"line":86,"column":13},"end":{"line":88,"column":9}},"54":{"start":{"line":87,"column":12},"end":{"line":87,"column":36}},"55":{"start":{"line":91,"column":32},"end":{"line":91,"column":38}},"56":{"start":{"line":92,"column":36},"end":{"line":92,"column":64}},"57":{"start":{"line":93,"column":27},"end":{"line":93,"column":49}},"58":{"start":{"line":94,"column":28},"end":{"line":94,"column":55}},"59":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"60":{"start":{"line":96,"column":12},"end":{"line":96,"column":95}},"61":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"62":{"start":{"line":99,"column":12},"end":{"line":99,"column":39}},"63":{"start":{"line":103,"column":26},"end":{"line":103,"column":32}},"64":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":80}},"66":{"start":{"line":107,"column":8},"end":{"line":107,"column":42}},"67":{"start":{"line":110,"column":28},"end":{"line":110,"column":34}},"68":{"start":{"line":111,"column":32},"end":{"line":111,"column":56}},"69":{"start":{"line":112,"column":27},"end":{"line":112,"column":45}},"70":{"start":{"line":113,"column":28},"end":{"line":113,"column":51}},"71":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"72":{"start":{"line":115,"column":12},"end":{"line":115,"column":102}},"73":{"start":{"line":117,"column":26},"end":{"line":117,"column":50}},"74":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"75":{"start":{"line":119,"column":12},"end":{"line":119,"column":95}},"76":{"start":{"line":121,"column":8},"end":{"line":121,"column":40}},"77":{"start":{"line":122,"column":27},"end":{"line":122,"column":52}},"78":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"79":{"start":{"line":124,"column":12},"end":{"line":124,"column":123}},"80":{"start":{"line":128,"column":28},"end":{"line":128,"column":34}},"81":{"start":{"line":129,"column":32},"end":{"line":129,"column":56}},"82":{"start":{"line":130,"column":27},"end":{"line":130,"column":45}},"83":{"start":{"line":131,"column":28},"end":{"line":131,"column":51}},"84":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"85":{"start":{"line":133,"column":12},"end":{"line":133,"column":102}},"86":{"start":{"line":135,"column":26},"end":{"line":135,"column":50}},"87":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"88":{"start":{"line":137,"column":12},"end":{"line":137,"column":95}},"89":{"start":{"line":139,"column":8},"end":{"line":139,"column":40}},"90":{"start":{"line":140,"column":27},"end":{"line":140,"column":52}},"91":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"92":{"start":{"line":142,"column":12},"end":{"line":142,"column":123}},"93":{"start":{"line":144,"column":8},"end":{"line":144,"column":47}},"94":{"start":{"line":147,"column":35},"end":{"line":147,"column":56}},"95":{"start":{"line":148,"column":33},"end":{"line":148,"column":52}},"96":{"start":{"line":149,"column":30},"end":{"line":149,"column":63}},"97":{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},"98":{"start":{"line":153,"column":12},"end":{"line":154,"column":74}},"99":{"start":{"line":158,"column":22},"end":{"line":158,"column":38}},"100":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"101":{"start":{"line":160,"column":12},"end":{"line":160,"column":89}},"102":{"start":{"line":162,"column":38},"end":{"line":162,"column":43}},"103":{"start":{"line":163,"column":8},"end":{"line":168,"column":9}},"104":{"start":{"line":164,"column":12},"end":{"line":164,"column":39}},"105":{"start":{"line":166,"column":13},"end":{"line":168,"column":9}},"106":{"start":{"line":167,"column":12},"end":{"line":167,"column":91}},"107":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"108":{"start":{"line":170,"column":12},"end":{"line":170,"column":115}},"109":{"start":{"line":174,"column":22},"end":{"line":174,"column":38}},"110":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"111":{"start":{"line":176,"column":12},"end":{"line":176,"column":89}},"112":{"start":{"line":178,"column":38},"end":{"line":178,"column":43}},"113":{"start":{"line":179,"column":8},"end":{"line":184,"column":9}},"114":{"start":{"line":180,"column":12},"end":{"line":180,"column":39}},"115":{"start":{"line":182,"column":13},"end":{"line":184,"column":9}},"116":{"start":{"line":183,"column":12},"end":{"line":183,"column":91}},"117":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"118":{"start":{"line":186,"column":12},"end":{"line":186,"column":115}},"119":{"start":{"line":190,"column":22},"end":{"line":190,"column":38}},"120":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"121":{"start":{"line":192,"column":12},"end":{"line":192,"column":73}},"122":{"start":{"line":194,"column":37},"end":{"line":194,"column":42}},"123":{"start":{"line":195,"column":8},"end":{"line":200,"column":9}},"124":{"start":{"line":196,"column":12},"end":{"line":196,"column":39}},"125":{"start":{"line":198,"column":13},"end":{"line":200,"column":9}},"126":{"start":{"line":199,"column":12},"end":{"line":199,"column":91}},"127":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"128":{"start":{"line":202,"column":12},"end":{"line":202,"column":102}},"129":{"start":{"line":206,"column":0},"end":{"line":206,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":25},"end":{"line":17,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":32},"end":{"line":35,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":29},"end":{"line":66,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":32},"end":{"line":56,"column":33}},"loc":{"start":{"line":56,"column":47},"end":{"line":59,"column":9}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":25},"end":{"line":89,"column":5}},"line":67},"6":{"name":"(anonymous_6)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":36},"end":{"line":101,"column":5}},"line":90},"7":{"name":"(anonymous_7)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":24},"end":{"line":108,"column":5}},"line":102},"8":{"name":"(anonymous_8)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":32},"end":{"line":126,"column":5}},"line":109},"9":{"name":"(anonymous_9)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":32},"end":{"line":145,"column":5}},"line":127},"10":{"name":"(anonymous_10)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":33},"end":{"line":156,"column":5}},"line":146},"11":{"name":"(anonymous_11)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":24},"end":{"line":172,"column":5}},"line":157},"12":{"name":"(anonymous_12)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":24},"end":{"line":188,"column":5}},"line":173},"13":{"name":"(anonymous_13)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":23},"end":{"line":204,"column":5}},"line":189}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"1":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":73}},"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":43}},{"start":{"line":29,"column":47},"end":{"line":29,"column":73}}],"line":29},"6":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"7":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":77}},"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":45}},{"start":{"line":32,"column":49},"end":{"line":32,"column":77}}],"line":32},"8":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"9":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"10":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"11":{"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":75}},"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":43}},{"start":{"line":44,"column":47},"end":{"line":44,"column":75}}],"line":44},"12":{"loc":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},{"start":{"line":48,"column":12},"end":{"line":50,"column":13}}],"line":48},"13":{"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":52}},"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":33}},{"start":{"line":48,"column":37},"end":{"line":48,"column":52}}],"line":48},"14":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"15":{"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":67}},"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":30}},{"start":{"line":52,"column":34},"end":{"line":52,"column":67}}],"line":52},"16":{"loc":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},{"start":{"line":60,"column":8},"end":{"line":65,"column":9}}],"line":60},"17":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},{"start":{"line":62,"column":12},"end":{"line":64,"column":13}}],"line":62},"18":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"19":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"20":{"loc":{"start":{"line":77,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":88,"column":9}},{"start":{"line":77,"column":8},"end":{"line":88,"column":9}}],"line":77},"21":{"loc":{"start":{"line":77,"column":12},"end":{"line":77,"column":41}},"type":"binary-expr","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":25}},{"start":{"line":77,"column":29},"end":{"line":77,"column":41}}],"line":77},"22":{"loc":{"start":{"line":80,"column":13},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":13},"end":{"line":88,"column":9}},{"start":{"line":80,"column":13},"end":{"line":88,"column":9}}],"line":80},"23":{"loc":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},{"start":{"line":83,"column":13},"end":{"line":88,"column":9}}],"line":83},"24":{"loc":{"start":{"line":86,"column":13},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":13},"end":{"line":88,"column":9}},{"start":{"line":86,"column":13},"end":{"line":88,"column":9}}],"line":86},"25":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"26":{"loc":{"start":{"line":95,"column":12},"end":{"line":95,"column":67}},"type":"binary-expr","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":39}},{"start":{"line":95,"column":43},"end":{"line":95,"column":67}}],"line":95},"27":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"28":{"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":95}},"type":"binary-expr","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":26}},{"start":{"line":104,"column":30},"end":{"line":104,"column":63}},{"start":{"line":104,"column":67},"end":{"line":104,"column":95}}],"line":104},"29":{"loc":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},{"start":{"line":114,"column":8},"end":{"line":116,"column":9}}],"line":114},"30":{"loc":{"start":{"line":114,"column":12},"end":{"line":114,"column":73}},"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":43}},{"start":{"line":114,"column":47},"end":{"line":114,"column":73}}],"line":114},"31":{"loc":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},{"start":{"line":118,"column":8},"end":{"line":120,"column":9}}],"line":118},"32":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"33":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"34":{"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":73}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":43}},{"start":{"line":132,"column":47},"end":{"line":132,"column":73}}],"line":132},"35":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"36":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"37":{"loc":{"start":{"line":149,"column":31},"end":{"line":149,"column":55}},"type":"binary-expr","locations":[{"start":{"line":149,"column":31},"end":{"line":149,"column":49}},{"start":{"line":149,"column":53},"end":{"line":149,"column":55}}],"line":149},"38":{"loc":{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},{"start":{"line":150,"column":8},"end":{"line":155,"column":9}}],"line":150},"39":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":79}},"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":29}},{"start":{"line":151,"column":13},"end":{"line":151,"column":32}},{"start":{"line":151,"column":36},"end":{"line":151,"column":55}},{"start":{"line":151,"column":59},"end":{"line":151,"column":76}},{"start":{"line":152,"column":13},"end":{"line":152,"column":32}},{"start":{"line":152,"column":37},"end":{"line":152,"column":56}},{"start":{"line":152,"column":60},"end":{"line":152,"column":77}}],"line":150},"40":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"41":{"loc":{"start":{"line":163,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":168,"column":9}},{"start":{"line":163,"column":8},"end":{"line":168,"column":9}}],"line":163},"42":{"loc":{"start":{"line":166,"column":13},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":13},"end":{"line":168,"column":9}},{"start":{"line":166,"column":13},"end":{"line":168,"column":9}}],"line":166},"43":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"44":{"loc":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},{"start":{"line":175,"column":8},"end":{"line":177,"column":9}}],"line":175},"45":{"loc":{"start":{"line":179,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":184,"column":9}},{"start":{"line":179,"column":8},"end":{"line":184,"column":9}}],"line":179},"46":{"loc":{"start":{"line":182,"column":13},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":13},"end":{"line":184,"column":9}},{"start":{"line":182,"column":13},"end":{"line":184,"column":9}}],"line":182},"47":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"48":{"loc":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},{"start":{"line":191,"column":8},"end":{"line":193,"column":9}}],"line":191},"49":{"loc":{"start":{"line":195,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":200,"column":9}},{"start":{"line":195,"column":8},"end":{"line":200,"column":9}}],"line":195},"50":{"loc":{"start":{"line":198,"column":13},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":198,"column":13},"end":{"line":200,"column":9}},{"start":{"line":198,"column":13},"end":{"line":200,"column":9}}],"line":198},"51":{"loc":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},{"start":{"line":201,"column":8},"end":{"line":203,"column":9}}],"line":201}},"s":{"0":1,"1":1,"2":235,"3":169,"4":157,"5":157,"6":155,"7":120,"8":102,"9":178,"10":178,"11":3,"12":175,"13":7,"14":168,"15":3,"16":165,"17":4,"18":161,"19":2,"20":128,"21":128,"22":2,"23":126,"24":3,"25":123,"26":4,"27":119,"28":232,"29":2,"30":117,"31":4,"32":113,"33":113,"34":302,"35":296,"36":107,"37":102,"38":100,"39":2,"40":300,"41":300,"42":6,"43":294,"44":294,"45":294,"46":5,"47":289,"48":56,"49":233,"50":61,"51":172,"52":167,"53":5,"54":5,"55":62,"56":62,"57":62,"58":62,"59":62,"60":4,"61":58,"62":130,"63":10,"64":10,"65":1,"66":9,"67":175,"68":175,"69":175,"70":175,"71":175,"72":1,"73":174,"74":174,"75":2,"76":172,"77":163,"78":163,"79":12,"80":69,"81":69,"82":69,"83":69,"84":69,"85":1,"86":68,"87":68,"88":2,"89":66,"90":59,"91":59,"92":9,"93":50,"94":50,"95":50,"96":50,"97":50,"98":2,"99":176,"100":176,"101":3,"102":173,"103":173,"104":116,"105":57,"106":1,"107":172,"108":8,"109":70,"110":70,"111":4,"112":66,"113":66,"114":51,"115":15,"116":1,"117":65,"118":5,"119":410,"120":410,"121":4,"122":406,"123":406,"124":15,"125":391,"126":5,"127":401,"128":2,"129":1},"f":{"0":235,"1":169,"2":178,"3":128,"4":302,"5":300,"6":62,"7":10,"8":175,"9":69,"10":50,"11":176,"12":70,"13":410},"b":{"0":[155,2],"1":[3,175],"2":[7,168],"3":[3,165],"4":[4,161],"5":[165,163],"6":[2,159],"7":[161,160],"8":[2,126],"9":[3,123],"10":[4,119],"11":[123,122],"12":[2,230],"13":[232,113],"14":[4,113],"15":[117,111],"16":[102,5],"17":[2,98],"18":[6,294],"19":[5,289],"20":[56,233],"21":[289,247],"22":[61,172],"23":[167,5],"24":[5,0],"25":[4,58],"26":[62,61],"27":[1,9],"28":[10,10,9],"29":[1,174],"30":[175,174],"31":[2,172],"32":[12,151],"33":[1,68],"34":[69,68],"35":[2,66],"36":[9,50],"37":[50,28],"38":[2,48],"39":[50,50,14,10,49,8,7],"40":[3,173],"41":[116,57],"42":[1,56],"43":[8,164],"44":[4,66],"45":[51,15],"46":[1,14],"47":[5,60],"48":[4,406],"49":[15,391],"50":[5,386],"51":[2,399]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/QueryValidator.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\nimport {\n\tLogic,\n\tLogicComparison,\n\tSComparison,\n\tMComparison,\n\tMComparator,\n\tSComparator,\n\tNegation,\n\tJSONQuery,\n} from \"../models/IQuery\";\n\nexport default class QueryValidator {\n\tprivate dataset;\n\n\tconstructor() {\n\t\tthis.dataset = \"\";\n\t}\n\n\tpublic validateQuery(query: object): string {\n\t\tthis.validateQueryOutside(query);\n\t\tconst vQuery = query as JSONQuery;\n\t\tif (Object.keys(vQuery.WHERE as object).length !== 0) {\n\t\t\tthis.validateWhere(vQuery.WHERE as object);\n\t\t}\n\t\tthis.validateOptions(vQuery.OPTIONS);\n\t\treturn this.dataset;\n\t}\n\n\tpublic validateQueryOutside(query: object) {\n\t\tconst keys = Object.keys(query);\n\t\tif (keys.length > 2) {\n\t\t\tthrow new InsightError(\"Excess Keys in Query\");\n\t\t}\n\n\t\tif (!(\"WHERE\" in query)) {\n\t\t\tthrow new InsightError(\"Missing WHERE\");\n\t\t}\n\n\t\tif (!(\"OPTIONS\" in query)) {\n\t\t\tthrow new InsightError(\"Missing OPTIONS\");\n\t\t}\n\n\t\tif (typeof query.WHERE !== \"object\" || Array.isArray(query.WHERE)) {\n\t\t\tthrow new InsightError(\"Invalid WHERE type\");\n\t\t}\n\n\t\tif (typeof query.OPTIONS !== \"object\" || Array.isArray(query.OPTIONS)) {\n\t\t\tthrow new InsightError(\"Invalid OPTIONS type\");\n\t\t}\n\t}\n\n\tpublic validateOptions(options: object): void {\n\t\tconst keys = Object.keys(options);\n\t\tif (keys.length > 2) {\n\t\t\tthrow new InsightError(\"Excess Keys in Options\");\n\t\t}\n\n\t\t// Check that options has COLUMNS\n\t\tif (!(\"COLUMNS\" in options)) {\n\t\t\tthrow new InsightError(\"Options missing COLUMNS\");\n\t\t}\n\n\t\t// Check columns is nonempty array\n\t\tif (!Array.isArray(options.COLUMNS) || options.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"COLUMNS must be non-empty array\");\n\t\t}\n\n\t\t// Check for invalid keys\n\t\tfor (const key of keys) {\n\t\t\tif (key !== \"COLUMNS\" && key !== \"ORDER\") {\n\t\t\t\tthrow new InsightError(\"Options contains invalid keys\");\n\t\t\t}\n\t\t}\n\n\t\t// Check type of Order\n\t\tif (\"ORDER\" in options && typeof options.ORDER !== \"string\") {\n\t\t\tthrow new InsightError(\"Invalid Order type. Must be string.\");\n\t\t}\n\n\t\t// Validate keys in columns\n\t\tconst allColumnKeys: string[] = [];\n\t\toptions.COLUMNS.forEach((columnKey: string) => {\n\t\t\tthis.validateKey(columnKey);\n\t\t\tallColumnKeys.push(columnKey);\n\t\t});\n\n\t\t// Validate key for order\n\t\tif (\"ORDER\" in options) {\n\t\t\tthis.validateKey(options.ORDER as string);\n\t\t\tif (!allColumnKeys.includes(options.ORDER as string)) {\n\t\t\t\tthrow new InsightError(\"Order key not in column keys\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic validateWhere(where: object): void {\n\t\tconst keys = Object.keys(where);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"Nested Filter must contain 1 key\");\n\t\t}\n\n\t\t// Check that key is one of the valid keys\n\t\tconst key = keys[0];\n\t\tconst validKeys = [\"AND\", \"OR\", \"LT\", \"GT\", \"EQ\", \"IS\", \"NOT\"];\n\t\tif (!validKeys.includes(key)) {\n\t\t\tthrow new InsightError(\"Invalid key in WHERE\");\n\t\t}\n\n\t\tif (key === \"AND\" || key === \"OR\") {\n\t\t\tthis.validateLogicComparison(where);\n\t\t} else if (key === \"IS\") {\n\t\t\tthis.validateSComparison(where);\n\t\t} else if ([\"LT\", \"GT\", \"EQ\"].includes(key)) {\n\t\t\tthis.validateMComparison(where);\n\t\t} else if (key === \"NOT\") {\n\t\t\tthis.validateNot(where);\n\t\t}\n\t}\n\n\tpublic validateLogicComparison(object: object): void {\n\t\tconst logicComparison = object as LogicComparison;\n\t\tconst logicComparatorKeys = Object.keys(logicComparison);\n\t\tconst comparator = logicComparatorKeys[0] as Logic;\n\n\t\tconst fieldObject = logicComparison[comparator];\n\t\tif (!Array.isArray(fieldObject) || fieldObject.length === 0) {\n\t\t\tthrow new InsightError(`${comparator} should be non-empty array`);\n\t\t}\n\n\t\tfor (const filter of fieldObject) {\n\t\t\tthis.validateWhere(filter as object); // recursively validate each filter in the array\n\t\t}\n\t}\n\n\tpublic validateNot(object: object): void {\n\t\tconst notObject = object as Negation;\n\t\tif (!notObject.NOT || typeof notObject.NOT !== \"object\" || Array.isArray(notObject.NOT)) {\n\t\t\tthrow new InsightError(\"NOT value must be object\");\n\t\t}\n\t\tthis.validateWhere(notObject.NOT);\n\t}\n\n\tpublic validateMComparison(object: object): void {\n\t\tconst mComparison = object as MComparison;\n\t\tconst mComparatorKeys = Object.keys(mComparison);\n\t\tconst comparator = mComparatorKeys[0] as MComparator;\n\n\t\tconst fieldObject = mComparison[comparator];\n\t\tif (typeof fieldObject !== \"object\" || Array.isArray(fieldObject)) {\n\t\t\tthrow new InsightError(`MComparison for ${comparator} has invalid type`);\n\t\t}\n\n\t\tconst fieldKeys = Object.keys(fieldObject);\n\t\tif (fieldKeys.length !== 1) {\n\t\t\tthrow new InsightError(`${comparator} must have exactly one key`);\n\t\t}\n\n\t\tthis.validateMKey(fieldKeys[0]);\n\n\t\tconst fieldValue = fieldObject[fieldKeys[0]];\n\t\tif (typeof fieldValue !== \"number\") {\n\t\t\tthrow new InsightError(`Invalid value for ${fieldKeys[0]} in MComparison. Expected a number`);\n\t\t}\n\t}\n\n\tpublic validateSComparison(object: object): void {\n\t\tconst sComparison = object as SComparison;\n\t\tconst mComparatorKeys = Object.keys(sComparison);\n\t\tconst comparator = mComparatorKeys[0] as SComparator;\n\n\t\tconst fieldObject = sComparison[comparator];\n\t\tif (typeof fieldObject !== \"object\" || Array.isArray(fieldObject)) {\n\t\t\tthrow new InsightError(`SComparison for ${comparator} has invalid type`);\n\t\t}\n\n\t\tconst fieldKeys = Object.keys(fieldObject);\n\t\tif (fieldKeys.length !== 1) {\n\t\t\tthrow new InsightError(`${comparator} must have exactly one key`);\n\t\t}\n\n\t\tthis.validateSKey(fieldKeys[0]);\n\n\t\tconst fieldValue = fieldObject[fieldKeys[0]];\n\t\tif (typeof fieldValue !== \"string\") {\n\t\t\tthrow new InsightError(`Invalid value for ${fieldKeys[0]} in SComparison. Expected a string`);\n\t\t}\n\n\t\tthis.validateWildcardUsage(fieldValue);\n\t}\n\n\tprivate validateWildcardUsage(value: string): void {\n\t\tconst startsWithAsterisk = value.startsWith(\"*\");\n\t\tconst endsWithAsterisk = value.endsWith(\"*\");\n\t\tconst asteriskCount = (value.match(/\\*/g) || []).length;\n\n\t\tif (\n\t\t\tasteriskCount > 2 ||\n\t\t\t(asteriskCount === 1 && !startsWithAsterisk && !endsWithAsterisk) ||\n\t\t\t(asteriskCount === 2 && (!startsWithAsterisk || !endsWithAsterisk))\n\t\t) {\n\t\t\tthrow new InsightError(\n\t\t\t\t\"Invalid usage of wildcards in string. A valid string\" +\n\t\t\t\t\t\" can only start with or end with an asterisk, or both.\"\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic validateMKey(input: string): void {\n\t\tconst parts = input.split(\"_\");\n\n\t\t// Check if there are exactly two parts separated by an underscore\n\t\tif (parts.length !== 2) {\n\t\t\tthrow new InsightError(\"Invalid query key for MComparison\");\n\t\t}\n\n\t\tconst [contentName, mField] = parts;\n\t\tif (this.dataset === \"\") {\n\t\t\tthis.dataset = contentName;\n\t\t} else if (this.dataset !== contentName) {\n\t\t\tthrow new InsightError(\"Cannot query from multiple datasets\");\n\t\t}\n\n\t\t// Check if mField is a valid MField\n\t\tif (![\"avg\", \"pass\", \"fail\", \"audit\", \"year\"].includes(mField)) {\n\t\t\tthrow new InsightError(`Invalid type for MComparison. ${mField} is not a valid type`);\n\t\t}\n\t}\n\n\tpublic validateSKey(input: string): void {\n\t\tconst parts = input.split(\"_\");\n\n\t\t// Check if there are exactly two parts separated by an underscore\n\t\tif (parts.length !== 2) {\n\t\t\tthrow new InsightError(\"Invalid query key for SComparison\");\n\t\t}\n\t\tconst [contentName, sField] = parts;\n\t\tif (this.dataset === \"\") {\n\t\t\tthis.dataset = contentName;\n\t\t} else if (this.dataset !== contentName) {\n\t\t\tthrow new InsightError(\"Cannot query from multiple datasets\");\n\t\t}\n\n\t\t// Check if sField is a valid SField\n\t\tif (![\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"].includes(sField)) {\n\t\t\tthrow new InsightError(`Invalid type for SComparison. ${sField} is not a valid type`);\n\t\t}\n\t}\n\n\tpublic validateKey(input: string): void {\n\t\tconst parts = input.split(\"_\");\n\n\t\t// Check if there are exactly two parts separated by an underscore\n\t\tif (parts.length !== 2) {\n\t\t\tthrow new InsightError(\"Invalid query key\");\n\t\t}\n\t\tconst [contentName, field] = parts;\n\t\tif (this.dataset === \"\") {\n\t\t\tthis.dataset = contentName;\n\t\t} else if (this.dataset !== contentName) {\n\t\t\tthrow new InsightError(\"Cannot query from multiple datasets\");\n\t\t}\n\n\t\tif (![\"dept\", \"id\", \"instructor\", \"title\", \"uuid\", \"avg\", \"pass\", \"fail\", \"audit\", \"year\"].includes(field)) {\n\t\t\tthrow new InsightError(`Invalid key type. ${field} is not a valid type`);\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"06105e5d6cded666fe88d07f05fcf6a43ebf1bb2","contentHash":"6b92a2772c8bd8375b12285ea7c1567bef3ee705b2e111165e61692553c21cef"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Query.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Query.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":64}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":44}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":76}},"31":{"start":{"line":33,"column":19},"end":{"line":33,"column":57}},"32":{"start":{"line":38,"column":16},"end":{"line":38,"column":24}},"33":{"start":{"line":40,"column":28},"end":{"line":51,"column":5}},"34":{"start":{"line":53,"column":17},"end":{"line":53,"column":47}},"35":{"start":{"line":54,"column":8},"end":{"line":54,"column":55}},"36":{"start":{"line":55,"column":8},"end":{"line":55,"column":37}},"37":{"start":{"line":56,"column":8},"end":{"line":56,"column":41}},"38":{"start":{"line":57,"column":8},"end":{"line":57,"column":61}},"39":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"40":{"start":{"line":61,"column":12},"end":{"line":61,"column":121}},"41":{"start":{"line":63,"column":8},"end":{"line":63,"column":24}},"42":{"start":{"line":64,"column":27},"end":{"line":64,"column":55}},"43":{"start":{"line":65,"column":8},"end":{"line":65,"column":46}},"44":{"start":{"line":68,"column":23},"end":{"line":68,"column":89}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":47}},"46":{"start":{"line":72,"column":8},"end":{"line":93,"column":9}},"47":{"start":{"line":73,"column":12},"end":{"line":73,"column":107}},"48":{"start":{"line":75,"column":13},"end":{"line":93,"column":9}},"49":{"start":{"line":76,"column":12},"end":{"line":76,"column":53}},"50":{"start":{"line":78,"column":13},"end":{"line":93,"column":9}},"51":{"start":{"line":79,"column":12},"end":{"line":79,"column":49}},"52":{"start":{"line":81,"column":13},"end":{"line":93,"column":9}},"53":{"start":{"line":82,"column":12},"end":{"line":82,"column":49}},"54":{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},"55":{"start":{"line":85,"column":12},"end":{"line":85,"column":46}},"56":{"start":{"line":88,"column":24},"end":{"line":88,"column":33}},"57":{"start":{"line":89,"column":12},"end":{"line":91,"column":15}},"58":{"start":{"line":90,"column":16},"end":{"line":90,"column":36}},"59":{"start":{"line":92,"column":12},"end":{"line":92,"column":23}},"60":{"start":{"line":96,"column":28},"end":{"line":96,"column":55}},"61":{"start":{"line":97,"column":31},"end":{"line":97,"column":40}},"62":{"start":{"line":98,"column":8},"end":{"line":102,"column":11}},"63":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"64":{"start":{"line":100,"column":16},"end":{"line":100,"column":47}},"65":{"start":{"line":103,"column":8},"end":{"line":103,"column":30}},"66":{"start":{"line":106,"column":32},"end":{"line":106,"column":41}},"67":{"start":{"line":107,"column":20},"end":{"line":107,"column":44}},"68":{"start":{"line":108,"column":23},"end":{"line":108,"column":68}},"69":{"start":{"line":109,"column":23},"end":{"line":109,"column":36}},"70":{"start":{"line":110,"column":8},"end":{"line":131,"column":11}},"71":{"start":{"line":111,"column":12},"end":{"line":130,"column":13}},"72":{"start":{"line":112,"column":16},"end":{"line":114,"column":17}},"73":{"start":{"line":113,"column":20},"end":{"line":113,"column":52}},"74":{"start":{"line":116,"column":17},"end":{"line":130,"column":13}},"75":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"76":{"start":{"line":118,"column":20},"end":{"line":118,"column":52}},"77":{"start":{"line":121,"column":17},"end":{"line":130,"column":13}},"78":{"start":{"line":122,"column":16},"end":{"line":124,"column":17}},"79":{"start":{"line":123,"column":20},"end":{"line":123,"column":52}},"80":{"start":{"line":127,"column":16},"end":{"line":129,"column":17}},"81":{"start":{"line":128,"column":20},"end":{"line":128,"column":52}},"82":{"start":{"line":132,"column":8},"end":{"line":132,"column":31}},"83":{"start":{"line":135,"column":32},"end":{"line":135,"column":41}},"84":{"start":{"line":136,"column":27},"end":{"line":136,"column":48}},"85":{"start":{"line":137,"column":30},"end":{"line":137,"column":47}},"86":{"start":{"line":138,"column":27},"end":{"line":138,"column":70}},"87":{"start":{"line":139,"column":23},"end":{"line":139,"column":61}},"88":{"start":{"line":140,"column":23},"end":{"line":140,"column":54}},"89":{"start":{"line":141,"column":8},"end":{"line":151,"column":11}},"90":{"start":{"line":142,"column":12},"end":{"line":150,"column":13}},"91":{"start":{"line":143,"column":16},"end":{"line":143,"column":48}},"92":{"start":{"line":145,"column":17},"end":{"line":150,"column":13}},"93":{"start":{"line":146,"column":16},"end":{"line":146,"column":48}},"94":{"start":{"line":148,"column":17},"end":{"line":150,"column":13}},"95":{"start":{"line":149,"column":16},"end":{"line":149,"column":48}},"96":{"start":{"line":152,"column":8},"end":{"line":152,"column":31}},"97":{"start":{"line":155,"column":28},"end":{"line":155,"column":30}},"98":{"start":{"line":156,"column":25},"end":{"line":156,"column":46}},"99":{"start":{"line":157,"column":8},"end":{"line":159,"column":11}},"100":{"start":{"line":158,"column":12},"end":{"line":158,"column":59}},"101":{"start":{"line":160,"column":23},"end":{"line":160,"column":32}},"102":{"start":{"line":161,"column":8},"end":{"line":178,"column":9}},"103":{"start":{"line":162,"column":12},"end":{"line":162,"column":64}},"104":{"start":{"line":162,"column":46},"end":{"line":162,"column":62}},"105":{"start":{"line":163,"column":12},"end":{"line":170,"column":13}},"106":{"start":{"line":163,"column":25},"end":{"line":163,"column":26}},"107":{"start":{"line":164,"column":35},"end":{"line":164,"column":49}},"108":{"start":{"line":165,"column":16},"end":{"line":169,"column":17}},"109":{"start":{"line":166,"column":20},"end":{"line":168,"column":21}},"110":{"start":{"line":167,"column":24},"end":{"line":167,"column":44}},"111":{"start":{"line":173,"column":12},"end":{"line":177,"column":15}},"112":{"start":{"line":174,"column":16},"end":{"line":176,"column":19}},"113":{"start":{"line":175,"column":20},"end":{"line":175,"column":37}},"114":{"start":{"line":179,"column":8},"end":{"line":179,"column":22}},"115":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"116":{"start":{"line":183,"column":12},"end":{"line":183,"column":88}},"117":{"start":{"line":185,"column":28},"end":{"line":185,"column":56}},"118":{"start":{"line":186,"column":33},"end":{"line":186,"column":35}},"119":{"start":{"line":187,"column":8},"end":{"line":192,"column":11}},"120":{"start":{"line":188,"column":28},"end":{"line":188,"column":49}},"121":{"start":{"line":189,"column":12},"end":{"line":191,"column":13}},"122":{"start":{"line":190,"column":16},"end":{"line":190,"column":47}},"123":{"start":{"line":193,"column":8},"end":{"line":205,"column":9}},"124":{"start":{"line":194,"column":31},"end":{"line":194,"column":63}},"125":{"start":{"line":195,"column":29},"end":{"line":195,"column":67}},"126":{"start":{"line":196,"column":12},"end":{"line":204,"column":15}},"127":{"start":{"line":197,"column":16},"end":{"line":202,"column":17}},"128":{"start":{"line":198,"column":20},"end":{"line":198,"column":30}},"129":{"start":{"line":200,"column":21},"end":{"line":202,"column":17}},"130":{"start":{"line":201,"column":20},"end":{"line":201,"column":29}},"131":{"start":{"line":203,"column":16},"end":{"line":203,"column":25}},"132":{"start":{"line":206,"column":23},"end":{"line":213,"column":10}},"133":{"start":{"line":207,"column":28},"end":{"line":207,"column":30}},"134":{"start":{"line":208,"column":12},"end":{"line":211,"column":15}},"135":{"start":{"line":209,"column":28},"end":{"line":209,"column":48}},"136":{"start":{"line":210,"column":16},"end":{"line":210,"column":75}},"137":{"start":{"line":212,"column":12},"end":{"line":212,"column":27}},"138":{"start":{"line":214,"column":8},"end":{"line":214,"column":22}},"139":{"start":{"line":217,"column":0},"end":{"line":217,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":27},"end":{"line":58,"column":5}},"line":52},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":14},"end":{"line":66,"column":5}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":15},"end":{"line":70,"column":5}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":23},"end":{"line":94,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":89,"column":44},"end":{"line":89,"column":45}},"loc":{"start":{"line":89,"column":57},"end":{"line":91,"column":13}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":26},"end":{"line":104,"column":5}},"line":95},"13":{"name":"(anonymous_13)","decl":{"start":{"line":98,"column":40},"end":{"line":98,"column":41}},"loc":{"start":{"line":98,"column":53},"end":{"line":102,"column":9}},"line":98},"14":{"name":"(anonymous_14)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":29},"end":{"line":133,"column":5}},"line":105},"15":{"name":"(anonymous_15)","decl":{"start":{"line":110,"column":40},"end":{"line":110,"column":41}},"loc":{"start":{"line":110,"column":53},"end":{"line":131,"column":9}},"line":110},"16":{"name":"(anonymous_16)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":29},"end":{"line":153,"column":5}},"line":134},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":40},"end":{"line":141,"column":41}},"loc":{"start":{"line":141,"column":53},"end":{"line":151,"column":9}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":33},"end":{"line":180,"column":5}},"line":154},"19":{"name":"(anonymous_19)","decl":{"start":{"line":157,"column":33},"end":{"line":157,"column":34}},"loc":{"start":{"line":157,"column":49},"end":{"line":159,"column":9}},"line":157},"20":{"name":"(anonymous_20)","decl":{"start":{"line":162,"column":36},"end":{"line":162,"column":37}},"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":62}},"line":162},"21":{"name":"(anonymous_21)","decl":{"start":{"line":173,"column":32},"end":{"line":173,"column":33}},"loc":{"start":{"line":173,"column":45},"end":{"line":177,"column":13}},"line":173},"22":{"name":"(anonymous_22)","decl":{"start":{"line":174,"column":32},"end":{"line":174,"column":33}},"loc":{"start":{"line":174,"column":42},"end":{"line":176,"column":17}},"line":174},"23":{"name":"(anonymous_23)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":25},"end":{"line":215,"column":5}},"line":181},"24":{"name":"(anonymous_24)","decl":{"start":{"line":187,"column":22},"end":{"line":187,"column":23}},"loc":{"start":{"line":187,"column":32},"end":{"line":192,"column":9}},"line":187},"25":{"name":"(anonymous_25)","decl":{"start":{"line":196,"column":34},"end":{"line":196,"column":35}},"loc":{"start":{"line":196,"column":44},"end":{"line":204,"column":13}},"line":196},"26":{"name":"(anonymous_26)","decl":{"start":{"line":206,"column":44},"end":{"line":206,"column":45}},"loc":{"start":{"line":206,"column":57},"end":{"line":213,"column":9}},"line":206},"27":{"name":"(anonymous_27)","decl":{"start":{"line":208,"column":41},"end":{"line":208,"column":42}},"loc":{"start":{"line":208,"column":53},"end":{"line":211,"column":13}},"line":208}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{"line":60,"column":8},"end":{"line":62,"column":9}}],"line":60},"20":{"loc":{"start":{"line":72,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":93,"column":9}},{"start":{"line":72,"column":8},"end":{"line":93,"column":9}}],"line":72},"21":{"loc":{"start":{"line":75,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":13},"end":{"line":93,"column":9}},{"start":{"line":75,"column":13},"end":{"line":93,"column":9}}],"line":75},"22":{"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":48}},"type":"binary-expr","locations":[{"start":{"line":75,"column":17},"end":{"line":75,"column":31}},{"start":{"line":75,"column":35},"end":{"line":75,"column":48}}],"line":75},"23":{"loc":{"start":{"line":78,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":93,"column":9}},{"start":{"line":78,"column":13},"end":{"line":93,"column":9}}],"line":78},"24":{"loc":{"start":{"line":78,"column":17},"end":{"line":78,"column":64}},"type":"binary-expr","locations":[{"start":{"line":78,"column":17},"end":{"line":78,"column":30}},{"start":{"line":78,"column":34},"end":{"line":78,"column":47}},{"start":{"line":78,"column":51},"end":{"line":78,"column":64}}],"line":78},"25":{"loc":{"start":{"line":81,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":13},"end":{"line":93,"column":9}},{"start":{"line":81,"column":13},"end":{"line":93,"column":9}}],"line":81},"26":{"loc":{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},{"start":{"line":84,"column":13},"end":{"line":93,"column":9}}],"line":84},"27":{"loc":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":12},"end":{"line":101,"column":13}}],"line":99},"28":{"loc":{"start":{"line":111,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":130,"column":13}},{"start":{"line":111,"column":12},"end":{"line":130,"column":13}}],"line":111},"29":{"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":62}},"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":38}},{"start":{"line":111,"column":42},"end":{"line":111,"column":62}}],"line":111},"30":{"loc":{"start":{"line":112,"column":16},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":112,"column":16},"end":{"line":114,"column":17}},{"start":{"line":112,"column":16},"end":{"line":114,"column":17}}],"line":112},"31":{"loc":{"start":{"line":116,"column":17},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":17},"end":{"line":130,"column":13}},{"start":{"line":116,"column":17},"end":{"line":130,"column":13}}],"line":116},"32":{"loc":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},{"start":{"line":117,"column":16},"end":{"line":119,"column":17}}],"line":117},"33":{"loc":{"start":{"line":121,"column":17},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":17},"end":{"line":130,"column":13}},{"start":{"line":121,"column":17},"end":{"line":130,"column":13}}],"line":121},"34":{"loc":{"start":{"line":122,"column":16},"end":{"line":124,"column":17}},"type":"if","locations":[{"start":{"line":122,"column":16},"end":{"line":124,"column":17}},{"start":{"line":122,"column":16},"end":{"line":124,"column":17}}],"line":122},"35":{"loc":{"start":{"line":127,"column":16},"end":{"line":129,"column":17}},"type":"if","locations":[{"start":{"line":127,"column":16},"end":{"line":129,"column":17}},{"start":{"line":127,"column":16},"end":{"line":129,"column":17}}],"line":127},"36":{"loc":{"start":{"line":142,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":150,"column":13}},{"start":{"line":142,"column":12},"end":{"line":150,"column":13}}],"line":142},"37":{"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":63}},"type":"binary-expr","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":35}},{"start":{"line":142,"column":39},"end":{"line":142,"column":63}}],"line":142},"38":{"loc":{"start":{"line":145,"column":17},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":145,"column":17},"end":{"line":150,"column":13}},{"start":{"line":145,"column":17},"end":{"line":150,"column":13}}],"line":145},"39":{"loc":{"start":{"line":145,"column":21},"end":{"line":145,"column":68}},"type":"binary-expr","locations":[{"start":{"line":145,"column":21},"end":{"line":145,"column":40}},{"start":{"line":145,"column":44},"end":{"line":145,"column":68}}],"line":145},"40":{"loc":{"start":{"line":148,"column":17},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":17},"end":{"line":150,"column":13}},{"start":{"line":148,"column":17},"end":{"line":150,"column":13}}],"line":148},"41":{"loc":{"start":{"line":148,"column":21},"end":{"line":148,"column":70}},"type":"binary-expr","locations":[{"start":{"line":148,"column":21},"end":{"line":148,"column":40}},{"start":{"line":148,"column":44},"end":{"line":148,"column":70}}],"line":148},"42":{"loc":{"start":{"line":161,"column":8},"end":{"line":178,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":178,"column":9}},{"start":{"line":161,"column":8},"end":{"line":178,"column":9}}],"line":161},"43":{"loc":{"start":{"line":166,"column":20},"end":{"line":168,"column":21}},"type":"if","locations":[{"start":{"line":166,"column":20},"end":{"line":168,"column":21}},{"start":{"line":166,"column":20},"end":{"line":168,"column":21}}],"line":166},"44":{"loc":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},{"start":{"line":182,"column":8},"end":{"line":184,"column":9}}],"line":182},"45":{"loc":{"start":{"line":189,"column":12},"end":{"line":191,"column":13}},"type":"if","locations":[{"start":{"line":189,"column":12},"end":{"line":191,"column":13}},{"start":{"line":189,"column":12},"end":{"line":191,"column":13}}],"line":189},"46":{"loc":{"start":{"line":193,"column":8},"end":{"line":205,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":205,"column":9}},{"start":{"line":193,"column":8},"end":{"line":205,"column":9}}],"line":193},"47":{"loc":{"start":{"line":197,"column":16},"end":{"line":202,"column":17}},"type":"if","locations":[{"start":{"line":197,"column":16},"end":{"line":202,"column":17}},{"start":{"line":197,"column":16},"end":{"line":202,"column":17}}],"line":197},"48":{"loc":{"start":{"line":200,"column":21},"end":{"line":202,"column":17}},"type":"if","locations":[{"start":{"line":200,"column":21},"end":{"line":202,"column":17}},{"start":{"line":200,"column":21},"end":{"line":202,"column":17}}],"line":200}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":96,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":50,"33":50,"34":50,"35":50,"36":50,"37":50,"38":50,"39":50,"40":4,"41":46,"42":46,"43":46,"44":46,"45":46,"46":102,"47":0,"48":102,"49":22,"50":80,"51":60,"52":20,"53":17,"54":3,"55":2,"56":1,"57":1,"58":64612,"59":1,"60":2,"61":2,"62":2,"63":129224,"64":59,"65":2,"66":17,"67":17,"68":17,"69":17,"70":17,"71":1098404,"72":193836,"73":3093,"74":904568,"75":129224,"76":3532,"77":775344,"78":193836,"79":2313,"80":581508,"81":2663,"82":17,"83":60,"84":60,"85":60,"86":60,"87":60,"88":60,"89":60,"90":3876720,"91":284394,"92":3592326,"93":707158,"94":2885168,"95":34908,"96":60,"97":22,"98":22,"99":22,"100":54,"101":22,"102":22,"103":16,"104":121722,"105":16,"106":16,"107":27,"108":27,"109":140575,"110":121527,"111":6,"112":11,"113":10240,"114":22,"115":46,"116":3,"117":43,"118":43,"119":43,"120":18877,"121":18877,"122":18877,"123":43,"124":41,"125":41,"126":41,"127":173484,"128":90261,"129":83223,"130":61014,"131":22209,"132":43,"133":18877,"134":18877,"135":45098,"136":45098,"137":18877,"138":43,"139":1},"f":{"0":148,"1":96,"2":0,"3":1,"4":0,"5":1,"6":2,"7":50,"8":50,"9":46,"10":102,"11":64612,"12":2,"13":129224,"14":17,"15":1098404,"16":60,"17":3876720,"18":22,"19":54,"20":121722,"21":11,"22":10240,"23":46,"24":18877,"25":173484,"26":18877,"27":45098},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[2,0],"18":[2,2],"19":[4,46],"20":[0,102],"21":[22,80],"22":[102,86],"23":[60,20],"24":[80,64,35],"25":[17,3],"26":[2,1],"27":[59,129165],"28":[193836,904568],"29":[1098404,323060],"30":[3093,190743],"31":[129224,775344],"32":[3532,125692],"33":[193836,581508],"34":[2313,191523],"35":[2663,578845],"36":[284394,3592326],"37":[3876720,1873748],"38":[707158,2885168],"39":[3592326,1033792],"40":[34908,2850260],"41":[2885168,969180],"42":[16,6],"43":[121527,19048],"44":[3,43],"45":[18877,0],"46":[41,2],"47":[90261,83223],"48":[61014,22209]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Query.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Query.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\nimport {\n\tFilter,\n\tIQuery,\n\tJSONQuery,\n\tLogic,\n\tLogicComparison,\n\tMComparator,\n\tMComparison,\n\tMField,\n\tNegation,\n\tOptions,\n\tSComparison,\n\tSField,\n} from \"./IQuery\";\nimport * as fs from \"fs-extra\";\nimport QueryValidator from \"../utils/QueryValidator\";\nimport Sections, {Section} from \"./Sections\";\n\nexport class Query implements IQuery {\n\tpublic WHERE: Filter;\n\tpublic OPTIONS: Options;\n\tpublic datasetName: string;\n\n\tprivate directory = \"./data\";\n\tprivate data: Sections;\n\tprivate datasetToFileMappings = {\n\t\tuuid: \"id\",\n\t\tid: \"Course\",\n\t\ttitle: \"Title\",\n\t\tinstructor: \"Professor\",\n\t\tdept: \"Subject\",\n\t\tyear: \"Year\",\n\t\tavg: \"Avg\",\n\t\tpass: \"Pass\",\n\t\tfail: \"Fail\",\n\t\taudit: \"Audit\",\n\t};\n\n\tconstructor(queryJSON: JSONQuery) {\n\t\tlet QV: QueryValidator = new QueryValidator();\n\t\tthis.datasetName = QV.validateQuery(queryJSON);\n\t\tthis.WHERE = queryJSON.WHERE;\n\t\tthis.OPTIONS = queryJSON.OPTIONS;\n\t\tthis.data = new Sections(this.datasetName);\n\t}\n\n\tpublic execute(): InsightResult[] {\n\t\tif (!fs.pathExistsSync(this.directory + \"/\" + this.datasetName + \".json\")) {\n\t\t\tthrow new InsightError(`Cannot query from ${this.datasetName} due to not being added yet.`);\n\t\t}\n\t\tthis.loadData();\n\t\tconst afterWhere = this.handleWhere(this.WHERE);\n\t\treturn this.handleOptions(afterWhere);\n\t}\n\n\tprivate loadData() {\n\t\tconst object = fs.readJSONSync(this.directory + \"/\" + this.datasetName + \".json\");\n\t\tthis.data.addSections(object.sections);\n\t}\n\n\tprivate handleWhere(input: Filter): Set<string> {\n\t\tif (!input) {\n\t\t\tthrow new InsightError(\"this.WHERE should not be NULL after query validated\");\n\t\t} else if (\"AND\" in input || \"OR\" in input) {\n\t\t\treturn this.handleLogicComparison(input as LogicComparison);\n\t\t} else if (\"LT\" in input || \"GT\" in input || \"EQ\" in input) {\n\t\t\treturn this.handleMComparison(input as MComparison);\n\t\t} else if (\"IS\" in input) {\n\t\t\treturn this.handleSComparison(input as SComparison);\n\t\t} else if (\"NOT\" in input) {\n\t\t\treturn this.handleNegation(input as Negation);\n\t\t} else {\n\t\t\tconst all = new Set<string>();\n\t\t\tthis.data.getSections().forEach((section) => {\n\t\t\t\tall.add(section.id);\n\t\t\t});\n\t\t\treturn all;\n\t\t}\n\t}\n\n\tprivate handleNegation(input: Negation): Set<string> {\n\t\t// Handle the filter inside the NOT and get its result.\n\t\tconst innerResult = this.handleWhere(input.NOT);\n\n\t\t// Subtract innerResult from allUUIDs to get the result of the NOT filter.\n\t\tconst negationResult = new Set<string>();\n\t\tthis.data.getSections().forEach((section) => {\n\t\t\tif (!innerResult.has(section.id)) {\n\t\t\t\tnegationResult.add(section.id);\n\t\t\t}\n\t\t});\n\n\t\treturn negationResult;\n\t}\n\n\tpublic handleSComparison(input: SComparison): Set<string> {\n\t\tconst sectionMappings = new Set<string>();\n\t\tconst key = Object.keys(input.IS)[0]; // Dataset name + SField\n\t\tconst sField = this.datasetToFileMappings[key.split(\"_\")[1] as SField]; // SField\n\t\tconst sValue = input.IS[key];\n\n\t\tthis.data.getSections().forEach((section: any) => {\n\t\t\tif (sValue.startsWith(\"*\") && sValue.endsWith(\"*\")) {\n\t\t\t\t// Contains inputstring\n\t\t\t\tif (section[sField].includes(sValue.substring(1, sValue.length - 1))) {\n\t\t\t\t\tsectionMappings.add(section.id);\n\t\t\t\t}\n\t\t\t} else if (sValue.startsWith(\"*\")) {\n\t\t\t\t// Ends with inputstring\n\t\t\t\tif (section[sField].endsWith(sValue.substring(1))) {\n\t\t\t\t\tsectionMappings.add(section.id);\n\t\t\t\t}\n\t\t\t} else if (sValue.endsWith(\"*\")) {\n\t\t\t\t// Starts with inputstring\n\t\t\t\tif (section[sField].startsWith(sValue.substring(0, sValue.length - 1))) {\n\t\t\t\t\tsectionMappings.add(section.id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Matches inputstring exactly\n\t\t\t\tif (section[sField] === sValue) {\n\t\t\t\t\tsectionMappings.add(section.id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn sectionMappings;\n\t}\n\n\tprivate handleMComparison(input: MComparison): Set<string> {\n\t\tconst sectionMappings = new Set<string>();\n\t\tconst compareKey: keyof MComparison = Object.keys(input)[0] as MComparator; // GT, LT, or EQ\n\t\tconst compareObject = input[compareKey] as object;\n\t\tconst datasetKey: string = Object.keys(compareObject)[0].split(\"_\")[1]; // MField\n\n\t\tconst mField = this.datasetToFileMappings[datasetKey as MField]; // MField but as a File key\n\t\tconst mValue = Object.values(compareObject)[0];\n\n\t\tthis.data.getSections().forEach((section: any) => {\n\t\t\tif (compareKey === \"GT\" && section[mField] > mValue) {\n\t\t\t\tsectionMappings.add(section.id);\n\t\t\t} else if (compareKey === \"LT\" && section[mField] < mValue) {\n\t\t\t\tsectionMappings.add(section.id);\n\t\t\t} else if (compareKey === \"EQ\" && section[mField] === mValue) {\n\t\t\t\tsectionMappings.add(section.id);\n\t\t\t}\n\t\t});\n\t\treturn sectionMappings;\n\t}\n\n\tprivate handleLogicComparison(input: LogicComparison): Set<string> {\n\t\tconst allMappings: Array<Set<string>> = [];\n\t\tconst logicKey = Object.keys(input)[0] as Logic;\n\n\t\tinput[logicKey]?.forEach((comparison) => {\n\t\t\tallMappings.push(this.handleWhere(comparison));\n\t\t});\n\n\t\tconst result = new Set<string>();\n\t\tif (logicKey === \"AND\") {\n\t\t\t// Initialize result with elements from the first set\n\t\t\tallMappings[0]?.forEach((uuid) => result.add(uuid));\n\n\t\t\t// Iterate over the remaining sets and filter out elements not common to all sets\n\t\t\tfor (let i = 1; i < allMappings.length; i++) {\n\t\t\t\tconst currentSet = allMappings[i];\n\t\t\t\tfor (const uuid of result) {\n\t\t\t\t\tif (!currentSet.has(uuid)) {\n\t\t\t\t\t\tresult.delete(uuid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// For OR logic, add all unique elements from all sets\n\t\t\tallMappings.forEach((mapping) => {\n\t\t\t\tmapping.forEach((uuid) => {\n\t\t\t\t\tresult.add(uuid);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate handleOptions(input: Set<string>): InsightResult[] {\n\t\tif (input.size > 5000) {\n\t\t\tthrow new ResultTooLargeError(\"Greater than 5000 results\");\n\t\t}\n\n\t\t// Get all sections and only add input sections to array\n\t\tconst allSections = this.data.getSectionsAsMap();\n\t\tconst selectedSections: Section[] = [];\n\t\tinput.forEach((uuid) => {\n\t\t\tconst section = allSections.get(uuid);\n\t\t\tif (section) {\n\t\t\t\tselectedSections.push(section);\n\t\t\t}\n\t\t});\n\n\t\t// Handle order\n\t\tif (this.OPTIONS.ORDER) {\n\t\t\tconst datasetKey = this.OPTIONS.ORDER.split(\"_\")[1];\n\n\t\t\tconst orderKey: keyof Section = this.datasetToFileMappings[datasetKey as MField | SField] as keyof Section;\n\n\t\t\tselectedSections.sort((a, b) => {\n\t\t\t\tif (a[orderKey] < b[orderKey]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a[orderKey] > b[orderKey]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\n\t\t// Return insightResults\n\t\tconst result: InsightResult[] = selectedSections.map((section) => {\n\t\t\t// Only keep the fields listed in this.OPTIONS.COLUMNS\n\t\t\tconst insight: Partial<InsightResult> = {};\n\t\t\tthis.OPTIONS.COLUMNS.forEach((column) => {\n\t\t\t\tconst key: string = column.split(\"_\")[1]; // assuming the column field is like 'sections_avg'\n\t\t\t\tinsight[column] = section[this.datasetToFileMappings[key as MField | SField] as keyof Section];\n\t\t\t});\n\t\t\treturn insight as InsightResult; // forcibly cast the Partial<InsightResult> to InsightResult\n\t\t});\n\t\treturn result;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec61cff21d64f2009b4bec16733d9e6d3db3df0e","contentHash":"7c6d36b005341cfa20858acb9c2c2ad1f965119fb95332a51f38e3025889c125"}}