{"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":260,"6":260,"7":1,"8":3,"9":3,"10":1,"11":3,"12":3,"13":1},"f":{"0":1,"1":260,"2":3,"3":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/IInsightFacade.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d47666835c4ecddbcc3bd0a086bf82a634ac4da0","contentHash":"d761353b137d345aa2135bd749043e4bd34fad94c92e663c586fa23538b973e2"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":49}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":77}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":42}},"10":{"start":{"line":13,"column":17},"end":{"line":13,"column":34}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":27}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":43}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":26}},"14":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":83}},"16":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":102}},"18":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":55}},"20":{"start":{"line":31,"column":8},"end":{"line":31,"column":49}},"21":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"22":{"start":{"line":35,"column":12},"end":{"line":35,"column":83}},"23":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"24":{"start":{"line":38,"column":12},"end":{"line":38,"column":99}},"25":{"start":{"line":40,"column":8},"end":{"line":47,"column":9}},"26":{"start":{"line":41,"column":12},"end":{"line":41,"column":77}},"27":{"start":{"line":42,"column":12},"end":{"line":42,"column":50}},"28":{"start":{"line":43,"column":12},"end":{"line":43,"column":39}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":95}},"30":{"start":{"line":50,"column":8},"end":{"line":68,"column":11}},"31":{"start":{"line":51,"column":26},"end":{"line":51,"column":28}},"32":{"start":{"line":52,"column":21},"end":{"line":52,"column":51}},"33":{"start":{"line":53,"column":12},"end":{"line":67,"column":13}},"34":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"35":{"start":{"line":55,"column":20},"end":{"line":55,"column":81}},"36":{"start":{"line":57,"column":16},"end":{"line":59,"column":17}},"37":{"start":{"line":58,"column":20},"end":{"line":58,"column":87}},"38":{"start":{"line":60,"column":16},"end":{"line":60,"column":40}},"39":{"start":{"line":61,"column":34},"end":{"line":61,"column":58}},"40":{"start":{"line":62,"column":16},"end":{"line":62,"column":48}},"41":{"start":{"line":63,"column":16},"end":{"line":63,"column":33}},"42":{"start":{"line":66,"column":16},"end":{"line":66,"column":30}},"43":{"start":{"line":71,"column":8},"end":{"line":79,"column":11}},"44":{"start":{"line":72,"column":25},"end":{"line":72,"column":27}},"45":{"start":{"line":73,"column":12},"end":{"line":77,"column":13}},"46":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"47":{"start":{"line":75,"column":20},"end":{"line":75,"column":41}},"48":{"start":{"line":78,"column":12},"end":{"line":78,"column":28}},"49":{"start":{"line":82,"column":8},"end":{"line":97,"column":9}},"50":{"start":{"line":83,"column":12},"end":{"line":83,"column":57}},"51":{"start":{"line":84,"column":24},"end":{"line":84,"column":66}},"52":{"start":{"line":85,"column":12},"end":{"line":93,"column":13}},"53":{"start":{"line":86,"column":29},"end":{"line":86,"column":85}},"54":{"start":{"line":87,"column":27},"end":{"line":91,"column":17}},"55":{"start":{"line":92,"column":16},"end":{"line":92,"column":60}},"56":{"start":{"line":96,"column":12},"end":{"line":96,"column":60}},"57":{"start":{"line":100,"column":25},"end":{"line":100,"column":29}},"58":{"start":{"line":101,"column":8},"end":{"line":108,"column":9}},"59":{"start":{"line":102,"column":12},"end":{"line":107,"column":13}},"60":{"start":{"line":103,"column":16},"end":{"line":103,"column":28}},"61":{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},"62":{"start":{"line":106,"column":16},"end":{"line":106,"column":35}},"63":{"start":{"line":109,"column":8},"end":{"line":109,"column":26}},"64":{"start":{"line":112,"column":8},"end":{"line":151,"column":9}},"65":{"start":{"line":113,"column":26},"end":{"line":113,"column":52}},"66":{"start":{"line":114,"column":33},"end":{"line":114,"column":63}},"67":{"start":{"line":115,"column":24},"end":{"line":115,"column":45}},"68":{"start":{"line":116,"column":12},"end":{"line":116,"column":46}},"69":{"start":{"line":117,"column":26},"end":{"line":117,"column":35}},"70":{"start":{"line":118,"column":29},"end":{"line":118,"column":31}},"71":{"start":{"line":119,"column":12},"end":{"line":141,"column":13}},"72":{"start":{"line":120,"column":16},"end":{"line":140,"column":17}},"73":{"start":{"line":122,"column":20},"end":{"line":137,"column":21}},"74":{"start":{"line":123,"column":35},"end":{"line":123,"column":54}},"75":{"start":{"line":124,"column":24},"end":{"line":136,"column":25}},"76":{"start":{"line":125,"column":28},"end":{"line":134,"column":31}},"77":{"start":{"line":128,"column":45},"end":{"line":128,"column":68}},"78":{"start":{"line":129,"column":45},"end":{"line":129,"column":61}},"79":{"start":{"line":130,"column":32},"end":{"line":130,"column":60}},"80":{"start":{"line":133,"column":32},"end":{"line":133,"column":57}},"81":{"start":{"line":135,"column":28},"end":{"line":135,"column":54}},"82":{"start":{"line":142,"column":12},"end":{"line":142,"column":40}},"83":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"84":{"start":{"line":144,"column":16},"end":{"line":144,"column":77}},"85":{"start":{"line":146,"column":12},"end":{"line":146,"column":97}},"86":{"start":{"line":147,"column":12},"end":{"line":147,"column":94}},"87":{"start":{"line":150,"column":12},"end":{"line":150,"column":83}},"88":{"start":{"line":154,"column":8},"end":{"line":199,"column":9}},"89":{"start":{"line":155,"column":33},"end":{"line":155,"column":63}},"90":{"start":{"line":156,"column":24},"end":{"line":156,"column":45}},"91":{"start":{"line":157,"column":12},"end":{"line":157,"column":46}},"92":{"start":{"line":158,"column":24},"end":{"line":158,"column":46}},"93":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"94":{"start":{"line":160,"column":16},"end":{"line":160,"column":77}},"95":{"start":{"line":162,"column":31},"end":{"line":162,"column":56}},"96":{"start":{"line":163,"column":30},"end":{"line":163,"column":63}},"97":{"start":{"line":164,"column":24},"end":{"line":164,"column":47}},"98":{"start":{"line":165,"column":28},"end":{"line":165,"column":59}},"99":{"start":{"line":166,"column":31},"end":{"line":166,"column":63}},"100":{"start":{"line":167,"column":27},"end":{"line":167,"column":41}},"101":{"start":{"line":168,"column":12},"end":{"line":188,"column":13}},"102":{"start":{"line":170,"column":27},"end":{"line":170,"column":47}},"103":{"start":{"line":171,"column":16},"end":{"line":187,"column":17}},"104":{"start":{"line":172,"column":39},"end":{"line":172,"column":54}},"105":{"start":{"line":173,"column":20},"end":{"line":186,"column":21}},"106":{"start":{"line":174,"column":24},"end":{"line":184,"column":37}},"107":{"start":{"line":177,"column":28},"end":{"line":182,"column":29}},"108":{"start":{"line":178,"column":45},"end":{"line":178,"column":81}},"109":{"start":{"line":179,"column":32},"end":{"line":179,"column":65}},"110":{"start":{"line":185,"column":24},"end":{"line":185,"column":50}},"111":{"start":{"line":189,"column":12},"end":{"line":189,"column":40}},"112":{"start":{"line":190,"column":12},"end":{"line":190,"column":36}},"113":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"114":{"start":{"line":192,"column":16},"end":{"line":192,"column":74}},"115":{"start":{"line":194,"column":12},"end":{"line":194,"column":92}},"116":{"start":{"line":195,"column":12},"end":{"line":195,"column":89}},"117":{"start":{"line":198,"column":12},"end":{"line":198,"column":83}},"118":{"start":{"line":202,"column":19},"end":{"line":207,"column":9}},"119":{"start":{"line":208,"column":8},"end":{"line":208,"column":112}},"120":{"start":{"line":211,"column":22},"end":{"line":211,"column":24}},"121":{"start":{"line":212,"column":19},"end":{"line":216,"column":9}},"122":{"start":{"line":217,"column":8},"end":{"line":217,"column":58}},"123":{"start":{"line":218,"column":8},"end":{"line":222,"column":9}},"124":{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},"125":{"start":{"line":220,"column":16},"end":{"line":220,"column":47}},"126":{"start":{"line":223,"column":8},"end":{"line":223,"column":40}},"127":{"start":{"line":226,"column":0},"end":{"line":226,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":20,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":40},"end":{"line":32,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":28},"end":{"line":48,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":24},"end":{"line":69,"column":5}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":28}},"loc":{"start":{"line":50,"column":48},"end":{"line":68,"column":9}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":19},"end":{"line":80,"column":5}},"line":70},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":27},"end":{"line":71,"column":28}},"loc":{"start":{"line":71,"column":48},"end":{"line":79,"column":9}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":17},"end":{"line":98,"column":5}},"line":81},"9":{"name":"(anonymous_9)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":21},"end":{"line":110,"column":5}},"line":99},"10":{"name":"(anonymous_10)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":41},"end":{"line":152,"column":5}},"line":111},"11":{"name":"(anonymous_11)","decl":{"start":{"line":127,"column":38},"end":{"line":127,"column":39}},"loc":{"start":{"line":127,"column":55},"end":{"line":131,"column":29}},"line":127},"12":{"name":"(anonymous_12)","decl":{"start":{"line":132,"column":39},"end":{"line":132,"column":40}},"loc":{"start":{"line":132,"column":46},"end":{"line":134,"column":29}},"line":132},"13":{"name":"(anonymous_13)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":39},"end":{"line":200,"column":5}},"line":153},"14":{"name":"(anonymous_14)","decl":{"start":{"line":176,"column":34},"end":{"line":176,"column":35}},"loc":{"start":{"line":176,"column":55},"end":{"line":183,"column":25}},"line":176},"15":{"name":"(anonymous_15)","decl":{"start":{"line":201,"column":4},"end":{"line":201,"column":5}},"loc":{"start":{"line":201,"column":38},"end":{"line":209,"column":5}},"line":201},"16":{"name":"(anonymous_16)","decl":{"start":{"line":210,"column":4},"end":{"line":210,"column":5}},"loc":{"start":{"line":210,"column":34},"end":{"line":224,"column":5}},"line":210}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"5":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"6":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"7":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"8":{"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},{"start":{"line":54,"column":16},"end":{"line":56,"column":17}}],"line":54},"9":{"loc":{"start":{"line":57,"column":16},"end":{"line":59,"column":17}},"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":59,"column":17}},{"start":{"line":57,"column":16},"end":{"line":59,"column":17}}],"line":57},"10":{"loc":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"type":"if","locations":[{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},{"start":{"line":74,"column":16},"end":{"line":76,"column":17}}],"line":74},"11":{"loc":{"start":{"line":102,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":107,"column":13}},{"start":{"line":102,"column":12},"end":{"line":107,"column":13}}],"line":102},"12":{"loc":{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},{"start":{"line":105,"column":17},"end":{"line":107,"column":13}}],"line":105},"13":{"loc":{"start":{"line":122,"column":20},"end":{"line":137,"column":21}},"type":"if","locations":[{"start":{"line":122,"column":20},"end":{"line":137,"column":21}},{"start":{"line":122,"column":20},"end":{"line":137,"column":21}}],"line":122},"14":{"loc":{"start":{"line":122,"column":24},"end":{"line":122,"column":86}},"type":"binary-expr","locations":[{"start":{"line":122,"column":24},"end":{"line":122,"column":43}},{"start":{"line":122,"column":47},"end":{"line":122,"column":86}}],"line":122},"15":{"loc":{"start":{"line":124,"column":24},"end":{"line":136,"column":25}},"type":"if","locations":[{"start":{"line":124,"column":24},"end":{"line":136,"column":25}},{"start":{"line":124,"column":24},"end":{"line":136,"column":25}}],"line":124},"16":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143},"17":{"loc":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},{"start":{"line":159,"column":12},"end":{"line":161,"column":13}}],"line":159},"18":{"loc":{"start":{"line":171,"column":16},"end":{"line":187,"column":17}},"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":187,"column":17}},{"start":{"line":171,"column":16},"end":{"line":187,"column":17}}],"line":171},"19":{"loc":{"start":{"line":171,"column":20},"end":{"line":171,"column":52}},"type":"binary-expr","locations":[{"start":{"line":171,"column":20},"end":{"line":171,"column":24}},{"start":{"line":171,"column":28},"end":{"line":171,"column":52}}],"line":171},"20":{"loc":{"start":{"line":173,"column":20},"end":{"line":186,"column":21}},"type":"if","locations":[{"start":{"line":173,"column":20},"end":{"line":186,"column":21}},{"start":{"line":173,"column":20},"end":{"line":186,"column":21}}],"line":173},"21":{"loc":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"type":"if","locations":[{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},{"start":{"line":191,"column":12},"end":{"line":193,"column":13}}],"line":191},"22":{"loc":{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},{"start":{"line":219,"column":12},"end":{"line":221,"column":13}}],"line":219}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":73,"13":73,"14":93,"15":8,"16":85,"17":4,"18":81,"19":55,"20":26,"21":17,"22":3,"23":14,"24":3,"25":11,"26":11,"27":11,"28":11,"29":0,"30":177,"31":177,"32":177,"33":177,"34":177,"35":0,"36":177,"37":2,"38":175,"39":94,"40":94,"41":88,"42":89,"43":14,"44":14,"45":14,"46":19,"47":17,"48":14,"49":73,"50":73,"51":73,"52":73,"53":10,"54":10,"55":10,"56":0,"57":121,"58":121,"59":522,"60":7,"61":515,"62":482,"63":114,"64":55,"65":55,"66":55,"67":55,"68":55,"69":52,"70":52,"71":52,"72":35966,"73":35966,"74":35870,"75":35870,"76":35870,"77":35870,"78":35865,"79":35865,"80":9,"81":35870,"82":52,"83":52,"84":11,"85":41,"86":41,"87":14,"88":26,"89":26,"90":26,"91":26,"92":23,"93":23,"94":5,"95":18,"96":18,"97":18,"98":18,"99":18,"100":18,"101":18,"102":311,"103":311,"104":311,"105":311,"106":163,"107":163,"108":163,"109":163,"110":163,"111":18,"112":18,"113":18,"114":12,"115":6,"116":6,"117":20,"118":47,"119":47,"120":47,"121":47,"122":47,"123":47,"124":61,"125":61,"126":47,"127":1},"f":{"0":5,"1":73,"2":93,"3":17,"4":177,"5":177,"6":14,"7":14,"8":73,"9":121,"10":55,"11":35870,"12":9,"13":26,"14":163,"15":47,"16":47},"b":{"0":[1,1,1],"1":[3,2],"2":[5,5],"3":[8,85],"4":[4,81],"5":[55,26],"6":[3,14],"7":[3,11],"8":[0,177],"9":[2,175],"10":[17,2],"11":[7,515],"12":[482,33],"13":[35870,96],"14":[35966,35925],"15":[35870,0],"16":[11,41],"17":[5,18],"18":[311,0],"19":[311,311],"20":[163,148],"21":[12,6],"22":[61,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/InsightFacade.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tIInsightFacade,\r\n\tInsightDataset,\r\n\tInsightDatasetKind,\r\n\tInsightError,\r\n\tInsightResult,\r\n\tNotFoundError,\r\n} from \"./IInsightFacade\";\r\nimport Sections from \"../models/Sections\";\r\nimport Rooms from \"../models/Rooms\";\r\n\r\nimport fs from \"fs-extra\";\r\nimport JSZip from \"jszip\";\r\nimport QueryValidator from \"../models/QueryValidator\";\r\nimport {Query} from \"../models/Query\";\r\nimport {JSONQuery} from \"../models/IQuery\";\r\nimport {parse} from \"parse5\";\r\nimport {Document} from \"parse5/dist/tree-adapters/default\";\r\n\r\nconst persistDir = \"./data\";\r\n// const tempDir = \"./temp\";\r\n\r\n/**\r\n * This is the main programmatic entry point for the project.\r\n * Method documentation is in IInsightFacade\r\n */\r\nexport default class InsightFacade implements IInsightFacade {\r\n\t// Datasets is a map of dataset ids to if they are used or not.\r\n\tprivate static datasets: Map<string, InsightDataset | false>;\r\n\r\n\tconstructor() {\r\n\t\tInsightFacade.datasets = new Map();\r\n\t\tthis.initialize();\r\n\t\t// console.log(\"InsightFacadeImpl::init()\");\r\n\t}\r\n\r\n\t// 1. Check valid InsightDatasetKind\r\n\t// 2. Check valid id\r\n\t// 3. Check Valid content\r\n\t// 4. Add dataset\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\tif (this.isNotValidID(id)) {\r\n\t\t\t// Reject if id is not valid\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\r\n\t\t}\r\n\t\t// Reject if a dataset with the same id is already present\r\n\t\tif (InsightFacade.datasets.get(id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"id already present in dataset\"));\r\n\t\t}\r\n\r\n\t\tif (kind === InsightDatasetKind.Sections) {\r\n\t\t\treturn this.addSectionDataset(id, content);\r\n\t\t}\r\n\t\treturn this.addRoomsDataset(id, content);\r\n\t}\r\n\r\n\t// 1. Check valid id\r\n\t// 2. Check id is in dataset\r\n\t// 3. Remove dataset\r\n\tpublic async removeDataset(id: string): Promise<string> {\r\n\t\tif (this.isNotValidID(id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\r\n\t\t}\r\n\t\tif (!InsightFacade.datasets.get(id)) {\r\n\t\t\treturn Promise.reject(new NotFoundError(\"ID not present in dataset\"));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tawait fs.remove(persistDir + \"/\" + id + \".json\");\r\n\t\t\tInsightFacade.datasets.set(id, false);\r\n\t\t\treturn Promise.resolve(id);\r\n\t\t} catch {\r\n\t\t\treturn Promise.reject(new InsightError(\"Error removing dataset\"));\r\n\t\t}\r\n\t}\r\n\r\n\t// 1. Check dataset is present\r\n\t// 2. Check Query is valid\r\n\t// 3. Check id is a query that was added\r\n\t// 4. Check that output is not too large\r\n\t// 5. return output\r\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet results: InsightResult[] = [];\r\n\t\t\tlet QV: QueryValidator = new QueryValidator();\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (!fs.pathExistsSync(persistDir)) {\r\n\t\t\t\t\tthrow new InsightError(\"No datasets added\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof query !== \"object\") {\r\n\t\t\t\t\tthrow new InsightError(\"Query must be an object\");\r\n\t\t\t\t}\r\n\t\t\t\tQV.validateQuery(query as object);\r\n\t\t\t\tlet parsedQuery = new Query(query as JSONQuery);\r\n\t\t\t\tresults = parsedQuery.execute();\r\n\t\t\t\tresolve(results);\r\n\t\t\t} catch (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic listDatasets(): Promise<InsightDataset[]> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet result: InsightDataset[] = [];\r\n\t\t\tfor (let dataset of InsightFacade.datasets.values()) {\r\n\t\t\t\tif (dataset) {\r\n\t\t\t\t\tresult.push(dataset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\ttry {\r\n\t\t\tfs.ensureDirSync(persistDir);\r\n\t\t\tlet files = fs.readdirSync(persistDir);\r\n\t\t\tfor (let file of files) {\r\n\t\t\t\tlet object = fs.readJSONSync(persistDir + \"/\" + file);\r\n\t\t\t\tlet data: InsightDataset = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tkind: object.kind,\r\n\t\t\t\t\tnumRows: object.numRows,\r\n\t\t\t\t};\r\n\t\t\t\tInsightFacade.datasets.set(object.id, data);\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tconsole.error(\"Unable to initialize directory\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Returns true if id is an empty string, contains only white space or contains an undersore\r\n\tpublic isNotValidID(id: string): boolean {\r\n\t\tlet isNotValid: boolean = true;\r\n\t\tfor (let letter of id) {\r\n\t\t\tif (letter === \"_\") {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (letter !== \" \") {\r\n\t\t\t\tisNotValid = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isNotValid;\r\n\t}\r\n\r\n\tprivate async addSectionDataset(id: string, content: string): Promise<string[]> {\r\n\t\ttry {\r\n\t\t\tlet dataset = new Sections(id);\r\n\t\t\tconst stringBuffer = Buffer.from(content, \"base64\");\r\n\t\t\tconst zip = new JSZip();\r\n\t\t\tawait zip.loadAsync(stringBuffer);\r\n\t\t\tconst files = zip.files;\r\n\r\n\t\t\tconst promises = [];\r\n\r\n\t\t\tfor (let fileName of Object.keys(files)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet newPromise;\r\n\t\t\t\t\tif (fileName.length > 8 && fileName.substring(0, 8) === \"courses/\") {\r\n\t\t\t\t\t\tlet file = zip.files[fileName];\r\n\t\t\t\t\t\tif (!file.dir) {\r\n\t\t\t\t\t\t\tnewPromise = file\r\n\t\t\t\t\t\t\t\t.async(\"text\")\r\n\t\t\t\t\t\t\t\t.then((fileContent) => {\r\n\t\t\t\t\t\t\t\t\tlet object = JSON.parse(fileContent);\r\n\t\t\t\t\t\t\t\t\tlet result = object[\"result\"];\r\n\t\t\t\t\t\t\t\t\tdataset.addSections(result);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t\t}); // Catch any error\r\n\t\t\t\t\t\t\tpromises.push(newPromise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// It's ok to catch a single itteration\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait Promise.all(promises);\r\n\r\n\t\t\tif (dataset.getSize() < 1) {\r\n\t\t\t\tthrow new InsightError(\"No valid sections\");\r\n\t\t\t}\r\n\t\t\tawait this.writeDatasetToFile(dataset, InsightDatasetKind.Sections);\r\n\t\t\treturn this.updateDatasets(dataset, InsightDatasetKind.Sections);\r\n\t\t} catch (e) {\r\n\t\t\tthrow new InsightError(\"Error extracting data: \" + e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async addRoomsDataset(id: string, content: string): Promise<string[]> {\r\n\t\ttry {\r\n\t\t\tconst stringBuffer = Buffer.from(content, \"base64\");\r\n\t\t\tconst zip = new JSZip();\r\n\t\t\tawait zip.loadAsync(stringBuffer);\r\n\t\t\tlet index = zip.files[\"index.htm\"];\r\n\t\t\tif (!index) {\r\n\t\t\t\tthrow new InsightError(\"No index.htm file\");\r\n\t\t\t}\r\n\t\t\tlet indexContent = await index.async(\"text\");\r\n\t\t\tlet htmlContent = parse(indexContent);\r\n\t\t\tlet rooms = new Rooms(id);\r\n\t\t\tlet buildings = rooms.addBuildings(htmlContent);\r\n\t\t\tlet firstPromise = rooms.getGeolocations(buildings);\r\n\t\t\tlet promises = [firstPromise];\r\n\t\t\tfor (let building of buildings) {\r\n\t\t\t\tlet newPromise;\r\n\t\t\t\tlet link = building.get(\"href\");\r\n\t\t\t\tif (link && typeof link === \"string\") {\r\n\t\t\t\t\tlet buildingFile = zip.files[link];\r\n\t\t\t\t\tif (buildingFile) {\r\n\t\t\t\t\t\tnewPromise = buildingFile\r\n\t\t\t\t\t\t\t.async(\"text\")\r\n\t\t\t\t\t\t\t.then((buildingContent) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tlet parsed = parse(buildingContent);\r\n\t\t\t\t\t\t\t\t\trooms.addRooms(parsed, building);\r\n\t\t\t\t\t\t\t\t} catch {\r\n\t\t\t\t\t\t\t\t\t// Do nothing\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(); // Do nothing\r\n\t\t\t\t\t\tpromises.push(newPromise);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\trooms.update(buildings);\r\n\r\n\t\t\tif (rooms.getSize() < 1) {\r\n\t\t\t\tthrow new InsightError(\"No valid rooms\");\r\n\t\t\t}\r\n\t\t\tawait this.writeDatasetToFile(rooms, InsightDatasetKind.Rooms);\r\n\t\t\treturn this.updateDatasets(rooms, InsightDatasetKind.Rooms);\r\n\t\t} catch (e) {\r\n\t\t\tthrow new InsightError(\"Error extracting data: \" + e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate writeDatasetToFile(dataset: Sections | Rooms, kind: InsightDatasetKind): Promise<void> {\r\n\t\tlet data = {\r\n\t\t\tid: dataset.getId(),\r\n\t\t\tkind: kind,\r\n\t\t\tnumRows: dataset.getSize(),\r\n\t\t\tsections: dataset.getData(),\r\n\t\t};\r\n\t\treturn fs.writeFile(persistDir + \"/\" + dataset.getId() + \".json\", JSON.stringify(data));\r\n\t}\r\n\r\n\tprivate updateDatasets(dataset: Sections | Rooms, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\tlet results: string[] = [];\r\n\t\tlet data: InsightDataset = {\r\n\t\t\tid: dataset.getId(),\r\n\t\t\tkind: kind,\r\n\t\t\tnumRows: dataset.getSize(),\r\n\t\t};\r\n\t\tInsightFacade.datasets.set(dataset.getId(), data);\r\n\t\tfor (let potentialDataset of InsightFacade.datasets.keys()) {\r\n\t\t\tif (InsightFacade.datasets.get(potentialDataset)) {\r\n\t\t\t\tresults.push(potentialDataset);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(results);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5cf78dea8929eed663096df6267b907467615d14","contentHash":"e14ca38c0cc6245e3b0122ba9b8611aed68ea69d6960f4ff11c85cd9b6f31ab5"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Sections.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Sections.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":64}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"6":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":73}},"8":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":49}},"10":{"start":{"line":23,"column":20},"end":{"line":23,"column":29}},"11":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"12":{"start":{"line":25,"column":12},"end":{"line":25,"column":43}},"13":{"start":{"line":27,"column":8},"end":{"line":27,"column":19}},"14":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":40}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":24}},"17":{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},"18":{"start":{"line":37,"column":12},"end":{"line":43,"column":13}},"19":{"start":{"line":38,"column":41},"end":{"line":38,"column":65}},"20":{"start":{"line":39,"column":16},"end":{"line":39,"column":53}},"21":{"start":{"line":40,"column":16},"end":{"line":40,"column":28}},"22":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"23":{"start":{"line":48,"column":12},"end":{"line":48,"column":73}},"24":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"25":{"start":{"line":51,"column":12},"end":{"line":51,"column":37}},"26":{"start":{"line":55,"column":25},"end":{"line":66,"column":9}},"27":{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},"28":{"start":{"line":70,"column":20},"end":{"line":70,"column":32}},"29":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"30":{"start":{"line":72,"column":12},"end":{"line":72,"column":75}},"31":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"32":{"start":{"line":75,"column":12},"end":{"line":75,"column":23}},"33":{"start":{"line":77,"column":8},"end":{"line":91,"column":9}},"34":{"start":{"line":78,"column":12},"end":{"line":87,"column":13}},"35":{"start":{"line":79,"column":16},"end":{"line":79,"column":38}},"36":{"start":{"line":82,"column":29},"end":{"line":82,"column":46}},"37":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"38":{"start":{"line":84,"column":20},"end":{"line":84,"column":62}},"39":{"start":{"line":86,"column":16},"end":{"line":86,"column":30}},"40":{"start":{"line":90,"column":12},"end":{"line":90,"column":93}},"41":{"start":{"line":94,"column":8},"end":{"line":94,"column":54}},"42":{"start":{"line":97,"column":8},"end":{"line":97,"column":54}},"43":{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},"44":{"start":{"line":101,"column":12},"end":{"line":101,"column":24}},"45":{"start":{"line":104,"column":12},"end":{"line":104,"column":53}},"46":{"start":{"line":108,"column":0},"end":{"line":108,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":20},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":14},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":30},"end":{"line":21,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":19},"end":{"line":28,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":43},"end":{"line":26,"column":9}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":36},"end":{"line":34,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":24},"end":{"line":45,"column":5}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":26},"end":{"line":53,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":24},"end":{"line":68,"column":5}},"line":54},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":34},"end":{"line":92,"column":5}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":30},"end":{"line":95,"column":5}},"line":93},"11":{"name":"(anonymous_11)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":30},"end":{"line":98,"column":5}},"line":96},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":21},"end":{"line":106,"column":5}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"1":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},{"start":{"line":30,"column":8},"end":{"line":33,"column":9}}],"line":30},"2":{"loc":{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},{"start":{"line":36,"column":8},"end":{"line":44,"column":9}}],"line":36},"3":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"4":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"5":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"6":{"loc":{"start":{"line":78,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":87,"column":13}},{"start":{"line":78,"column":12},"end":{"line":87,"column":13}}],"line":78},"7":{"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},{"start":{"line":83,"column":16},"end":{"line":85,"column":17}}],"line":83},"8":{"loc":{"start":{"line":83,"column":20},"end":{"line":83,"column":43}},"type":"binary-expr","locations":[{"start":{"line":83,"column":20},"end":{"line":83,"column":27}},{"start":{"line":83,"column":31},"end":{"line":83,"column":43}}],"line":83},"9":{"loc":{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},{"start":{"line":100,"column":8},"end":{"line":105,"column":9}}],"line":100}},"s":{"0":1,"1":1,"2":1,"3":136,"4":136,"5":164,"6":69,"7":0,"8":69,"9":4458228,"10":69,"11":69,"12":4458228,"13":69,"14":4458228,"15":4458228,"16":4458228,"17":402247,"18":402246,"19":402246,"20":402221,"21":402221,"22":35868,"23":3,"24":35865,"25":402238,"26":402246,"27":402221,"28":3873781,"29":3873781,"30":23,"31":3873758,"32":3217847,"33":655911,"34":655911,"35":402233,"36":253678,"37":253678,"38":2,"39":253676,"40":2,"41":2011192,"42":1862589,"43":402234,"44":148554,"45":253680,"46":1},"f":{"0":136,"1":164,"2":69,"3":69,"4":4458228,"5":4458228,"6":402247,"7":35868,"8":402246,"9":3873781,"10":2011192,"11":1862589,"12":402234},"b":{"0":[0,69],"1":[4458228,0],"2":[402246,1],"3":[3,35865],"4":[23,3873758],"5":[3217847,655911],"6":[402233,253678],"7":[2,253676],"8":[253678,4],"9":[148554,253680]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Sections.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Sections.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\r\nimport {Dataset} from \"./Dataset\";\r\n\r\nexport interface Section {\r\n\tuuid: string;\r\n\tid: string;\r\n\ttitle: string;\r\n\tinstructor: string;\r\n\tdept: string;\r\n\tyear: number;\r\n\tavg: number;\r\n\tpass: number;\r\n\tfail: number;\r\n\taudit: number;\r\n}\r\n\r\nexport default class Sections extends Dataset {\r\n\tprivate sections: Section[];\r\n\r\n\tconstructor(id: string) {\r\n\t\tsuper(id, InsightDatasetKind.Sections);\r\n\t\tthis.sections = [];\r\n\t}\r\n\r\n\tpublic getData(): Section[] {\r\n\t\treturn this.sections;\r\n\t}\r\n\r\n\tpublic addDataFromJSON(fileData: any[]): void {\r\n\t\tif (fileData === undefined) {\r\n\t\t\tthrow new InsightError(\"No valid sections\");\r\n\t\t}\r\n\t\tfor (let section of fileData) {\r\n\t\t\tthis.addAlreadyValidSection(section);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDataAsMap(): Map<string, any> {\r\n\t\tconst map = new Map<string, Section>();\r\n\t\tthis.sections.forEach((section) => {\r\n\t\t\tmap.set(section.uuid, section);\r\n\t\t});\r\n\t\treturn map;\r\n\t}\r\n\r\n\tprivate addAlreadyValidSection(section: any): void {\r\n\t\tif (section !== undefined) {\r\n\t\t\tthis.sections.push(section as Section);\r\n\t\t\tthis.size++;\r\n\t\t}\r\n\t}\r\n\r\n\t// Adds section to this.section and increases size by 1\r\n\t// If section is missing required keys then it does not add\r\n\tpublic addSection(section: any): void {\r\n\t\tif (section !== undefined) {\r\n\t\t\ttry {\r\n\t\t\t\tconst formattedSection: Section = this.newSection(section);\r\n\t\t\t\tthis.sections.push(formattedSection);\r\n\t\t\t\t// console.log(this.sections)\r\n\t\t\t\tthis.size++;\r\n\t\t\t} catch {\r\n\t\t\t\t// do nothing\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Adds sections to a dataset\r\n\t// Throws InsightError if input list is empty\r\n\tpublic addSections(sections: any[]): void {\r\n\t\t// console.log(this.getSize())\r\n\t\tif (sections === undefined) {\r\n\t\t\tthrow new InsightError(\"No valid sections\");\r\n\t\t}\r\n\t\tfor (let section of sections) {\r\n\t\t\tthis.addSection(section);\r\n\t\t}\r\n\t\t// console.log(this.getSize())\r\n\t}\r\n\r\n\tprivate newSection(section: any): Section {\r\n\t\tlet newSection: Section = {\r\n\t\t\tuuid: this.keyToString(section, \"id\"),\r\n\t\t\tid: this.keyToString(section, \"Course\"),\r\n\t\t\ttitle: this.keyToString(section, \"Title\"),\r\n\t\t\tinstructor: this.keyToString(section, \"Professor\"),\r\n\t\t\tdept: this.keyToString(section, \"Subject\"),\r\n\t\t\tyear: this.getYear(section),\r\n\t\t\tavg: this.keyToNumber(section, \"Avg\"),\r\n\t\t\tpass: this.keyToNumber(section, \"Pass\"),\r\n\t\t\tfail: this.keyToNumber(section, \"Fail\"),\r\n\t\t\taudit: this.keyToNumber(section, \"Audit\"),\r\n\t\t};\r\n\t\treturn newSection;\r\n\t}\r\n\r\n\t// Checks the type of the key and tries to conver to type, otherwise throws InsightError\r\n\tprivate keyToType(section: any, key: string, type: \"string\" | \"number\"): string | number {\r\n\t\tconst obj = section[key];\r\n\t\tif (obj === undefined) {\r\n\t\t\tthrow new InsightError(key + \" is undefined\");\r\n\t\t}\r\n\t\tif (typeof obj === type) {\r\n\t\t\treturn obj;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (type === \"string\") {\r\n\t\t\t\t// console.log(\"returning: \" + key)\r\n\t\t\t\treturn obj.toString();\r\n\t\t\t} else {\r\n\t\t\t\tlet result = parseInt(obj, 10);\r\n\t\t\t\tif (!result && result !== 0) {\r\n\t\t\t\t\tthrow new InsightError();\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"returning: \" + key);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tthrow new InsightError(key + \" cannot be converted to \" + type);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate keyToString(section: any, key: string): string {\r\n\t\treturn this.keyToType(section, key, \"string\") as string;\r\n\t}\r\n\r\n\tprivate keyToNumber(section: any, key: string): number {\r\n\t\treturn this.keyToType(section, key, \"number\") as number;\r\n\t}\r\n\r\n\tprivate getYear(section: any): number {\r\n\t\tif (section[\"Section\"] === \"overall\") {\r\n\t\t\treturn 1900;\r\n\t\t} else {\r\n\t\t\treturn this.keyToNumber(section, \"Year\");\r\n\t\t}\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"af8c92ac6cc618e7ea6fc8eee8bb73e553e0d255","contentHash":"34726f4e74831f4e953491feb7f8e5ef68bb47fa4c6b3c035f55b0dc2eaf9628"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Dataset.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":22}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":23}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":26},"end":{"line":12,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":14},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":14},"end":{"line":21,"column":5}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":176,"3":176,"4":176,"5":188,"6":176,"7":3517468,"8":1},"f":{"0":176,"1":188,"2":176,"3":3517468},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Dataset.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Dataset.ts"],"names":[],"mappings":";;;AAEA,MAAsB,OAAO;IACpB,EAAE,CAAS;IACT,IAAI,CAAS;IACf,IAAI,CAAqB;IAEjC,YAAY,EAAU,EAAE,IAAwB;QAC/C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;CAOD;AA5BD,0BA4BC","sourcesContent":["import {InsightDatasetKind} from \"../controller/IInsightFacade\";\r\n\r\nexport abstract class Dataset {\r\n\tprivate id: string;\r\n\tprotected size: number;\r\n\tprivate kind: InsightDatasetKind;\r\n\r\n\tconstructor(id: string, kind: InsightDatasetKind) {\r\n\t\tthis.size = 0;\r\n\t\tthis.id = id;\r\n\t\tthis.kind = kind;\r\n\t}\r\n\r\n\tpublic getId(): string {\r\n\t\treturn this.id;\r\n\t}\r\n\r\n\tpublic getSize(): number {\r\n\t\treturn this.size;\r\n\t}\r\n\r\n\tpublic getKind(): InsightDatasetKind {\r\n\t\treturn this.kind;\r\n\t}\r\n\r\n    public abstract getData(): any[];\r\n\r\n    public abstract getDataAsMap(): Map<string, any>;\r\n\r\n    public abstract addDataFromJSON(fileData: any[]): void;\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"073473a79d2dc5db324557d4eb3611193bc3e583","contentHash":"d739ace502392a6b48abd745b3aa399f1af9e142401587201ef9cca00f45b69b"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Rooms.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Rooms.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":64}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":38}},"6":{"start":{"line":11,"column":16},"end":{"line":11,"column":79}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":61}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":26}},"10":{"start":{"line":20,"column":20},"end":{"line":20,"column":29}},"11":{"start":{"line":21,"column":8},"end":{"line":23,"column":11}},"12":{"start":{"line":22,"column":12},"end":{"line":22,"column":37}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":19}},"14":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":70}},"16":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":43}},"18":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":34}},"20":{"start":{"line":37,"column":12},"end":{"line":37,"column":24}},"21":{"start":{"line":41,"column":24},"end":{"line":41,"column":26}},"22":{"start":{"line":42,"column":21},"end":{"line":42,"column":50}},"23":{"start":{"line":43,"column":8},"end":{"line":52,"column":9}},"24":{"start":{"line":44,"column":23},"end":{"line":44,"column":52}},"25":{"start":{"line":45,"column":23},"end":{"line":45,"column":51}},"26":{"start":{"line":46,"column":12},"end":{"line":51,"column":13}},"27":{"start":{"line":47,"column":31},"end":{"line":47,"column":52}},"28":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"29":{"start":{"line":49,"column":20},"end":{"line":49,"column":45}},"30":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"31":{"start":{"line":56,"column":29},"end":{"line":56,"column":65}},"32":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"33":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"34":{"start":{"line":59,"column":16},"end":{"line":59,"column":29}},"35":{"start":{"line":62,"column":8},"end":{"line":62,"column":20}},"36":{"start":{"line":65,"column":23},"end":{"line":65,"column":32}},"37":{"start":{"line":66,"column":8},"end":{"line":66,"column":116}},"38":{"start":{"line":67,"column":8},"end":{"line":67,"column":115}},"39":{"start":{"line":68,"column":8},"end":{"line":68,"column":100}},"40":{"start":{"line":69,"column":8},"end":{"line":69,"column":76}},"41":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"42":{"start":{"line":73,"column":20},"end":{"line":73,"column":22}},"43":{"start":{"line":74,"column":21},"end":{"line":74,"column":60}},"44":{"start":{"line":75,"column":8},"end":{"line":90,"column":9}},"45":{"start":{"line":76,"column":23},"end":{"line":76,"column":52}},"46":{"start":{"line":77,"column":23},"end":{"line":77,"column":51}},"47":{"start":{"line":78,"column":12},"end":{"line":89,"column":13}},"48":{"start":{"line":79,"column":27},"end":{"line":79,"column":44}},"49":{"start":{"line":80,"column":32},"end":{"line":80,"column":57}},"50":{"start":{"line":81,"column":29},"end":{"line":81,"column":47}},"51":{"start":{"line":82,"column":16},"end":{"line":85,"column":17}},"52":{"start":{"line":83,"column":31},"end":{"line":83,"column":55}},"53":{"start":{"line":84,"column":20},"end":{"line":84,"column":43}},"54":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"55":{"start":{"line":87,"column":20},"end":{"line":87,"column":37}},"56":{"start":{"line":91,"column":8},"end":{"line":91,"column":37}},"57":{"start":{"line":94,"column":8},"end":{"line":118,"column":9}},"58":{"start":{"line":95,"column":24},"end":{"line":95,"column":45}},"59":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"60":{"start":{"line":97,"column":16},"end":{"line":97,"column":25}},"61":{"start":{"line":99,"column":12},"end":{"line":117,"column":13}},"62":{"start":{"line":100,"column":16},"end":{"line":116,"column":17}},"63":{"start":{"line":101,"column":35},"end":{"line":113,"column":21}},"64":{"start":{"line":114,"column":20},"end":{"line":114,"column":46}},"65":{"start":{"line":115,"column":20},"end":{"line":115,"column":32}},"66":{"start":{"line":121,"column":27},"end":{"line":121,"column":83}},"67":{"start":{"line":122,"column":8},"end":{"line":126,"column":9}},"68":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"69":{"start":{"line":124,"column":16},"end":{"line":124,"column":29}},"70":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"71":{"start":{"line":128,"column":12},"end":{"line":128,"column":25}},"72":{"start":{"line":130,"column":8},"end":{"line":130,"column":20}},"73":{"start":{"line":133,"column":19},"end":{"line":133,"column":28}},"74":{"start":{"line":134,"column":8},"end":{"line":134,"column":107}},"75":{"start":{"line":135,"column":8},"end":{"line":135,"column":104}},"76":{"start":{"line":136,"column":8},"end":{"line":136,"column":98}},"77":{"start":{"line":137,"column":8},"end":{"line":137,"column":94}},"78":{"start":{"line":138,"column":8},"end":{"line":138,"column":45}},"79":{"start":{"line":139,"column":8},"end":{"line":139,"column":20}},"80":{"start":{"line":142,"column":21},"end":{"line":142,"column":23}},"81":{"start":{"line":143,"column":19},"end":{"line":143,"column":25}},"82":{"start":{"line":144,"column":8},"end":{"line":154,"column":9}},"83":{"start":{"line":145,"column":23},"end":{"line":145,"column":33}},"84":{"start":{"line":146,"column":12},"end":{"line":150,"column":13}},"85":{"start":{"line":147,"column":16},"end":{"line":149,"column":17}},"86":{"start":{"line":148,"column":20},"end":{"line":148,"column":37}},"87":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"88":{"start":{"line":152,"column":16},"end":{"line":152,"column":34}},"89":{"start":{"line":155,"column":8},"end":{"line":155,"column":22}},"90":{"start":{"line":158,"column":19},"end":{"line":158,"column":23}},"91":{"start":{"line":159,"column":8},"end":{"line":166,"column":9}},"92":{"start":{"line":160,"column":12},"end":{"line":165,"column":13}},"93":{"start":{"line":161,"column":16},"end":{"line":161,"column":42}},"94":{"start":{"line":164,"column":16},"end":{"line":164,"column":42}},"95":{"start":{"line":167,"column":8},"end":{"line":167,"column":20}},"96":{"start":{"line":170,"column":20},"end":{"line":170,"column":45}},"97":{"start":{"line":171,"column":8},"end":{"line":187,"column":9}},"98":{"start":{"line":172,"column":29},"end":{"line":172,"column":39}},"99":{"start":{"line":173,"column":12},"end":{"line":186,"column":13}},"100":{"start":{"line":174,"column":16},"end":{"line":185,"column":17}},"101":{"start":{"line":175,"column":20},"end":{"line":184,"column":21}},"102":{"start":{"line":179,"column":36},"end":{"line":179,"column":66}},"103":{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},"104":{"start":{"line":181,"column":28},"end":{"line":181,"column":38}},"105":{"start":{"line":183,"column":24},"end":{"line":183,"column":87}},"106":{"start":{"line":188,"column":8},"end":{"line":188,"column":25}},"107":{"start":{"line":191,"column":29},"end":{"line":191,"column":53}},"108":{"start":{"line":192,"column":8},"end":{"line":201,"column":9}},"109":{"start":{"line":193,"column":29},"end":{"line":193,"column":39}},"110":{"start":{"line":194,"column":12},"end":{"line":200,"column":13}},"111":{"start":{"line":195,"column":16},"end":{"line":199,"column":17}},"112":{"start":{"line":196,"column":20},"end":{"line":198,"column":21}},"113":{"start":{"line":197,"column":24},"end":{"line":197,"column":47}},"114":{"start":{"line":202,"column":8},"end":{"line":202,"column":25}},"115":{"start":{"line":205,"column":23},"end":{"line":205,"column":25}},"116":{"start":{"line":206,"column":8},"end":{"line":232,"column":9}},"117":{"start":{"line":207,"column":26},"end":{"line":207,"column":49}},"118":{"start":{"line":208,"column":12},"end":{"line":231,"column":13}},"119":{"start":{"line":209,"column":16},"end":{"line":230,"column":17}},"120":{"start":{"line":210,"column":20},"end":{"line":210,"column":58}},"121":{"start":{"line":211,"column":34},"end":{"line":226,"column":22}},"122":{"start":{"line":212,"column":24},"end":{"line":225,"column":27}},"123":{"start":{"line":213,"column":39},"end":{"line":213,"column":41}},"124":{"start":{"line":214,"column":28},"end":{"line":216,"column":31}},"125":{"start":{"line":215,"column":32},"end":{"line":215,"column":46}},"126":{"start":{"line":217,"column":28},"end":{"line":222,"column":31}},"127":{"start":{"line":218,"column":45},"end":{"line":218,"column":61}},"128":{"start":{"line":219,"column":32},"end":{"line":219,"column":67}},"129":{"start":{"line":220,"column":32},"end":{"line":220,"column":67}},"130":{"start":{"line":221,"column":32},"end":{"line":221,"column":46}},"131":{"start":{"line":224,"column":28},"end":{"line":224,"column":47}},"132":{"start":{"line":227,"column":20},"end":{"line":227,"column":43}},"133":{"start":{"line":233,"column":8},"end":{"line":233,"column":44}},"134":{"start":{"line":236,"column":0},"end":{"line":236,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":20},"end":{"line":15,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":14},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":19},"end":{"line":25,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":27},"end":{"line":21,"column":28}},"loc":{"start":{"line":21,"column":37},"end":{"line":23,"column":9}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":30},"end":{"line":33,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":30},"end":{"line":39,"column":5}},"line":34},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":24},"end":{"line":54,"column":5}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":30},"end":{"line":63,"column":5}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":21},"end":{"line":71,"column":5}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":40},"end":{"line":92,"column":5}},"line":72},"11":{"name":"(anonymous_11)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":22},"end":{"line":119,"column":5}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":22},"end":{"line":131,"column":5}},"line":120},"13":{"name":"(anonymous_13)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":17},"end":{"line":140,"column":5}},"line":132},"14":{"name":"(anonymous_14)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":24},"end":{"line":156,"column":5}},"line":141},"15":{"name":"(anonymous_15)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":24},"end":{"line":168,"column":5}},"line":157},"16":{"name":"(anonymous_16)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":36},"end":{"line":189,"column":5}},"line":169},"17":{"name":"(anonymous_17)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":19},"end":{"line":203,"column":5}},"line":190},"18":{"name":"(anonymous_18)","decl":{"start":{"line":204,"column":4},"end":{"line":204,"column":5}},"loc":{"start":{"line":204,"column":37},"end":{"line":234,"column":5}},"line":204},"19":{"name":"(anonymous_19)","decl":{"start":{"line":211,"column":46},"end":{"line":211,"column":47}},"loc":{"start":{"line":211,"column":67},"end":{"line":226,"column":21}},"line":211},"20":{"name":"(anonymous_20)","decl":{"start":{"line":212,"column":74},"end":{"line":212,"column":75}},"loc":{"start":{"line":212,"column":88},"end":{"line":223,"column":25}},"line":212},"21":{"name":"(anonymous_21)","decl":{"start":{"line":214,"column":48},"end":{"line":214,"column":49}},"loc":{"start":{"line":214,"column":59},"end":{"line":216,"column":29}},"line":214},"22":{"name":"(anonymous_22)","decl":{"start":{"line":217,"column":47},"end":{"line":217,"column":48}},"loc":{"start":{"line":217,"column":53},"end":{"line":222,"column":29}},"line":217},"23":{"name":"(anonymous_23)","decl":{"start":{"line":223,"column":39},"end":{"line":223,"column":40}},"loc":{"start":{"line":223,"column":52},"end":{"line":225,"column":25}},"line":223}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"4":{"loc":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},{"start":{"line":35,"column":8},"end":{"line":38,"column":9}}],"line":35},"5":{"loc":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},{"start":{"line":48,"column":16},"end":{"line":50,"column":17}}],"line":48},"6":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"7":{"loc":{"start":{"line":82,"column":16},"end":{"line":85,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":85,"column":17}},{"start":{"line":82,"column":16},"end":{"line":85,"column":17}}],"line":82},"8":{"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":67}},"type":"binary-expr","locations":[{"start":{"line":82,"column":20},"end":{"line":82,"column":43}},{"start":{"line":82,"column":47},"end":{"line":82,"column":67}}],"line":82},"9":{"loc":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},{"start":{"line":86,"column":16},"end":{"line":88,"column":17}}],"line":86},"10":{"loc":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":12},"end":{"line":98,"column":13}}],"line":96},"11":{"loc":{"start":{"line":99,"column":12},"end":{"line":117,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":117,"column":13}},{"start":{"line":99,"column":12},"end":{"line":117,"column":13}}],"line":99},"12":{"loc":{"start":{"line":99,"column":16},"end":{"line":99,"column":55}},"type":"binary-expr","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":35}},{"start":{"line":99,"column":39},"end":{"line":99,"column":55}}],"line":99},"13":{"loc":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},{"start":{"line":123,"column":12},"end":{"line":125,"column":13}}],"line":123},"14":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"15":{"loc":{"start":{"line":146,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":150,"column":13}},{"start":{"line":146,"column":12},"end":{"line":150,"column":13}}],"line":146},"16":{"loc":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},{"start":{"line":151,"column":12},"end":{"line":153,"column":13}}],"line":151},"17":{"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":60}},"type":"binary-expr","locations":[{"start":{"line":159,"column":15},"end":{"line":159,"column":30}},{"start":{"line":159,"column":34},"end":{"line":159,"column":60}}],"line":159},"18":{"loc":{"start":{"line":160,"column":12},"end":{"line":165,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":165,"column":13}},{"start":{"line":160,"column":12},"end":{"line":165,"column":13}}],"line":160},"19":{"loc":{"start":{"line":173,"column":12},"end":{"line":186,"column":13}},"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":186,"column":13}},{"start":{"line":173,"column":12},"end":{"line":186,"column":13}}],"line":173},"20":{"loc":{"start":{"line":175,"column":20},"end":{"line":184,"column":21}},"type":"if","locations":[{"start":{"line":175,"column":20},"end":{"line":184,"column":21}},{"start":{"line":175,"column":20},"end":{"line":184,"column":21}}],"line":175},"21":{"loc":{"start":{"line":175,"column":24},"end":{"line":178,"column":53}},"type":"binary-expr","locations":[{"start":{"line":175,"column":24},"end":{"line":175,"column":38}},{"start":{"line":176,"column":24},"end":{"line":176,"column":50}},{"start":{"line":177,"column":24},"end":{"line":177,"column":39}},{"start":{"line":178,"column":24},"end":{"line":178,"column":53}}],"line":175},"22":{"loc":{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},"type":"if","locations":[{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},{"start":{"line":180,"column":24},"end":{"line":182,"column":25}}],"line":180},"23":{"loc":{"start":{"line":194,"column":12},"end":{"line":200,"column":13}},"type":"if","locations":[{"start":{"line":194,"column":12},"end":{"line":200,"column":13}},{"start":{"line":194,"column":12},"end":{"line":200,"column":13}}],"line":194},"24":{"loc":{"start":{"line":196,"column":20},"end":{"line":198,"column":21}},"type":"if","locations":[{"start":{"line":196,"column":20},"end":{"line":198,"column":21}},{"start":{"line":196,"column":20},"end":{"line":198,"column":21}}],"line":196},"25":{"loc":{"start":{"line":196,"column":24},"end":{"line":196,"column":67}},"type":"binary-expr","locations":[{"start":{"line":196,"column":24},"end":{"line":196,"column":38}},{"start":{"line":196,"column":42},"end":{"line":196,"column":67}}],"line":196},"26":{"loc":{"start":{"line":208,"column":12},"end":{"line":231,"column":13}},"type":"if","locations":[{"start":{"line":208,"column":12},"end":{"line":231,"column":13}},{"start":{"line":208,"column":12},"end":{"line":231,"column":13}}],"line":208}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":40,"7":40,"8":40,"9":44,"10":22,"11":22,"12":8008,"13":22,"14":22,"15":0,"16":22,"17":8008,"18":8008,"19":8008,"20":8008,"21":18,"22":18,"23":18,"24":19,"25":19,"26":19,"27":311,"28":311,"29":311,"30":18,"31":311,"32":311,"33":933,"34":0,"35":311,"36":311,"37":311,"38":311,"39":311,"40":311,"41":311,"42":163,"43":163,"44":163,"45":99,"46":99,"47":99,"48":751,"49":751,"50":751,"51":751,"52":750,"53":750,"54":751,"55":745,"56":163,"57":18,"58":311,"59":311,"60":2,"61":309,"62":92,"63":741,"64":741,"65":741,"66":751,"67":751,"68":4498,"69":4,"70":747,"71":2,"72":745,"73":751,"74":751,"75":751,"76":751,"77":751,"78":751,"79":751,"80":5416,"81":5416,"82":5416,"83":487312,"84":487312,"85":218940,"86":481896,"87":487312,"88":23397,"89":5416,"90":7849,"91":7849,"92":9956,"93":7844,"94":2112,"95":7849,"96":3937,"97":3937,"98":13331,"99":13331,"100":13331,"101":13331,"102":3927,"103":3927,"104":5,"105":3922,"106":10,"107":1062,"108":1062,"109":1060,"110":1060,"111":1060,"112":1060,"113":1060,"114":2,"115":18,"116":18,"117":311,"118":311,"119":311,"120":311,"121":311,"122":311,"123":311,"124":311,"125":311,"126":311,"127":311,"128":311,"129":311,"130":311,"131":0,"132":311,"133":18,"134":1},"f":{"0":1,"1":40,"2":44,"3":22,"4":8008,"5":22,"6":8008,"7":18,"8":311,"9":311,"10":163,"11":18,"12":751,"13":751,"14":5416,"15":7849,"16":3937,"17":1062,"18":18,"19":311,"20":311,"21":311,"22":311,"23":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,22],"4":[8008,0],"5":[311,0],"6":[0,933],"7":[750,1],"8":[751,751],"9":[745,6],"10":[2,309],"11":[92,217],"12":[309,161],"13":[4,4494],"14":[2,745],"15":[218940,268372],"16":[23397,463915],"17":[17805,9961],"18":[7844,2112],"19":[13331,0],"20":[3927,9404],"21":[13331,13331,13331,13331],"22":[5,3922],"23":[1060,0],"24":[1060,0],"25":[1060,1060],"26":[311,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Rooms.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\r\nimport {Document} from \"parse5/dist/tree-adapters/default\";\r\nimport Http from \"node:http\";\r\nimport {Dataset} from \"./Dataset\";\r\n\r\nexport interface Room {\r\n\tnumber: string;\r\n\tname: string;\r\n\tseats: number;\r\n\ttype: string;\r\n\tfurniture: string;\r\n\thref: string;\r\n\tfullname: string;\r\n\tshortname: string;\r\n\taddress: string;\r\n\tlat: number;\r\n\tlon: number;\r\n}\r\n\r\nexport interface Building {\r\n\tfullname: string;\r\n\tshortname: string;\r\n\taddress: string;\r\n\tlat: number;\r\n\tlon: number;\r\n\trooms: Room[];\r\n}\r\n\r\nexport default class Rooms extends Dataset {\r\n\tprivate rooms: Room[];\r\n\tprivate urlPrefix: string = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team123/\";\r\n\r\n\tconstructor(id: string) {\r\n\t\tsuper(id, InsightDatasetKind.Rooms);\r\n\t\tthis.rooms = [];\r\n\t}\r\n\r\n\tpublic getData(): Room[] {\r\n\t\treturn this.rooms;\r\n\t}\r\n\r\n\tpublic getDataAsMap(): Map<string, any> {\r\n\t\tconst map = new Map<string, Room>();\r\n\t\tthis.rooms.forEach((room) => {\r\n\t\t\tmap.set(room.href, room);\r\n\t\t});\r\n\t\treturn map;\r\n\t}\r\n\r\n\tpublic addDataFromJSON(fileData: any[]): void {\r\n\t\tif (fileData === undefined) {\r\n\t\t\tthrow new InsightError(\"No valid rooms\");\r\n\t\t}\r\n\t\tfor (let room of fileData) {\r\n\t\t\tthis.addAlreadyValidRoom(room);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate addAlreadyValidRoom(room: any) {\r\n\t\tif (room !== undefined) {\r\n\t\t\tthis.rooms.push(room as Room);\r\n\t\t\tthis.size++;\r\n\t\t}\r\n\t}\r\n\r\n\t// Searches nodes for links to building files\r\n\tpublic addBuildings(index: any): Array<Map<string, string | undefined>> {\r\n\t\tlet buildings = [];\r\n\t\tlet tables = this.findTags(index, \"table\");\r\n\t\tfor (const table of tables) {\r\n\t\t\tlet body = this.findTags(table, \"tbody\");\r\n\t\t\tlet rows = this.findTags(body[0], \"tr\");\r\n\t\t\tfor (let row of rows) {\r\n\t\t\t\tlet building = this.addBuilding(row);\r\n\t\t\t\tif (this.buildingIsValid(building)) {\r\n\t\t\t\t\tbuildings.push(building);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buildings;\r\n\t}\r\n\r\n\tprivate buildingIsValid(building: Map<string, string | undefined>): boolean {\r\n\t\tconst requiredKeys = [\"shortname\", \"fullname\", \"address\"];\r\n\t\tfor (let key of requiredKeys) {\r\n\t\t\tif (building.get(key) === undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate addBuilding(row: any): Map<string, string | undefined> {\r\n\t\tlet building: Map<string, string | undefined> = new Map();\r\n\t\tbuilding.set(\"address\", String(this.findClassValue(row, \"views-field views-field-field-building-address\")));\r\n\t\tbuilding.set(\"shortname\", String(this.findClassValue(row, \"views-field views-field-field-building-code\")));\r\n\t\tbuilding.set(\"fullname\", String(this.findClassValue(row, \"views-field views-field-title\")));\r\n\t\tbuilding.set(\"href\", String(this.findHref(row)?.replace(\"./\", \"\")));\r\n\t\treturn building;\r\n\t}\r\n\r\n\tpublic addRooms(buildingContent: any, building: Map<string, string | any[] | undefined>) {\r\n\t\tlet rooms = [];\r\n\t\tlet tables = this.findTags(buildingContent, \"table\");\r\n\t\tfor (const table of tables) {\r\n\t\t\tlet body = this.findTags(table, \"tbody\");\r\n\t\t\tlet rows = this.findTags(body[0], \"tr\");\r\n\t\t\tfor (let row of rows) {\r\n\t\t\t\tlet room = this.addRoom(row);\r\n\t\t\t\tlet shortname = building.get(\"shortname\");\r\n\t\t\t\tlet number = room.get(\"number\");\r\n\t\t\t\tif (shortname !== undefined && number !== undefined) {\r\n\t\t\t\t\tlet name = shortname + \"_\" + number;\r\n\t\t\t\t\troom.set(\"name\", name);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.isValidRoom(room)) {\r\n\t\t\t\t\t// console.log(room)\r\n\t\t\t\t\trooms.push(room);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuilding.set(\"rooms\", rooms);\r\n\t}\r\n\r\n\tpublic update(buildings: any[]): void {\r\n\t\tfor (let building of buildings) {\r\n\t\t\tlet rooms = building.get(\"rooms\");\r\n\t\t\tif (building.get(\"lat\") === undefined) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (rooms !== undefined && rooms.length > 0) {\r\n\t\t\t\tfor (let room of rooms) {\r\n\t\t\t\t\tlet roomData: Room = {\r\n\t\t\t\t\t\tnumber: room.get(\"number\"),\r\n\t\t\t\t\t\tname: room.get(\"name\"),\r\n\t\t\t\t\t\tseats: room.get(\"seats\"),\r\n\t\t\t\t\t\ttype: room.get(\"type\"),\r\n\t\t\t\t\t\tfurniture: room.get(\"furniture\"),\r\n\t\t\t\t\t\thref: room.get(\"href\"),\r\n\t\t\t\t\t\tfullname: building.get(\"fullname\"),\r\n\t\t\t\t\t\tshortname: building.get(\"shortname\"),\r\n\t\t\t\t\t\taddress: building.get(\"address\"),\r\n\t\t\t\t\t\tlat: building.get(\"lat\"),\r\n\t\t\t\t\t\tlon: building.get(\"lon\"),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.rooms.push(roomData);\r\n\t\t\t\t\tthis.size++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidRoom(room: Map<string, string | number | undefined>): boolean {\r\n\t\tlet requiredKeys = [\"number\", \"name\", \"seats\", \"type\", \"furniture\", \"href\"];\r\n\t\tfor (let key of requiredKeys) {\r\n\t\t\t// console.log(key)\r\n\t\t\t// console.log(key)\r\n\t\t\t// console.log(room.get(key))\r\n\t\t\tif (room.get(key) === undefined) {\r\n\t\t\t\t// console.log(key)\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isNaN(Number(room.get(\"seats\")))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate addRoom(row: any): Map<string, string | number | undefined> {\r\n\t\tlet room: Map<string, string | number | undefined> = new Map();\r\n\r\n\t\troom.set(\"seats\", Number(this.findClassValue(row, \"views-field views-field-field-room-capacity\")));\r\n\t\troom.set(\"furniture\", this.findClassValue(row, \"views-field views-field-field-room-furniture\"));\r\n\t\troom.set(\"number\", this.findClassValue(row, \"views-field views-field-field-room-number\"));\r\n\t\troom.set(\"type\", this.findClassValue(row, \"views-field views-field-field-room-type\"));\r\n\t\troom.set(\"href\", this.findHref(row));\r\n\t\t// console.log(room)\r\n\t\treturn room;\r\n\t}\r\n\r\n\tprivate findTags(node: any, tag: string): any[] {\r\n\t\tlet result = [];\r\n\t\tlet todo = [node];\r\n\t\twhile (todo.length > 0) {\r\n\t\t\tlet curr = todo.pop();\r\n\t\t\tif (curr.childNodes) {\r\n\t\t\t\tfor (let child of curr.childNodes) {\r\n\t\t\t\t\ttodo.push(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (curr.nodeName === tag) {\r\n\t\t\t\tresult.push(curr);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate findFirstLeaf(node: any): any {\r\n\t\tlet curr = node;\r\n\t\twhile (curr.childNodes && curr.childNodes.length > 0) {\r\n\t\t\tif (curr.childNodes.length === 1) {\r\n\t\t\t\tcurr = curr.childNodes[0];\r\n\t\t\t} else {\r\n\t\t\t\tcurr = curr.childNodes[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn curr;\r\n\t}\r\n\r\n\tprivate findClassValue(node: any, className: string): string | undefined {\r\n\t\tlet cells = this.findTags(node, \"td\");\r\n\t\tfor (let cell of cells) {\r\n\t\t\tlet attributes = cell.attrs;\r\n\t\t\tif (attributes) {\r\n\t\t\t\tfor (let attribute of attributes) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tattribute.name &&\r\n\t\t\t\t\t\tattribute.name === \"class\" &&\r\n\t\t\t\t\t\tattribute.value &&\r\n\t\t\t\t\t\tattribute.value === className\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlet value = this.findFirstLeaf(cell).value;\r\n\t\t\t\t\t\t// console.log(value)\r\n\t\t\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.findFirstLeaf(cell).value.replace(\"\\n\", \"\").trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tprivate findHref(node: any): string | undefined {\r\n\t\tlet potentialLinks = this.findTags(node, \"a\");\r\n\t\tfor (let link of potentialLinks) {\r\n\t\t\tlet attributes = link.attrs;\r\n\t\t\tif (attributes) {\r\n\t\t\t\tfor (let attribute of attributes) {\r\n\t\t\t\t\tif (attribute.name && attribute.name === \"href\") {\r\n\t\t\t\t\t\treturn attribute.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic async getGeolocations(buildings: Array<Map<string, string | undefined>>): Promise<void> {\r\n\t\tlet promises = [];\r\n\t\tfor (let building of buildings) {\r\n\t\t\tlet address = building.get(\"address\");\r\n\t\t\tif (address !== undefined) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\taddress = address.replace(\" \", \"%20\");\r\n\t\t\t\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tHttp.get(this.urlPrefix + address, (response: any) => {\r\n\t\t\t\t\t\t\tlet body = \"\";\r\n\t\t\t\t\t\t\tresponse.on(\"data\", (chunk: any) => {\r\n\t\t\t\t\t\t\t\tbody += chunk;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tresponse.on(\"end\", () => {\r\n\t\t\t\t\t\t\t\tlet result = JSON.parse(body);\r\n\t\t\t\t\t\t\t\tbuilding.set(\"lat\", result[\"lat\"]);\r\n\t\t\t\t\t\t\t\tbuilding.set(\"lon\", result[\"lon\"]);\r\n\t\t\t\t\t\t\t\tresolve(body);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}).on(\"error\", function (e) {\r\n\t\t\t\t\t\t\tresolve(undefined);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(promise);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Do nothing\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(promises).then();\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2a5c51dbe8a16553219e89bf7ced680c5b2ab317","contentHash":"b64642194c8adbb1e5ccee14de727cceb860aa4625ddde2fdd48d8f1a7b88476"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\QueryValidator.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":64}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":72}},"5":{"start":{"line":9,"column":9},"end":{"line":9,"column":37}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":41}},"7":{"start":{"line":12,"column":23},"end":{"line":12,"column":28}},"8":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":65}},"10":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"11":{"start":{"line":17,"column":12},"end":{"line":17,"column":45}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":45}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"14":{"start":{"line":23,"column":21},"end":{"line":23,"column":39}},"15":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":76}},"17":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":69}},"19":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"20":{"start":{"line":31,"column":12},"end":{"line":31,"column":71}},"21":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"22":{"start":{"line":34,"column":12},"end":{"line":34,"column":74}},"23":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"24":{"start":{"line":37,"column":12},"end":{"line":37,"column":76}},"25":{"start":{"line":41,"column":21},"end":{"line":41,"column":39}},"26":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":88}},"28":{"start":{"line":45,"column":20},"end":{"line":45,"column":27}},"29":{"start":{"line":46,"column":26},"end":{"line":46,"column":70}},"30":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"31":{"start":{"line":48,"column":12},"end":{"line":48,"column":76}},"32":{"start":{"line":50,"column":8},"end":{"line":61,"column":9}},"33":{"start":{"line":51,"column":12},"end":{"line":51,"column":48}},"34":{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":44}},"36":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"37":{"start":{"line":57,"column":12},"end":{"line":57,"column":44}},"38":{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},"39":{"start":{"line":60,"column":12},"end":{"line":60,"column":36}},"40":{"start":{"line":64,"column":21},"end":{"line":64,"column":41}},"41":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"42":{"start":{"line":66,"column":12},"end":{"line":66,"column":78}},"43":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"44":{"start":{"line":69,"column":12},"end":{"line":69,"column":79}},"45":{"start":{"line":71,"column":8},"end":{"line":75,"column":9}},"46":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"47":{"start":{"line":73,"column":16},"end":{"line":73,"column":89}},"48":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"49":{"start":{"line":77,"column":12},"end":{"line":77,"column":87}},"50":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"51":{"start":{"line":79,"column":44},"end":{"line":79,"column":67}},"52":{"start":{"line":80,"column":12},"end":{"line":80,"column":95}},"53":{"start":{"line":82,"column":30},"end":{"line":82,"column":32}},"54":{"start":{"line":83,"column":8},"end":{"line":86,"column":11}},"55":{"start":{"line":84,"column":12},"end":{"line":84,"column":49}},"56":{"start":{"line":85,"column":12},"end":{"line":85,"column":42}},"57":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"58":{"start":{"line":88,"column":12},"end":{"line":88,"column":61}},"59":{"start":{"line":92,"column":8},"end":{"line":111,"column":9}},"60":{"start":{"line":93,"column":12},"end":{"line":93,"column":56}},"61":{"start":{"line":95,"column":13},"end":{"line":111,"column":9}},"62":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"63":{"start":{"line":97,"column":16},"end":{"line":97,"column":83}},"64":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"65":{"start":{"line":100,"column":16},"end":{"line":100,"column":84}},"66":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"67":{"start":{"line":103,"column":16},"end":{"line":103,"column":96}},"68":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"69":{"start":{"line":106,"column":16},"end":{"line":106,"column":58}},"70":{"start":{"line":110,"column":12},"end":{"line":110,"column":101}},"71":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"72":{"start":{"line":115,"column":12},"end":{"line":115,"column":85}},"73":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"74":{"start":{"line":118,"column":12},"end":{"line":118,"column":85}},"75":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"76":{"start":{"line":121,"column":12},"end":{"line":121,"column":87}},"77":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"78":{"start":{"line":124,"column":12},"end":{"line":124,"column":87}},"79":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"80":{"start":{"line":126,"column":50},"end":{"line":126,"column":73}},"81":{"start":{"line":127,"column":12},"end":{"line":127,"column":93}},"82":{"start":{"line":129,"column":8},"end":{"line":133,"column":9}},"83":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"84":{"start":{"line":131,"column":16},"end":{"line":131,"column":88}},"85":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"86":{"start":{"line":135,"column":12},"end":{"line":135,"column":41}},"87":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"88":{"start":{"line":140,"column":12},"end":{"line":140,"column":122}},"89":{"start":{"line":142,"column":25},"end":{"line":142,"column":45}},"90":{"start":{"line":143,"column":8},"end":{"line":143,"column":43}},"91":{"start":{"line":144,"column":27},"end":{"line":144,"column":41}},"92":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"93":{"start":{"line":146,"column":12},"end":{"line":146,"column":81}},"94":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"95":{"start":{"line":149,"column":12},"end":{"line":149,"column":128}},"96":{"start":{"line":151,"column":22},"end":{"line":151,"column":48}},"97":{"start":{"line":152,"column":28},"end":{"line":152,"column":65}},"98":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"99":{"start":{"line":154,"column":12},"end":{"line":154,"column":87}},"100":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"101":{"start":{"line":157,"column":12},"end":{"line":157,"column":85}},"102":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"103":{"start":{"line":160,"column":12},"end":{"line":160,"column":89}},"104":{"start":{"line":164,"column":32},"end":{"line":164,"column":38}},"105":{"start":{"line":165,"column":36},"end":{"line":165,"column":64}},"106":{"start":{"line":166,"column":27},"end":{"line":166,"column":49}},"107":{"start":{"line":167,"column":28},"end":{"line":167,"column":55}},"108":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"109":{"start":{"line":169,"column":12},"end":{"line":169,"column":95}},"110":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"111":{"start":{"line":172,"column":12},"end":{"line":172,"column":39}},"112":{"start":{"line":176,"column":26},"end":{"line":176,"column":32}},"113":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"114":{"start":{"line":178,"column":12},"end":{"line":178,"column":80}},"115":{"start":{"line":180,"column":8},"end":{"line":180,"column":42}},"116":{"start":{"line":183,"column":28},"end":{"line":183,"column":34}},"117":{"start":{"line":184,"column":32},"end":{"line":184,"column":56}},"118":{"start":{"line":185,"column":27},"end":{"line":185,"column":45}},"119":{"start":{"line":186,"column":28},"end":{"line":186,"column":51}},"120":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"121":{"start":{"line":188,"column":12},"end":{"line":188,"column":102}},"122":{"start":{"line":190,"column":26},"end":{"line":190,"column":50}},"123":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"124":{"start":{"line":192,"column":12},"end":{"line":192,"column":95}},"125":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"126":{"start":{"line":195,"column":12},"end":{"line":195,"column":84}},"127":{"start":{"line":197,"column":27},"end":{"line":197,"column":52}},"128":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"129":{"start":{"line":199,"column":12},"end":{"line":199,"column":123}},"130":{"start":{"line":203,"column":28},"end":{"line":203,"column":34}},"131":{"start":{"line":204,"column":32},"end":{"line":204,"column":56}},"132":{"start":{"line":205,"column":27},"end":{"line":205,"column":45}},"133":{"start":{"line":206,"column":28},"end":{"line":206,"column":51}},"134":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"135":{"start":{"line":208,"column":12},"end":{"line":208,"column":102}},"136":{"start":{"line":210,"column":26},"end":{"line":210,"column":50}},"137":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"138":{"start":{"line":212,"column":12},"end":{"line":212,"column":95}},"139":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"140":{"start":{"line":215,"column":12},"end":{"line":215,"column":84}},"141":{"start":{"line":217,"column":27},"end":{"line":217,"column":52}},"142":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"143":{"start":{"line":219,"column":12},"end":{"line":219,"column":123}},"144":{"start":{"line":221,"column":8},"end":{"line":221,"column":47}},"145":{"start":{"line":224,"column":35},"end":{"line":224,"column":56}},"146":{"start":{"line":225,"column":33},"end":{"line":225,"column":52}},"147":{"start":{"line":226,"column":30},"end":{"line":226,"column":63}},"148":{"start":{"line":227,"column":8},"end":{"line":231,"column":9}},"149":{"start":{"line":229,"column":12},"end":{"line":230,"column":74}},"150":{"start":{"line":234,"column":0},"end":{"line":234,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":21,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":32},"end":{"line":39,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":25},"end":{"line":62,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":29},"end":{"line":90,"column":5}},"line":63},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":35},"end":{"line":79,"column":36}},"loc":{"start":{"line":79,"column":44},"end":{"line":79,"column":67}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":83,"column":32},"end":{"line":83,"column":33}},"loc":{"start":{"line":83,"column":47},"end":{"line":86,"column":9}},"line":83},"7":{"name":"(anonymous_7)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":37},"end":{"line":112,"column":5}},"line":91},"8":{"name":"(anonymous_8)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":45},"end":{"line":137,"column":5}},"line":113},"9":{"name":"(anonymous_9)","decl":{"start":{"line":126,"column":41},"end":{"line":126,"column":42}},"loc":{"start":{"line":126,"column":50},"end":{"line":126,"column":73}},"line":126},"10":{"name":"(anonymous_10)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":28},"end":{"line":162,"column":5}},"line":138},"11":{"name":"(anonymous_11)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":36},"end":{"line":174,"column":5}},"line":163},"12":{"name":"(anonymous_12)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":24},"end":{"line":181,"column":5}},"line":175},"13":{"name":"(anonymous_13)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":32},"end":{"line":201,"column":5}},"line":182},"14":{"name":"(anonymous_14)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":32},"end":{"line":222,"column":5}},"line":202},"15":{"name":"(anonymous_15)","decl":{"start":{"line":223,"column":4},"end":{"line":223,"column":5}},"loc":{"start":{"line":223,"column":33},"end":{"line":232,"column":5}},"line":223}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"4":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"5":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"6":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":60}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":27}},{"start":{"line":24,"column":31},"end":{"line":24,"column":60}}],"line":24},"7":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"8":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{"line":30,"column":8},"end":{"line":32,"column":9}}],"line":30},"9":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"10":{"loc":{"start":{"line":33,"column":12},"end":{"line":33,"column":73}},"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":43}},{"start":{"line":33,"column":47},"end":{"line":33,"column":73}}],"line":33},"11":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{"line":36,"column":8},"end":{"line":38,"column":9}}],"line":36},"12":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":77}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":45}},{"start":{"line":36,"column":49},"end":{"line":36,"column":77}}],"line":36},"13":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"14":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"15":{"loc":{"start":{"line":50,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":61,"column":9}},{"start":{"line":50,"column":8},"end":{"line":61,"column":9}}],"line":50},"16":{"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":41}},"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":25}},{"start":{"line":50,"column":29},"end":{"line":50,"column":41}}],"line":50},"17":{"loc":{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},{"start":{"line":53,"column":13},"end":{"line":61,"column":9}}],"line":53},"18":{"loc":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},{"start":{"line":56,"column":13},"end":{"line":61,"column":9}}],"line":56},"19":{"loc":{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},{"start":{"line":59,"column":13},"end":{"line":61,"column":9}}],"line":59},"20":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"21":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"22":{"loc":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},{"start":{"line":72,"column":12},"end":{"line":74,"column":13}}],"line":72},"23":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":52}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":33}},{"start":{"line":72,"column":37},"end":{"line":72,"column":52}}],"line":72},"24":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{"line":76,"column":8},"end":{"line":78,"column":9}}],"line":76},"25":{"loc":{"start":{"line":76,"column":12},"end":{"line":76,"column":75}},"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":43}},{"start":{"line":76,"column":47},"end":{"line":76,"column":75}}],"line":76},"26":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"27":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"28":{"loc":{"start":{"line":92,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":111,"column":9}},{"start":{"line":92,"column":8},"end":{"line":111,"column":9}}],"line":92},"29":{"loc":{"start":{"line":95,"column":13},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":13},"end":{"line":111,"column":9}},{"start":{"line":95,"column":13},"end":{"line":111,"column":9}}],"line":95},"30":{"loc":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":12},"end":{"line":98,"column":13}}],"line":96},"31":{"loc":{"start":{"line":96,"column":16},"end":{"line":96,"column":65}},"type":"binary-expr","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":22}},{"start":{"line":96,"column":26},"end":{"line":96,"column":43}},{"start":{"line":96,"column":47},"end":{"line":96,"column":65}}],"line":96},"32":{"loc":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":12},"end":{"line":101,"column":13}}],"line":99},"33":{"loc":{"start":{"line":99,"column":16},"end":{"line":99,"column":84}},"type":"binary-expr","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":45}},{"start":{"line":99,"column":49},"end":{"line":99,"column":84}}],"line":99},"34":{"loc":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},{"start":{"line":102,"column":12},"end":{"line":104,"column":13}}],"line":102},"35":{"loc":{"start":{"line":102,"column":16},"end":{"line":102,"column":69}},"type":"binary-expr","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":42}},{"start":{"line":102,"column":46},"end":{"line":102,"column":69}}],"line":102},"36":{"loc":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},{"start":{"line":114,"column":8},"end":{"line":116,"column":9}}],"line":114},"37":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"38":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"39":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"40":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"41":{"loc":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},{"start":{"line":130,"column":12},"end":{"line":132,"column":13}}],"line":130},"42":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{"line":139,"column":8},"end":{"line":141,"column":9}}],"line":139},"43":{"loc":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},{"start":{"line":145,"column":8},"end":{"line":147,"column":9}}],"line":145},"44":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148},"45":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153},"46":{"loc":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},{"start":{"line":156,"column":8},"end":{"line":158,"column":9}}],"line":156},"47":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"48":{"loc":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},{"start":{"line":168,"column":8},"end":{"line":170,"column":9}}],"line":168},"49":{"loc":{"start":{"line":168,"column":12},"end":{"line":168,"column":67}},"type":"binary-expr","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":39}},{"start":{"line":168,"column":43},"end":{"line":168,"column":67}}],"line":168},"50":{"loc":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},{"start":{"line":177,"column":8},"end":{"line":179,"column":9}}],"line":177},"51":{"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":77}},"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":45}},{"start":{"line":177,"column":49},"end":{"line":177,"column":77}}],"line":177},"52":{"loc":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},{"start":{"line":187,"column":8},"end":{"line":189,"column":9}}],"line":187},"53":{"loc":{"start":{"line":187,"column":12},"end":{"line":187,"column":73}},"type":"binary-expr","locations":[{"start":{"line":187,"column":12},"end":{"line":187,"column":43}},{"start":{"line":187,"column":47},"end":{"line":187,"column":73}}],"line":187},"54":{"loc":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},{"start":{"line":191,"column":8},"end":{"line":193,"column":9}}],"line":191},"55":{"loc":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},{"start":{"line":194,"column":8},"end":{"line":196,"column":9}}],"line":194},"56":{"loc":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},{"start":{"line":198,"column":8},"end":{"line":200,"column":9}}],"line":198},"57":{"loc":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},{"start":{"line":207,"column":8},"end":{"line":209,"column":9}}],"line":207},"58":{"loc":{"start":{"line":207,"column":12},"end":{"line":207,"column":73}},"type":"binary-expr","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":43}},{"start":{"line":207,"column":47},"end":{"line":207,"column":73}}],"line":207},"59":{"loc":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},{"start":{"line":211,"column":8},"end":{"line":213,"column":9}}],"line":211},"60":{"loc":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},{"start":{"line":214,"column":8},"end":{"line":216,"column":9}}],"line":214},"61":{"loc":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},{"start":{"line":218,"column":8},"end":{"line":220,"column":9}}],"line":218},"62":{"loc":{"start":{"line":226,"column":31},"end":{"line":226,"column":55}},"type":"binary-expr","locations":[{"start":{"line":226,"column":31},"end":{"line":226,"column":49}},{"start":{"line":226,"column":53},"end":{"line":226,"column":55}}],"line":226},"63":{"loc":{"start":{"line":227,"column":8},"end":{"line":231,"column":9}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":231,"column":9}},{"start":{"line":227,"column":8},"end":{"line":231,"column":9}}],"line":227},"64":{"loc":{"start":{"line":227,"column":12},"end":{"line":228,"column":79}},"type":"binary-expr","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":29}},{"start":{"line":227,"column":34},"end":{"line":227,"column":53}},{"start":{"line":227,"column":57},"end":{"line":227,"column":76}},{"start":{"line":227,"column":80},"end":{"line":227,"column":97}},{"start":{"line":228,"column":13},"end":{"line":228,"column":32}},{"start":{"line":228,"column":37},"end":{"line":228,"column":56}},{"start":{"line":228,"column":60},"end":{"line":228,"column":77}}],"line":227}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":355,"6":276,"7":264,"8":264,"9":53,"10":258,"11":223,"12":213,"13":190,"14":285,"15":285,"16":3,"17":282,"18":7,"19":275,"20":3,"21":272,"22":4,"23":268,"24":2,"25":453,"26":453,"27":6,"28":447,"29":447,"30":447,"31":5,"32":442,"33":92,"34":350,"35":102,"36":248,"37":233,"38":15,"39":15,"40":222,"41":222,"42":2,"43":220,"44":3,"45":217,"46":372,"47":2,"48":215,"49":4,"50":211,"51":589,"52":1,"53":210,"54":210,"55":584,"56":575,"57":201,"58":140,"59":149,"60":109,"61":40,"62":37,"63":4,"64":33,"65":2,"66":31,"67":1,"68":30,"69":38,"70":3,"71":61,"72":1,"73":60,"74":1,"75":59,"76":1,"77":58,"78":1,"79":57,"80":72,"81":1,"82":56,"83":70,"84":4,"85":52,"86":65,"87":73,"88":2,"89":71,"90":71,"91":69,"92":69,"93":1,"94":68,"95":1,"96":67,"97":67,"98":67,"99":2,"100":65,"101":1,"102":64,"103":2,"104":98,"105":98,"106":98,"107":98,"108":98,"109":4,"110":94,"111":205,"112":20,"113":20,"114":1,"115":19,"116":242,"117":242,"118":242,"119":242,"120":242,"121":1,"122":241,"123":241,"124":2,"125":239,"126":9,"127":229,"128":229,"129":12,"130":110,"131":110,"132":110,"133":110,"134":110,"135":1,"136":109,"137":109,"138":2,"139":107,"140":10,"141":96,"142":96,"143":9,"144":87,"145":87,"146":87,"147":87,"148":87,"149":6,"150":1},"f":{"0":1,"1":276,"2":285,"3":453,"4":222,"5":589,"6":584,"7":149,"8":61,"9":72,"10":73,"11":98,"12":20,"13":242,"14":110,"15":87},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[53,211],"4":[223,35],"5":[3,282],"6":[285,56],"7":[7,275],"8":[3,272],"9":[4,268],"10":[272,270],"11":[2,266],"12":[268,267],"13":[6,447],"14":[5,442],"15":[92,350],"16":[442,372],"17":[102,248],"18":[233,15],"19":[15,0],"20":[2,220],"21":[3,217],"22":[2,370],"23":[372,155],"24":[4,211],"25":[215,214],"26":[1,210],"27":[140,61],"28":[109,40],"29":[37,3],"30":[4,33],"31":[37,37,34],"32":[2,31],"33":[33,33],"34":[1,30],"35":[31,30],"36":[1,60],"37":[1,59],"38":[1,58],"39":[1,57],"40":[1,56],"41":[4,66],"42":[2,71],"43":[1,68],"44":[1,67],"45":[2,65],"46":[1,64],"47":[2,62],"48":[4,94],"49":[98,97],"50":[1,19],"51":[20,19],"52":[1,241],"53":[242,241],"54":[2,239],"55":[9,229],"56":[12,217],"57":[1,109],"58":[110,109],"59":[2,107],"60":[10,96],"61":[9,87],"62":[87,53],"63":[6,81],"64":[87,86,19,13,84,14,12]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/QueryValidator.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\r\nimport KeyValidator from \"../utils/KeyValidator\";\r\nimport {\r\n\tLogic,\r\n\tLogicComparison,\r\n\tSComparison,\r\n\tMComparison,\r\n\tMComparator,\r\n\tSComparator,\r\n\tNegation,\r\n\tJSONQuery,\r\n} from \"./IQuery\";\r\ninterface RuleType { [key: string]: any }\r\n\r\nexport default class QueryValidator {\r\n\tprivate KV = new KeyValidator();\r\n\r\n\tpublic validateQuery(query: object): string {\r\n\r\n\t\tthis.validateQueryOutside(query);\r\n\t\tconst vQuery = query as JSONQuery;\r\n\t\tif (\"TRANSFORMATIONS\" in vQuery) {\r\n\t\t\tthis.validateTransformations(vQuery.TRANSFORMATIONS as object);\r\n\t\t}\r\n\r\n\t\tif (Object.keys(vQuery.WHERE as object).length !== 0) {\r\n\t\t\tthis.validateWhere(vQuery.WHERE as object);\r\n\t\t}\r\n\r\n\t\tthis.validateOptions(vQuery.OPTIONS);\r\n\t\treturn this.KV.getDatasetName();\r\n\t}\r\n\r\n\tpublic validateQueryOutside(query: object) {\r\n\t\tconst keys = Object.keys(query);\r\n\t\tif (keys.length > 2 && !(\"TRANSFORMATIONS\" in query)) {\r\n\t\t\tthrow new InsightError(\"Excess Keys in Query\");\r\n\t\t}\r\n\r\n\t\tif (!(\"WHERE\" in query)) {\r\n\t\t\tthrow new InsightError(\"Missing WHERE\");\r\n\t\t}\r\n\r\n\t\tif (!(\"OPTIONS\" in query)) {\r\n\t\t\tthrow new InsightError(\"Missing OPTIONS\");\r\n\t\t}\r\n\r\n\t\tif (typeof query.WHERE !== \"object\" || Array.isArray(query.WHERE)) {\r\n\t\t\tthrow new InsightError(\"Invalid WHERE type\");\r\n\t\t}\r\n\r\n\t\tif (typeof query.OPTIONS !== \"object\" || Array.isArray(query.OPTIONS)) {\r\n\t\t\tthrow new InsightError(\"Invalid OPTIONS type\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateWhere(where: object): void {\r\n\t\tconst keys = Object.keys(where);\r\n\t\tif (keys.length !== 1) {\r\n\t\t\tthrow new InsightError(\"Nested Filter must contain 1 key\");\r\n\t\t}\r\n\r\n\t\t// Check that key is one of the valid keys\r\n\t\tconst key = keys[0];\r\n\t\tconst validKeys = [\"AND\", \"OR\", \"LT\", \"GT\", \"EQ\", \"IS\", \"NOT\"];\r\n\t\tif (!validKeys.includes(key)) {\r\n\t\t\tthrow new InsightError(\"Invalid key in WHERE\");\r\n\t\t}\r\n\t\tif (key === \"AND\" || key === \"OR\") {\r\n\t\t\tthis.validateLogicComparison(where);\r\n\t\t} else if (key === \"IS\") {\r\n\t\t\tthis.validateSComparison(where);\r\n\t\t} else if ([\"LT\", \"GT\", \"EQ\"].includes(key)) {\r\n\t\t\tthis.validateMComparison(where);\r\n\t\t} else if (key === \"NOT\") {\r\n\t\t\tthis.validateNot(where);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateOptions(options: object): void {\r\n\t\tconst keys = Object.keys(options);\r\n\t\tif (keys.length > 2) {\r\n\t\t\tthrow new InsightError(\"Excess Keys in Options\");\r\n\t\t}\r\n\r\n\t\t// Check that options has COLUMNS\r\n\t\tif (!(\"COLUMNS\" in options)) {\r\n\t\t\tthrow new InsightError(\"Options missing COLUMNS\");\r\n\t\t}\r\n\r\n        // Check for invalid keys\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (key !== \"COLUMNS\" && key !== \"ORDER\") {\r\n\t\t\t\tthrow new InsightError(\"Options contains invalid keys\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check columns is nonempty array\r\n\t\tif (!Array.isArray(options.COLUMNS) || options.COLUMNS.length === 0) {\r\n\t\t\tthrow new InsightError(\"COLUMNS must be non-empty array\");\r\n\t\t}\r\n\t\tif (!options.COLUMNS.every((key) => typeof key === \"string\")) {\r\n\t\t\tthrow new InsightError(\"All elements in COLUMNS must be strings\");\r\n\t\t}\r\n\r\n\t\t// Validate keys in columns\r\n\t\tconst allColumnKeys: string[] = [];\r\n\t\toptions.COLUMNS.forEach((columnKey: string) => {\r\n\t\t\tthis.KV.validateColumnKey(columnKey);\r\n\t\t\tallColumnKeys.push(columnKey);\r\n\t\t});\r\n\r\n\t\tif (\"ORDER\" in options) {\r\n\t\t\tthis.validateOrder(options.ORDER, allColumnKeys);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateOrder(order: unknown, columnKeys: string[]) {\r\n\t\tif (typeof order === \"string\") {\r\n\t\t\tthis.KV.validateOrderKey(order, columnKeys);\r\n\t\t} else if (typeof order === \"object\") {\r\n\t\t\tif (!order || !(\"dir\" in order) || !(\"keys\" in order)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid Order structure\");\r\n\t\t\t}\r\n\t\t\tif (typeof order.dir !== \"string\" || ![\"DOWN\", \"UP\"].includes(order.dir)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid ORDER direction.\");\r\n\t\t\t}\r\n            // Check if order.keys is an array\r\n\t\t\tif (!Array.isArray(order.keys) || order.keys.length === 0) {\r\n\t\t\t\tthrow new InsightError(\"ORDER keys must be a non-empty array\");\r\n\t\t\t}\r\n            // Check if each element of order.keys is a string and is present in columnKeys\r\n\t\t\tfor (const key of order.keys) {\r\n\t\t\t\tthis.KV.validateOrderKey(key, columnKeys);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"Invalid Order type. Must be string or object.\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateTransformations(transformations: object): void {\r\n\t\tif (!(\"GROUP\" in transformations)) {\r\n\t\t\tthrow new InsightError(\"TRANSFORMATIONS missing GROUP\");\r\n\t\t}\r\n\t\tif (!(\"APPLY\" in transformations)) {\r\n\t\t\tthrow new InsightError(\"TRANSFORMATIONS missing APPLY\");\r\n\t\t}\r\n\t\tif (!Array.isArray(transformations.GROUP)) {\r\n\t\t\tthrow new InsightError(\"GROUP must be a non-empty array\");\r\n\t\t}\r\n\t\tif (!Array.isArray(transformations.APPLY)) {\r\n\t\t\tthrow new InsightError(\"APPLY must be a non-empty array\");\r\n\t\t}\r\n\t\tif (!transformations.GROUP.every((key: any) => typeof key === \"string\")) {\r\n\t\t\tthrow new InsightError(\"All elements in GROUP must be strings\");\r\n\t\t}\r\n\t\tfor (let key of transformations.GROUP) {\r\n\t\t\tif (!this.KV.validateGroupKey(key)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid key in GROUP: \" + key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let rule of transformations.APPLY) {\r\n\t\t\tthis.validateApplyRule(rule);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateApplyRule(rule: RuleType): void {\r\n\t\tif (Object.keys(rule).length > 1) {\r\n\t\t\tthrow new InsightError(`Apply rule should only have 1 key, has ${Object.keys(rule).length}`);\r\n\t\t}\r\n\r\n\t\tconst applyKey = Object.keys(rule)[0];\r\n\t\tthis.KV.validateApplyKey(applyKey);\r\n\t\tconst applyValue = rule[applyKey];\r\n\r\n\t\tif (typeof applyValue !== \"object\") {\r\n\t\t\tthrow new InsightError(\"Apply body must be object\");\r\n\t\t}\r\n\t\tif (Object.keys(applyValue).length !== 1) {\r\n\t\t\tthrow new InsightError(`Apply body should only have 1 key, has ${Object.keys(applyValue).length}`);\r\n\t\t}\r\n\r\n\t\t// Check for valid transformation operators\r\n\t\tconst token = Object.keys(applyValue)[0];\r\n\t\tconst validTokens = [\"MAX\", \"MIN\", \"AVG\", \"COUNT\", \"SUM\"];\r\n\t\tif (!validTokens.includes(token)) {\r\n\t\t\tthrow new InsightError(\"Invalid transformation operator\");\r\n\t\t}\r\n\t\tif (typeof applyValue[token] !== \"string\") {\r\n\t\t\tthrow new InsightError(\"Invalid apply rule target key\");\r\n\t\t}\r\n\t\tif (!this.KV.validateApplyRuleTargetKey(applyValue[token])) {\r\n\t\t\tthrow new InsightError(`Invalid key: ${applyValue[token]}`);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateLogicComparison(object: object): void {\r\n\t\tconst logicComparison = object as LogicComparison;\r\n\t\tconst logicComparatorKeys = Object.keys(logicComparison);\r\n\t\tconst comparator = logicComparatorKeys[0] as Logic;\r\n\r\n\t\tconst fieldObject = logicComparison[comparator];\r\n\t\tif (!Array.isArray(fieldObject) || fieldObject.length === 0) {\r\n\t\t\tthrow new InsightError(`${comparator} should be non-empty array`);\r\n\t\t}\r\n\r\n\t\tfor (const filter of fieldObject) {\r\n\t\t\tthis.validateWhere(filter as object); // recursively validate each filter in the array\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateNot(object: object): void {\r\n\t\tconst notObject = object as Negation;\r\n\t\tif (typeof notObject.NOT !== \"object\" || Array.isArray(notObject.NOT)) {\r\n\t\t\tthrow new InsightError(\"NOT value must be object\");\r\n\t\t}\r\n\t\tthis.validateWhere(notObject.NOT as object);\r\n\t}\r\n\r\n\tpublic validateMComparison(object: object): void {\r\n\t\tconst mComparison = object as MComparison;\r\n\t\tconst mComparatorKeys = Object.keys(mComparison);\r\n\t\tconst comparator = mComparatorKeys[0] as MComparator;\r\n\r\n\t\tconst fieldObject = mComparison[comparator];\r\n\t\tif (typeof fieldObject !== \"object\" || Array.isArray(fieldObject)) {\r\n\t\t\tthrow new InsightError(`MComparison for ${comparator} has invalid type`);\r\n\t\t}\r\n\r\n\t\tconst fieldKeys = Object.keys(fieldObject);\r\n\t\tif (fieldKeys.length !== 1) {\r\n\t\t\tthrow new InsightError(`${comparator} must have exactly one key`);\r\n\t\t}\r\n\r\n\t\tif (!this.KV.validateMKey(fieldKeys[0])) {\r\n\t\t\tthrow new InsightError(`Invalid key: ${fieldKeys[0]}`);\r\n\t\t}\r\n\r\n\t\tconst fieldValue = fieldObject[fieldKeys[0]];\r\n\t\tif (typeof fieldValue !== \"number\") {\r\n\t\t\tthrow new InsightError(`Invalid value for ${fieldKeys[0]} in MComparison. Expected a number`);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateSComparison(object: object): void {\r\n\t\tconst sComparison = object as SComparison;\r\n\t\tconst mComparatorKeys = Object.keys(sComparison);\r\n\t\tconst comparator = mComparatorKeys[0] as SComparator;\r\n\r\n\t\tconst fieldObject = sComparison[comparator];\r\n\t\tif (typeof fieldObject !== \"object\" || Array.isArray(fieldObject)) {\r\n\t\t\tthrow new InsightError(`SComparison for ${comparator} has invalid type`);\r\n\t\t}\r\n\r\n\t\tconst fieldKeys = Object.keys(fieldObject);\r\n\t\tif (fieldKeys.length !== 1) {\r\n\t\t\tthrow new InsightError(`${comparator} must have exactly one key`);\r\n\t\t}\r\n\r\n\t\tif (!this.KV.validateSKey(fieldKeys[0])) {\r\n\t\t\tthrow new InsightError(`Invalid key: ${fieldKeys[0]}`);\r\n\t\t}\r\n\r\n\t\tconst fieldValue = fieldObject[fieldKeys[0]];\r\n\t\tif (typeof fieldValue !== \"string\") {\r\n\t\t\tthrow new InsightError(`Invalid value for ${fieldKeys[0]} in SComparison. Expected a string`);\r\n\t\t}\r\n\r\n\t\tthis.validateWildcardUsage(fieldValue);\r\n\t}\r\n\r\n\tprivate validateWildcardUsage(value: string): void {\r\n\t\tconst startsWithAsterisk = value.startsWith(\"*\");\r\n\t\tconst endsWithAsterisk = value.endsWith(\"*\");\r\n\t\tconst asteriskCount = (value.match(/\\*/g) || []).length;\r\n\r\n\t\tif (\r\n\t\t\tasteriskCount > 2 || (asteriskCount === 1 && !startsWithAsterisk && !endsWithAsterisk) ||\r\n\t\t\t(asteriskCount === 2 && (!startsWithAsterisk || !endsWithAsterisk))\r\n\t\t) {\r\n\t\t\tthrow new InsightError(\r\n\t\t\t\t\"Invalid usage of wildcards in string. A valid string\" +\r\n\t\t\t\t\t\" can only start with or end with an asterisk, or both.\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4390079e1c8c1c7eb7aec8e5b5ac81be7fabb77a","contentHash":"1d3d6fdd790403c28ba7ea04e34357fef68974c13a16b89674fd63e32927c39d"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\KeyValidator.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\KeyValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":26}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":44}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"6":{"start":{"line":18,"column":28},"end":{"line":18,"column":78}},"7":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":44}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":26,"column":28},"end":{"line":26,"column":128}},"12":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"13":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":44}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":20}},"16":{"start":{"line":34,"column":31},"end":{"line":34,"column":47}},"17":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"18":{"start":{"line":36,"column":12},"end":{"line":36,"column":39}},"19":{"start":{"line":38,"column":13},"end":{"line":40,"column":9}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":91}},"21":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"23":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"24":{"start":{"line":47,"column":12},"end":{"line":47,"column":25}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":43}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":20}},"27":{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},"28":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"29":{"start":{"line":55,"column":16},"end":{"line":55,"column":133}},"30":{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},"31":{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":81}},"33":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"34":{"start":{"line":65,"column":12},"end":{"line":65,"column":25}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":42}},"36":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"37":{"start":{"line":71,"column":12},"end":{"line":71,"column":89}},"38":{"start":{"line":75,"column":24},"end":{"line":75,"column":33}},"39":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"40":{"start":{"line":77,"column":12},"end":{"line":77,"column":90}},"41":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"42":{"start":{"line":80,"column":12},"end":{"line":80,"column":87}},"43":{"start":{"line":82,"column":8},"end":{"line":82,"column":46}},"44":{"start":{"line":85,"column":0},"end":{"line":85,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":18},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":26},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":21},"end":{"line":16,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":24},"end":{"line":24,"column":5}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":24},"end":{"line":32,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":35},"end":{"line":41,"column":5}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":28},"end":{"line":51,"column":5}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":33},"end":{"line":62,"column":5}},"line":52},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":38},"end":{"line":68,"column":5}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":38},"end":{"line":73,"column":5}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":31},"end":{"line":83,"column":5}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"1":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"2":{"loc":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},{"start":{"line":35,"column":8},"end":{"line":40,"column":9}}],"line":35},"3":{"loc":{"start":{"line":38,"column":13},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":40,"column":9}},{"start":{"line":38,"column":13},"end":{"line":40,"column":9}}],"line":38},"4":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"5":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"6":{"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":66}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":37}},{"start":{"line":46,"column":41},"end":{"line":46,"column":66}}],"line":46},"7":{"loc":{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},{"start":{"line":53,"column":8},"end":{"line":61,"column":9}}],"line":53},"8":{"loc":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},{"start":{"line":54,"column":12},"end":{"line":56,"column":13}}],"line":54},"9":{"loc":{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":13},"end":{"line":61,"column":9}},{"start":{"line":59,"column":13},"end":{"line":61,"column":9}}],"line":59},"10":{"loc":{"start":{"line":59,"column":17},"end":{"line":59,"column":79}},"type":"binary-expr","locations":[{"start":{"line":59,"column":17},"end":{"line":59,"column":46}},{"start":{"line":59,"column":50},"end":{"line":59,"column":79}}],"line":59},"11":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"12":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"13":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{"line":76,"column":8},"end":{"line":78,"column":9}}],"line":76},"14":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79}},"s":{"0":1,"1":1,"2":369,"3":369,"4":0,"5":190,"6":860,"7":860,"8":326,"9":534,"10":533,"11":423,"12":423,"13":22,"14":401,"15":396,"16":935,"17":935,"18":267,"19":668,"20":6,"21":75,"22":0,"23":75,"24":7,"25":68,"26":68,"27":584,"28":106,"29":3,"30":103,"31":478,"32":2,"33":64,"34":0,"35":64,"36":147,"37":7,"38":72,"39":72,"40":1,"41":71,"42":2,"43":69,"44":1},"f":{"0":369,"1":0,"2":190,"3":860,"4":423,"5":935,"6":75,"7":584,"8":64,"9":147,"10":72},"b":{"0":[326,534],"1":[22,401],"2":[267,668],"3":[6,662],"4":[0,75],"5":[7,68],"6":[75,24],"7":[106,478],"8":[3,103],"9":[2,472],"10":[478,288],"11":[0,64],"12":[7,140],"13":[1,71],"14":[2,69]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/KeyValidator.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/KeyValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\r\nimport * as fs from \"fs-extra\";\r\n\r\nexport default class KeyValidator {\r\n\tpublic dataset: string;\r\n\tpublic transformationKeys: Set<string>;\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis.dataset = \"\";\r\n\t\tthis.transformationKeys = new Set();\r\n\t}\r\n\r\n\tpublic setDatasetName(input: string) {\r\n\t\tthis.dataset = input;\r\n\t}\r\n\r\n\tpublic getDatasetName(): string {\r\n\t\treturn this.dataset;\r\n\t}\r\n\r\n\tpublic validateMKey(input: string): boolean {\r\n\t\tconst mKeyPattern = /^[^_]+_(avg|pass|fail|audit|year|lat|lon|seats)$/;\r\n\t\tif (!mKeyPattern.test(input)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.checkForMultipleDataset(input);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic validateSKey(input: string): boolean {\r\n\t\tconst sKeyPattern =\r\n\t\t\t/^[^_]+_(dept|id|instructor|title|uuid|fullname|shortname|number|name|address|type|furniture|href)$/;\r\n\t\tif (!sKeyPattern.test(input)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.checkForMultipleDataset(input);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic checkForMultipleDataset(input: string): void {\r\n\t\tconst [contentName,] = input.split(\"_\");\r\n\t\tif (this.dataset === \"\") {\r\n\t\t\tthis.dataset = contentName;\r\n\t\t} else if (this.dataset !== contentName) {\r\n\t\t\tthrow new InsightError(\"Cannot query from multiple datasets\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateGroupKey(input: string | undefined): boolean {\r\n\t\tif (typeof input === \"undefined\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.validateMKey(input) && !this.validateSKey(input)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.transformationKeys.add(input);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic validateColumnKey(columnKey: string) {\r\n        // Transformation present. Just check if columnKey is one of the transformation keys and return\r\n\t\tif (this.transformationKeys.size !== 0) {\r\n\t\t\tif (!this.transformationKeys.has(columnKey)) {\r\n\t\t\t\tthrow new InsightError(\"Keys in COLUMNS must be in GROUP or APPLY when TRANSFORMATIONS is present\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t} else if (!this.validateMKey(columnKey) && !this.validateSKey(columnKey)){ // No transformation, validate key\r\n\t\t\tthrow new InsightError(`Invalid key: ${columnKey}`);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateApplyRuleTargetKey(input: string) {\r\n\t\tif (typeof input === \"undefined\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn (this.validateMKey(input));\r\n\t}\r\n\r\n\tpublic validateOrderKey(key: any, columnKeys: string[]) {\r\n\t\tif (!columnKeys.includes(key)) {\r\n\t\t\tthrow new InsightError(\"All ORDER keys must be in COLUMNS\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateApplyKey(applyKey: string): void {\r\n\t\tconst pattern = /^[^_]+$/;\r\n\t\tif (!pattern.test(applyKey)) {\r\n\t\t\tthrow new InsightError(\"Cannot have underscore in applyKey\");\r\n\t\t}\r\n\r\n\t\tif (this.transformationKeys.has(applyKey)) {\r\n\t\t\tthrow new InsightError(`Duplicate APPLY key ${applyKey}`);\r\n\t\t}\r\n\t\tthis.transformationKeys.add(applyKey);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cbd38efb2b6223bcb6f8fcefeb91bf6eefdd7dc","contentHash":"bc9da9ed70ed0607b5d415423c33686ac8859323aa13b5550ab23647e65c1cc1"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Query.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\models\\Query.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":64}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":44}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":69}},"31":{"start":{"line":33,"column":19},"end":{"line":33,"column":57}},"32":{"start":{"line":34,"column":21},"end":{"line":34,"column":51}},"33":{"start":{"line":35,"column":16},"end":{"line":35,"column":51}},"34":{"start":{"line":41,"column":16},"end":{"line":41,"column":24}},"35":{"start":{"line":44,"column":17},"end":{"line":44,"column":47}},"36":{"start":{"line":45,"column":8},"end":{"line":45,"column":55}},"37":{"start":{"line":46,"column":8},"end":{"line":46,"column":37}},"38":{"start":{"line":47,"column":8},"end":{"line":47,"column":41}},"39":{"start":{"line":48,"column":8},"end":{"line":48,"column":57}},"40":{"start":{"line":49,"column":8},"end":{"line":49,"column":30}},"41":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"42":{"start":{"line":53,"column":12},"end":{"line":53,"column":121}},"43":{"start":{"line":55,"column":8},"end":{"line":55,"column":24}},"44":{"start":{"line":56,"column":27},"end":{"line":56,"column":55}},"45":{"start":{"line":57,"column":32},"end":{"line":57,"column":34}},"46":{"start":{"line":58,"column":27},"end":{"line":58,"column":52}},"47":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"48":{"start":{"line":60,"column":26},"end":{"line":60,"column":51}},"49":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"50":{"start":{"line":62,"column":16},"end":{"line":62,"column":44}},"51":{"start":{"line":65,"column":31},"end":{"line":65,"column":74}},"52":{"start":{"line":66,"column":8},"end":{"line":66,"column":50}},"53":{"start":{"line":69,"column":23},"end":{"line":69,"column":89}},"54":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"55":{"start":{"line":71,"column":12},"end":{"line":71,"column":58}},"56":{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},"57":{"start":{"line":74,"column":12},"end":{"line":74,"column":55}},"58":{"start":{"line":76,"column":8},"end":{"line":76,"column":52}},"59":{"start":{"line":79,"column":8},"end":{"line":100,"column":9}},"60":{"start":{"line":80,"column":12},"end":{"line":80,"column":107}},"61":{"start":{"line":82,"column":13},"end":{"line":100,"column":9}},"62":{"start":{"line":83,"column":12},"end":{"line":83,"column":53}},"63":{"start":{"line":85,"column":13},"end":{"line":100,"column":9}},"64":{"start":{"line":86,"column":12},"end":{"line":86,"column":49}},"65":{"start":{"line":88,"column":13},"end":{"line":100,"column":9}},"66":{"start":{"line":89,"column":12},"end":{"line":89,"column":49}},"67":{"start":{"line":91,"column":13},"end":{"line":100,"column":9}},"68":{"start":{"line":92,"column":12},"end":{"line":92,"column":46}},"69":{"start":{"line":95,"column":24},"end":{"line":95,"column":33}},"70":{"start":{"line":96,"column":12},"end":{"line":98,"column":15}},"71":{"start":{"line":97,"column":16},"end":{"line":97,"column":121}},"72":{"start":{"line":99,"column":12},"end":{"line":99,"column":23}},"73":{"start":{"line":103,"column":8},"end":{"line":106,"column":9}},"74":{"start":{"line":104,"column":30},"end":{"line":104,"column":56}},"75":{"start":{"line":105,"column":12},"end":{"line":105,"column":47}},"76":{"start":{"line":107,"column":8},"end":{"line":107,"column":21}},"77":{"start":{"line":110,"column":26},"end":{"line":110,"column":35}},"78":{"start":{"line":111,"column":8},"end":{"line":120,"column":11}},"79":{"start":{"line":112,"column":26},"end":{"line":115,"column":25}},"80":{"start":{"line":113,"column":16},"end":{"line":113,"column":84}},"81":{"start":{"line":114,"column":16},"end":{"line":114,"column":61}},"82":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"83":{"start":{"line":117,"column":16},"end":{"line":117,"column":41}},"84":{"start":{"line":119,"column":12},"end":{"line":119,"column":46}},"85":{"start":{"line":121,"column":8},"end":{"line":121,"column":25}},"86":{"start":{"line":124,"column":24},"end":{"line":124,"column":26}},"87":{"start":{"line":125,"column":8},"end":{"line":135,"column":9}},"88":{"start":{"line":126,"column":27},"end":{"line":126,"column":29}},"89":{"start":{"line":127,"column":12},"end":{"line":127,"column":110}},"90":{"start":{"line":128,"column":34},"end":{"line":128,"column":58}},"91":{"start":{"line":129,"column":12},"end":{"line":133,"column":15}},"92":{"start":{"line":130,"column":28},"end":{"line":130,"column":45}},"93":{"start":{"line":131,"column":16},"end":{"line":131,"column":40}},"94":{"start":{"line":132,"column":16},"end":{"line":132,"column":47}},"95":{"start":{"line":134,"column":12},"end":{"line":134,"column":33}},"96":{"start":{"line":136,"column":8},"end":{"line":136,"column":23}},"97":{"start":{"line":139,"column":28},"end":{"line":139,"column":55}},"98":{"start":{"line":140,"column":31},"end":{"line":140,"column":40}},"99":{"start":{"line":141,"column":8},"end":{"line":145,"column":11}},"100":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"101":{"start":{"line":143,"column":16},"end":{"line":143,"column":132}},"102":{"start":{"line":146,"column":8},"end":{"line":146,"column":30}},"103":{"start":{"line":149,"column":32},"end":{"line":149,"column":41}},"104":{"start":{"line":150,"column":20},"end":{"line":150,"column":44}},"105":{"start":{"line":151,"column":8},"end":{"line":151,"column":76}},"106":{"start":{"line":152,"column":23},"end":{"line":152,"column":40}},"107":{"start":{"line":153,"column":23},"end":{"line":153,"column":36}},"108":{"start":{"line":154,"column":8},"end":{"line":175,"column":11}},"109":{"start":{"line":155,"column":12},"end":{"line":174,"column":13}},"110":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"111":{"start":{"line":157,"column":20},"end":{"line":157,"column":137}},"112":{"start":{"line":160,"column":17},"end":{"line":174,"column":13}},"113":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"114":{"start":{"line":162,"column":20},"end":{"line":162,"column":137}},"115":{"start":{"line":165,"column":17},"end":{"line":174,"column":13}},"116":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"117":{"start":{"line":167,"column":20},"end":{"line":167,"column":137}},"118":{"start":{"line":171,"column":16},"end":{"line":173,"column":17}},"119":{"start":{"line":172,"column":20},"end":{"line":172,"column":137}},"120":{"start":{"line":176,"column":8},"end":{"line":176,"column":31}},"121":{"start":{"line":179,"column":32},"end":{"line":179,"column":41}},"122":{"start":{"line":180,"column":27},"end":{"line":180,"column":48}},"123":{"start":{"line":181,"column":30},"end":{"line":181,"column":47}},"124":{"start":{"line":182,"column":20},"end":{"line":182,"column":49}},"125":{"start":{"line":183,"column":8},"end":{"line":183,"column":76}},"126":{"start":{"line":184,"column":23},"end":{"line":184,"column":40}},"127":{"start":{"line":185,"column":23},"end":{"line":185,"column":54}},"128":{"start":{"line":186,"column":8},"end":{"line":196,"column":11}},"129":{"start":{"line":187,"column":12},"end":{"line":195,"column":13}},"130":{"start":{"line":188,"column":16},"end":{"line":188,"column":133}},"131":{"start":{"line":190,"column":17},"end":{"line":195,"column":13}},"132":{"start":{"line":191,"column":16},"end":{"line":191,"column":133}},"133":{"start":{"line":193,"column":17},"end":{"line":195,"column":13}},"134":{"start":{"line":194,"column":16},"end":{"line":194,"column":133}},"135":{"start":{"line":197,"column":8},"end":{"line":197,"column":31}},"136":{"start":{"line":200,"column":28},"end":{"line":200,"column":30}},"137":{"start":{"line":201,"column":25},"end":{"line":201,"column":46}},"138":{"start":{"line":202,"column":8},"end":{"line":204,"column":11}},"139":{"start":{"line":203,"column":12},"end":{"line":203,"column":59}},"140":{"start":{"line":205,"column":23},"end":{"line":205,"column":32}},"141":{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},"142":{"start":{"line":207,"column":12},"end":{"line":207,"column":88}},"143":{"start":{"line":207,"column":58},"end":{"line":207,"column":86}},"144":{"start":{"line":208,"column":12},"end":{"line":215,"column":13}},"145":{"start":{"line":208,"column":25},"end":{"line":208,"column":26}},"146":{"start":{"line":209,"column":35},"end":{"line":209,"column":49}},"147":{"start":{"line":210,"column":16},"end":{"line":214,"column":17}},"148":{"start":{"line":211,"column":20},"end":{"line":213,"column":21}},"149":{"start":{"line":212,"column":24},"end":{"line":212,"column":56}},"150":{"start":{"line":218,"column":12},"end":{"line":222,"column":15}},"151":{"start":{"line":219,"column":16},"end":{"line":221,"column":19}},"152":{"start":{"line":220,"column":20},"end":{"line":220,"column":49}},"153":{"start":{"line":224,"column":8},"end":{"line":224,"column":22}},"154":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"155":{"start":{"line":228,"column":12},"end":{"line":228,"column":88}},"156":{"start":{"line":230,"column":8},"end":{"line":237,"column":9}},"157":{"start":{"line":231,"column":12},"end":{"line":236,"column":13}},"158":{"start":{"line":232,"column":16},"end":{"line":232,"column":116}},"159":{"start":{"line":235,"column":16},"end":{"line":235,"column":120}},"160":{"start":{"line":238,"column":23},"end":{"line":249,"column":10}},"161":{"start":{"line":239,"column":28},"end":{"line":239,"column":30}},"162":{"start":{"line":240,"column":12},"end":{"line":247,"column":15}},"163":{"start":{"line":241,"column":26},"end":{"line":241,"column":32}},"164":{"start":{"line":242,"column":16},"end":{"line":245,"column":17}},"165":{"start":{"line":243,"column":20},"end":{"line":243,"column":88}},"166":{"start":{"line":244,"column":20},"end":{"line":244,"column":47}},"167":{"start":{"line":246,"column":16},"end":{"line":246,"column":45}},"168":{"start":{"line":248,"column":12},"end":{"line":248,"column":27}},"169":{"start":{"line":250,"column":8},"end":{"line":250,"column":22}},"170":{"start":{"line":253,"column":0},"end":{"line":253,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":27},"end":{"line":50,"column":5}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":14},"end":{"line":67,"column":5}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":27},"end":{"line":59,"column":28}},"loc":{"start":{"line":59,"column":41},"end":{"line":64,"column":9}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":15},"end":{"line":77,"column":5}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":23},"end":{"line":101,"column":5}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":96,"column":41},"end":{"line":96,"column":42}},"loc":{"start":{"line":96,"column":52},"end":{"line":98,"column":13}},"line":96},"13":{"name":"(anonymous_13)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":33},"end":{"line":108,"column":5}},"line":102},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":37},"end":{"line":122,"column":5}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":111,"column":33},"end":{"line":111,"column":34}},"loc":{"start":{"line":111,"column":44},"end":{"line":120,"column":9}},"line":111},"16":{"name":"(anonymous_16)","decl":{"start":{"line":112,"column":58},"end":{"line":112,"column":59}},"loc":{"start":{"line":112,"column":67},"end":{"line":115,"column":13}},"line":112},"17":{"name":"(anonymous_17)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":23},"end":{"line":137,"column":5}},"line":123},"18":{"name":"(anonymous_18)","decl":{"start":{"line":129,"column":30},"end":{"line":129,"column":31}},"loc":{"start":{"line":129,"column":41},"end":{"line":133,"column":13}},"line":129},"19":{"name":"(anonymous_19)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":26},"end":{"line":147,"column":5}},"line":138},"20":{"name":"(anonymous_20)","decl":{"start":{"line":141,"column":37},"end":{"line":141,"column":38}},"loc":{"start":{"line":141,"column":48},"end":{"line":145,"column":9}},"line":141},"21":{"name":"(anonymous_21)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":29},"end":{"line":177,"column":5}},"line":148},"22":{"name":"(anonymous_22)","decl":{"start":{"line":154,"column":37},"end":{"line":154,"column":38}},"loc":{"start":{"line":154,"column":48},"end":{"line":175,"column":9}},"line":154},"23":{"name":"(anonymous_23)","decl":{"start":{"line":178,"column":4},"end":{"line":178,"column":5}},"loc":{"start":{"line":178,"column":29},"end":{"line":198,"column":5}},"line":178},"24":{"name":"(anonymous_24)","decl":{"start":{"line":186,"column":37},"end":{"line":186,"column":38}},"loc":{"start":{"line":186,"column":48},"end":{"line":196,"column":9}},"line":186},"25":{"name":"(anonymous_25)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":33},"end":{"line":225,"column":5}},"line":199},"26":{"name":"(anonymous_26)","decl":{"start":{"line":202,"column":33},"end":{"line":202,"column":34}},"loc":{"start":{"line":202,"column":49},"end":{"line":204,"column":9}},"line":202},"27":{"name":"(anonymous_27)","decl":{"start":{"line":207,"column":36},"end":{"line":207,"column":37}},"loc":{"start":{"line":207,"column":58},"end":{"line":207,"column":86}},"line":207},"28":{"name":"(anonymous_28)","decl":{"start":{"line":218,"column":32},"end":{"line":218,"column":33}},"loc":{"start":{"line":218,"column":45},"end":{"line":222,"column":13}},"line":218},"29":{"name":"(anonymous_29)","decl":{"start":{"line":219,"column":32},"end":{"line":219,"column":33}},"loc":{"start":{"line":219,"column":54},"end":{"line":221,"column":17}},"line":219},"30":{"name":"(anonymous_30)","decl":{"start":{"line":226,"column":4},"end":{"line":226,"column":5}},"loc":{"start":{"line":226,"column":36},"end":{"line":251,"column":5}},"line":226},"31":{"name":"(anonymous_31)","decl":{"start":{"line":238,"column":44},"end":{"line":238,"column":45}},"loc":{"start":{"line":238,"column":55},"end":{"line":249,"column":9}},"line":238},"32":{"name":"(anonymous_32)","decl":{"start":{"line":240,"column":41},"end":{"line":240,"column":42}},"loc":{"start":{"line":240,"column":53},"end":{"line":247,"column":13}},"line":240}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"20":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"21":{"loc":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},{"start":{"line":70,"column":8},"end":{"line":75,"column":9}}],"line":70},"22":{"loc":{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":13},"end":{"line":75,"column":9}},{"start":{"line":73,"column":13},"end":{"line":75,"column":9}}],"line":73},"23":{"loc":{"start":{"line":79,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":100,"column":9}},{"start":{"line":79,"column":8},"end":{"line":100,"column":9}}],"line":79},"24":{"loc":{"start":{"line":82,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":13},"end":{"line":100,"column":9}},{"start":{"line":82,"column":13},"end":{"line":100,"column":9}}],"line":82},"25":{"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":48}},"type":"binary-expr","locations":[{"start":{"line":82,"column":17},"end":{"line":82,"column":31}},{"start":{"line":82,"column":35},"end":{"line":82,"column":48}}],"line":82},"26":{"loc":{"start":{"line":85,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":13},"end":{"line":100,"column":9}},{"start":{"line":85,"column":13},"end":{"line":100,"column":9}}],"line":85},"27":{"loc":{"start":{"line":85,"column":17},"end":{"line":85,"column":64}},"type":"binary-expr","locations":[{"start":{"line":85,"column":17},"end":{"line":85,"column":30}},{"start":{"line":85,"column":34},"end":{"line":85,"column":47}},{"start":{"line":85,"column":51},"end":{"line":85,"column":64}}],"line":85},"28":{"loc":{"start":{"line":88,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":13},"end":{"line":100,"column":9}},{"start":{"line":88,"column":13},"end":{"line":100,"column":9}}],"line":88},"29":{"loc":{"start":{"line":91,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":13},"end":{"line":100,"column":9}},{"start":{"line":91,"column":13},"end":{"line":100,"column":9}}],"line":91},"30":{"loc":{"start":{"line":97,"column":24},"end":{"line":97,"column":119}},"type":"cond-expr","locations":[{"start":{"line":97,"column":96},"end":{"line":97,"column":106}},{"start":{"line":97,"column":109},"end":{"line":97,"column":119}}],"line":97},"31":{"loc":{"start":{"line":103,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":106,"column":9}},{"start":{"line":103,"column":8},"end":{"line":106,"column":9}}],"line":103},"32":{"loc":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},{"start":{"line":116,"column":12},"end":{"line":118,"column":13}}],"line":116},"33":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"34":{"loc":{"start":{"line":142,"column":33},"end":{"line":142,"column":128}},"type":"cond-expr","locations":[{"start":{"line":142,"column":105},"end":{"line":142,"column":115}},{"start":{"line":142,"column":118},"end":{"line":142,"column":128}}],"line":142},"35":{"loc":{"start":{"line":143,"column":35},"end":{"line":143,"column":130}},"type":"cond-expr","locations":[{"start":{"line":143,"column":107},"end":{"line":143,"column":117}},{"start":{"line":143,"column":120},"end":{"line":143,"column":130}}],"line":143},"36":{"loc":{"start":{"line":155,"column":12},"end":{"line":174,"column":13}},"type":"if","locations":[{"start":{"line":155,"column":12},"end":{"line":174,"column":13}},{"start":{"line":155,"column":12},"end":{"line":174,"column":13}}],"line":155},"37":{"loc":{"start":{"line":155,"column":16},"end":{"line":155,"column":62}},"type":"binary-expr","locations":[{"start":{"line":155,"column":16},"end":{"line":155,"column":38}},{"start":{"line":155,"column":42},"end":{"line":155,"column":62}}],"line":155},"38":{"loc":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},{"start":{"line":156,"column":16},"end":{"line":158,"column":17}}],"line":156},"39":{"loc":{"start":{"line":157,"column":40},"end":{"line":157,"column":135}},"type":"cond-expr","locations":[{"start":{"line":157,"column":112},"end":{"line":157,"column":122}},{"start":{"line":157,"column":125},"end":{"line":157,"column":135}}],"line":157},"40":{"loc":{"start":{"line":160,"column":17},"end":{"line":174,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":17},"end":{"line":174,"column":13}},{"start":{"line":160,"column":17},"end":{"line":174,"column":13}}],"line":160},"41":{"loc":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},{"start":{"line":161,"column":16},"end":{"line":163,"column":17}}],"line":161},"42":{"loc":{"start":{"line":162,"column":40},"end":{"line":162,"column":135}},"type":"cond-expr","locations":[{"start":{"line":162,"column":112},"end":{"line":162,"column":122}},{"start":{"line":162,"column":125},"end":{"line":162,"column":135}}],"line":162},"43":{"loc":{"start":{"line":165,"column":17},"end":{"line":174,"column":13}},"type":"if","locations":[{"start":{"line":165,"column":17},"end":{"line":174,"column":13}},{"start":{"line":165,"column":17},"end":{"line":174,"column":13}}],"line":165},"44":{"loc":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},{"start":{"line":166,"column":16},"end":{"line":168,"column":17}}],"line":166},"45":{"loc":{"start":{"line":167,"column":40},"end":{"line":167,"column":135}},"type":"cond-expr","locations":[{"start":{"line":167,"column":112},"end":{"line":167,"column":122}},{"start":{"line":167,"column":125},"end":{"line":167,"column":135}}],"line":167},"46":{"loc":{"start":{"line":171,"column":16},"end":{"line":173,"column":17}},"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":173,"column":17}},{"start":{"line":171,"column":16},"end":{"line":173,"column":17}}],"line":171},"47":{"loc":{"start":{"line":172,"column":40},"end":{"line":172,"column":135}},"type":"cond-expr","locations":[{"start":{"line":172,"column":112},"end":{"line":172,"column":122}},{"start":{"line":172,"column":125},"end":{"line":172,"column":135}}],"line":172},"48":{"loc":{"start":{"line":187,"column":12},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":187,"column":12},"end":{"line":195,"column":13}},{"start":{"line":187,"column":12},"end":{"line":195,"column":13}}],"line":187},"49":{"loc":{"start":{"line":187,"column":16},"end":{"line":187,"column":61}},"type":"binary-expr","locations":[{"start":{"line":187,"column":16},"end":{"line":187,"column":35}},{"start":{"line":187,"column":39},"end":{"line":187,"column":61}}],"line":187},"50":{"loc":{"start":{"line":188,"column":36},"end":{"line":188,"column":131}},"type":"cond-expr","locations":[{"start":{"line":188,"column":108},"end":{"line":188,"column":118}},{"start":{"line":188,"column":121},"end":{"line":188,"column":131}}],"line":188},"51":{"loc":{"start":{"line":190,"column":17},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":190,"column":17},"end":{"line":195,"column":13}},{"start":{"line":190,"column":17},"end":{"line":195,"column":13}}],"line":190},"52":{"loc":{"start":{"line":190,"column":21},"end":{"line":190,"column":66}},"type":"binary-expr","locations":[{"start":{"line":190,"column":21},"end":{"line":190,"column":40}},{"start":{"line":190,"column":44},"end":{"line":190,"column":66}}],"line":190},"53":{"loc":{"start":{"line":191,"column":36},"end":{"line":191,"column":131}},"type":"cond-expr","locations":[{"start":{"line":191,"column":108},"end":{"line":191,"column":118}},{"start":{"line":191,"column":121},"end":{"line":191,"column":131}}],"line":191},"54":{"loc":{"start":{"line":193,"column":17},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":193,"column":17},"end":{"line":195,"column":13}},{"start":{"line":193,"column":17},"end":{"line":195,"column":13}}],"line":193},"55":{"loc":{"start":{"line":193,"column":21},"end":{"line":193,"column":68}},"type":"binary-expr","locations":[{"start":{"line":193,"column":21},"end":{"line":193,"column":40}},{"start":{"line":193,"column":44},"end":{"line":193,"column":68}}],"line":193},"56":{"loc":{"start":{"line":194,"column":36},"end":{"line":194,"column":131}},"type":"cond-expr","locations":[{"start":{"line":194,"column":108},"end":{"line":194,"column":118}},{"start":{"line":194,"column":121},"end":{"line":194,"column":131}}],"line":194},"57":{"loc":{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},{"start":{"line":206,"column":8},"end":{"line":223,"column":9}}],"line":206},"58":{"loc":{"start":{"line":211,"column":20},"end":{"line":213,"column":21}},"type":"if","locations":[{"start":{"line":211,"column":20},"end":{"line":213,"column":21}},{"start":{"line":211,"column":20},"end":{"line":213,"column":21}}],"line":211},"59":{"loc":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},{"start":{"line":227,"column":8},"end":{"line":229,"column":9}}],"line":227},"60":{"loc":{"start":{"line":230,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":237,"column":9}},{"start":{"line":230,"column":8},"end":{"line":237,"column":9}}],"line":230},"61":{"loc":{"start":{"line":231,"column":12},"end":{"line":236,"column":13}},"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":236,"column":13}},{"start":{"line":231,"column":12},"end":{"line":236,"column":13}}],"line":231},"62":{"loc":{"start":{"line":242,"column":16},"end":{"line":245,"column":17}},"type":"if","locations":[{"start":{"line":242,"column":16},"end":{"line":245,"column":17}},{"start":{"line":242,"column":16},"end":{"line":245,"column":17}}],"line":242}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":185,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":94,"35":94,"36":94,"37":94,"38":94,"39":94,"40":94,"41":94,"42":3,"43":91,"44":91,"45":91,"46":91,"47":91,"48":1136290,"49":1136290,"50":1136290,"51":91,"52":91,"53":91,"54":91,"55":69,"56":22,"57":22,"58":91,"59":187,"60":0,"61":187,"62":38,"63":149,"64":93,"65":56,"66":34,"67":22,"68":7,"69":15,"70":15,"71":904932,"72":15,"73":91,"74":19,"75":19,"76":72,"77":19,"78":19,"79":921689,"80":1037977,"81":1037977,"82":921689,"83":688,"84":921689,"85":19,"86":19,"87":19,"88":688,"89":688,"90":688,"91":688,"92":995,"93":995,"94":995,"95":688,"96":19,"97":7,"98":7,"99":7,"100":131044,"101":1086,"102":7,"103":34,"104":34,"105":34,"106":34,"107":34,"108":34,"109":1554328,"110":258812,"111":23098,"112":1295516,"113":193836,"114":4441,"115":1101680,"116":258448,"117":11727,"118":843232,"119":3613,"120":34,"121":93,"122":93,"123":93,"124":93,"125":93,"126":93,"127":93,"128":93,"129":4595460,"130":350062,"131":4245398,"132":958857,"133":3286541,"134":34924,"135":93,"136":38,"137":38,"138":38,"139":89,"140":38,"141":38,"142":28,"143":165062,"144":28,"145":28,"146":41,"147":41,"148":153979,"149":134581,"150":10,"151":20,"152":10904,"153":38,"154":91,"155":3,"156":88,"157":58,"158":45,"159":13,"160":88,"161":21508,"162":21508,"163":55576,"164":55576,"165":54834,"166":54834,"167":55576,"168":21508,"169":88,"170":1},"f":{"0":148,"1":185,"2":0,"3":1,"4":0,"5":1,"6":3,"7":94,"8":94,"9":1136290,"10":91,"11":187,"12":904932,"13":91,"14":19,"15":921689,"16":1037977,"17":19,"18":995,"19":7,"20":131044,"21":34,"22":1554328,"23":93,"24":4595460,"25":38,"26":89,"27":165062,"28":20,"29":10904,"30":91,"31":21508,"32":55576},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[3,0],"18":[3,3],"19":[3,91],"20":[1136290,0],"21":[69,22],"22":[22,0],"23":[0,187],"24":[38,149],"25":[187,159],"26":[93,56],"27":[149,125,74],"28":[34,22],"29":[7,15],"30":[904568,364],"31":[19,72],"32":[688,921001],"33":[1086,129958],"34":[129224,1820],"35":[59,1027],"36":[258812,1295516],"37":[1554328,452648],"38":[23098,235714],"39":[22823,275],"40":[193836,1101680],"41":[4441,189395],"42":[4441,0],"43":[258448,843232],"44":[11727,246721],"45":[11727,0],"46":[3613,839619],"47":[3591,22],"48":[350062,4245398],"49":[4595460,2267244],"50":[348578,1484],"51":[958857,3286541],"52":[4245398,1293696],"53":[957910,947],"54":[34924,3251617],"55":[3286541,1034520],"56":[34908,16],"57":[28,10],"58":[134581,19398],"59":[3,88],"60":[58,30],"61":[45,13],"62":[54834,742]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Query.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/models/Query.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\r\nimport {\r\n\tFilter,\r\n\tIQuery,\r\n\tJSONQuery,\r\n\tLogic,\r\n\tLogicComparison,\r\n\tMComparator,\r\n\tMComparison,\r\n\tNegation,\r\n\tOptions,\r\n\tSComparison,\r\n\tSField,\r\n\tTransformations,\r\n} from \"./IQuery\";\r\nimport * as fs from \"fs-extra\";\r\nimport QueryValidator from \"./QueryValidator\";\r\nimport Sections, {Section} from \"./Sections\";\r\nimport {\r\n\tapplyRules,\r\n\torderSectionsBySortObject,\r\n\torderSectionsByString,\r\n\tvalidateKeyMatchesKind,\r\n} from \"../utils/QueryUtils\";\r\nimport Rooms, {Room} from \"./Rooms\";\r\nimport {Dataset} from \"./Dataset\";\r\n\r\nexport class Query implements IQuery {\r\n\tpublic WHERE: Filter;\r\n\tpublic OPTIONS: Options;\r\n\tpublic TRANSFORMATIONS?: Transformations;\r\n\tpublic datasetName: string;\r\n\r\n\tprivate directory = \"./data\";\r\n\tprivate data: Dataset | undefined;\r\n\r\n\tconstructor(queryJSON: JSONQuery) {\r\n\t\tlet QV: QueryValidator = new QueryValidator();\r\n\t\tthis.datasetName = QV.validateQuery(queryJSON);\r\n\t\tthis.WHERE = queryJSON.WHERE;\r\n\t\tthis.OPTIONS = queryJSON.OPTIONS;\r\n\t\tthis.TRANSFORMATIONS = queryJSON.TRANSFORMATIONS;\r\n\t\tthis.data = undefined;\r\n\t}\r\n\r\n\tpublic execute(): InsightResult[] {\r\n\t\tif (!fs.pathExistsSync(this.directory + \"/\" + this.datasetName + \".json\")) {\r\n\t\t\tthrow new InsightError(`Cannot query from ${this.datasetName} due to not being added yet.`);\r\n\t\t}\r\n\t\tthis.loadData();\r\n\t\tconst afterWhere = this.handleWhere(this.WHERE);\r\n\r\n\t\t// Parse WHERE data into a map\r\n\t\tconst selectedEntries: Section[] | Room[] = [];\r\n\r\n\t\tconst allEntries = this.data?.getDataAsMap();\r\n\t\tafterWhere.forEach((uniqueID) => {\r\n\t\t\tconst entry = allEntries?.get(uniqueID);\r\n\t\t\tif (entry) {\r\n\t\t\t\tselectedEntries.push(entry);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst afterTransform = this.handleTransformations(selectedEntries);\r\n\t\treturn this.handleOptions(afterTransform);\r\n\t}\r\n\r\n\tprivate loadData() {\r\n\t\tconst object = fs.readJSONSync(this.directory + \"/\" + this.datasetName + \".json\");\r\n\t\tif (object.kind === InsightDatasetKind.Sections) {\r\n\t\t\tthis.data = new Sections(object.id);\r\n\t\t} else if (object.kind === InsightDatasetKind.Rooms) {\r\n\t\t\tthis.data = new Rooms(object.id);\r\n\t\t}\r\n\r\n\t\tthis.data?.addDataFromJSON(object.sections);\r\n\t}\r\n\r\n\tprivate handleWhere(input: Filter): Set<string> {\r\n\t\tif (!input) {\r\n\t\t\tthrow new InsightError(\"this.WHERE should not be NULL after query validated\");\r\n\t\t} else if (\"AND\" in input || \"OR\" in input) {\r\n\t\t\treturn this.handleLogicComparison(input as LogicComparison);\r\n\t\t} else if (\"LT\" in input || \"GT\" in input || \"EQ\" in input) {\r\n\t\t\treturn this.handleMComparison(input as MComparison);\r\n\t\t} else if (\"IS\" in input) {\r\n\t\t\treturn this.handleSComparison(input as SComparison);\r\n\t\t} else if (\"NOT\" in input) {\r\n\t\t\treturn this.handleNegation(input as Negation);\r\n\t\t} else {\r\n\t\t\tconst all = new Set<string>();\r\n\t\t\tthis.data?.getData().forEach((entry) => {\r\n\t\t\t\tall.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t});\r\n\t\t\treturn all;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleTransformations(input: any[]): any[] {\r\n\t\tif (this.TRANSFORMATIONS) {\r\n\t\t\tconst groupings = this.handleGrouping(input);\r\n\r\n\t\t\treturn this.handleApply(groupings);\r\n\t\t}\r\n\t\treturn input;\r\n\t}\r\n\r\n\tprivate handleGrouping(selectedSections: any[]): Map<string, any[]> {\r\n\t\tconst groupings = new Map<string, any[]>();\r\n\r\n\t\tselectedSections.forEach((entry) => {\r\n\t\t\tconst tuple = this.TRANSFORMATIONS?.GROUP.map((key) => {\r\n\t\t\t\tvalidateKeyMatchesKind(key, this.data?.getKind());\r\n\t\t\t\treturn `${key}__${entry[key.split(\"_\")[1]]}`;\r\n\t\t\t}).join(\"||\");\r\n\r\n\t\t\tif (!groupings.has(tuple as string)) {\r\n\t\t\t\tgroupings.set(tuple as string, []);\r\n\t\t\t}\r\n\r\n\t\t\tgroupings.get(tuple as string)?.push(entry);\r\n\t\t});\r\n\r\n\t\treturn groupings;\r\n\t}\r\n\r\n\tprivate handleApply(input: Map<string, any[]>): any[] {\r\n\t\tconst results: any[] = [];\r\n\r\n\t\tfor (const [encodedTuple, sections] of input.entries()) {\r\n\t\t\tconst result: any = {};\r\n\t\t\tapplyRules(sections, result, this.TRANSFORMATIONS?.APPLY, this.data?.getKind());\r\n\r\n\t\t\t// Add order keys back to object\r\n\t\t\tconst decodedTuples = encodedTuple.split(\"||\");\r\n\t\t\tdecodedTuples.map((tuple) => {\r\n\t\t\t\tlet [key] = tuple.split(\"__\");\r\n\t\t\t\tkey = key.split(\"_\")[1];\r\n\t\t\t\tresult[key] = sections[0][key];\r\n\t\t\t});\r\n\t\t\tresults.push(result);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprivate handleNegation(input: Negation): Set<string> {\r\n\t\t// Handle the filter inside the NOT and get its result.\r\n\t\tconst innerResult = this.handleWhere(input.NOT);\r\n\r\n\t\t// Subtract innerResult from all to get the result of the NOT filter.\r\n\t\tconst negationResult = new Set<string>();\r\n\t\tthis.data?.getData().forEach((entry) => {\r\n\t\t\tif (!innerResult.has(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href)) {\r\n\t\t\t\tnegationResult.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn negationResult;\r\n\t}\r\n\r\n\tpublic handleSComparison(input: SComparison): Set<string> {\r\n\t\tconst sectionMappings = new Set<string>();\r\n\t\tconst key = Object.keys(input.IS)[0]; // Dataset name + SField\r\n\t\tvalidateKeyMatchesKind(key, this.data?.getKind());\r\n\t\tconst sField = key.split(\"_\")[1] as SField; // SField\r\n\t\tconst sValue = input.IS[key];\r\n\r\n\t\tthis.data?.getData().forEach((entry: any) => {\r\n\t\t\tif (sValue.startsWith(\"*\") && sValue.endsWith(\"*\")) {\r\n\t\t\t\t// Contains inputstring\r\n\t\t\t\tif (entry[sField].includes(sValue.substring(1, sValue.length - 1))) {\r\n\t\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t\t}\r\n\t\t\t} else if (sValue.startsWith(\"*\")) {\r\n\t\t\t\t// Ends with inputstring\r\n\t\t\t\tif (entry[sField].endsWith(sValue.substring(1))) {\r\n\t\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t\t}\r\n\t\t\t} else if (sValue.endsWith(\"*\")) {\r\n\t\t\t\t// Starts with inputstring\r\n\t\t\t\tif (entry[sField].startsWith(sValue.substring(0, sValue.length - 1))) {\r\n\t\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Matches inputstring exactly\r\n\t\t\t\tif (entry[sField] === sValue) {\r\n\t\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn sectionMappings;\r\n\t}\r\n\r\n\tprivate handleMComparison(input: MComparison): Set<string> {\r\n\t\tconst sectionMappings = new Set<string>();\r\n\t\tconst compareKey: keyof MComparison = Object.keys(input)[0] as MComparator; // GT, LT, or EQ\r\n\t\tconst compareObject = input[compareKey] as object;\r\n\r\n\t\tconst key = Object.keys(compareObject)[0];\r\n\t\tvalidateKeyMatchesKind(key, this.data?.getKind());\r\n\r\n\t\tconst mField: string = key.split(\"_\")[1]; // MField\r\n\t\tconst mValue = Object.values(compareObject)[0];\r\n\r\n\t\tthis.data?.getData().forEach((entry: any) => {\r\n\t\t\tif (compareKey === \"GT\" && entry[mField] > mValue) {\r\n\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t} else if (compareKey === \"LT\" && entry[mField] < mValue) {\r\n\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t} else if (compareKey === \"EQ\" && entry[mField] === mValue) {\r\n\t\t\t\tsectionMappings.add(this.data?.getKind() === InsightDatasetKind.Sections ? entry.uuid : entry.href);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn sectionMappings;\r\n\t}\r\n\r\n\tprivate handleLogicComparison(input: LogicComparison): Set<string> {\r\n\t\tconst allMappings: Array<Set<string>> = [];\r\n\t\tconst logicKey = Object.keys(input)[0] as Logic;\r\n\r\n\t\tinput[logicKey]?.forEach((comparison) => {\r\n\t\t\tallMappings.push(this.handleWhere(comparison));\r\n\t\t});\r\n\r\n\t\tconst result = new Set<string>();\r\n\t\tif (logicKey === \"AND\") {\r\n\t\t\t// Initialize result with elements from the first set\r\n\t\t\tallMappings[0]?.forEach((uniqueIdentifier) => result.add(uniqueIdentifier));\r\n\r\n\t\t\t// Iterate over the remaining sets and filter out elements not common to all sets\r\n\t\t\tfor (let i = 1; i < allMappings.length; i++) {\r\n\t\t\t\tconst currentSet = allMappings[i];\r\n\t\t\t\tfor (const uniqueIdentifier of result) {\r\n\t\t\t\t\tif (!currentSet.has(uniqueIdentifier)) {\r\n\t\t\t\t\t\tresult.delete(uniqueIdentifier);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// For OR logic, add all unique elements from all sets\r\n\t\t\tallMappings.forEach((mapping) => {\r\n\t\t\t\tmapping.forEach((uniqueIdentifier) => {\r\n\t\t\t\t\tresult.add(uniqueIdentifier);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate handleOptions(selectedSections: any[]): InsightResult[] {\r\n\t\tif (selectedSections.length > 5000) {\r\n\t\t\tthrow new ResultTooLargeError(\"Greater than 5000 results\");\r\n\t\t}\r\n\r\n\t\t// Handle order\r\n\t\tif (this.OPTIONS.ORDER) {\r\n\t\t\tif (typeof this.OPTIONS.ORDER === \"string\") {\r\n\t\t\t\torderSectionsByString(selectedSections, this.OPTIONS.ORDER, this.data?.getKind());\r\n\t\t\t} else {\r\n\t\t\t\torderSectionsBySortObject(selectedSections, this.OPTIONS.ORDER, this.data?.getKind());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return insightResults\r\n\t\tconst result: InsightResult[] = selectedSections.map((entry) => {\r\n\t\t\t// Only keep the fields listed in this.OPTIONS.COLUMNS\r\n\t\t\tconst insight: Partial<InsightResult> = {};\r\n\t\t\tthis.OPTIONS.COLUMNS.forEach((column) => {\r\n\t\t\t\tlet key: string = column;\r\n\t\t\t\tif (column.includes(\"_\")) {\r\n\t\t\t\t\tvalidateKeyMatchesKind(key, this.data?.getKind());\r\n\t\t\t\t\tkey = column.split(\"_\")[1]; // if the column is like 'sections_avg'\r\n\t\t\t\t}\r\n\t\t\t\tinsight[column] = entry[key];\r\n\t\t\t});\r\n\t\t\treturn insight as InsightResult; // forcibly cast the Partial<InsightResult> to InsightResult\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96983b7b66acdd8b0c9b980dee66706301ef6909","contentHash":"f38ec9e91d1d5c024ec8e8b15748e1ffc82f1bc23044e1051338eeb840bc2bb8"},"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\QueryUtils.ts":{"path":"C:\\Users\\jonah\\Desktop\\Personal Projects\\project_team123\\src\\utils\\QueryUtils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":129}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":10,"column":26},"end":{"line":10,"column":111}},"7":{"start":{"line":11,"column":23},"end":{"line":23,"column":5}},"8":{"start":{"line":24,"column":4},"end":{"line":35,"column":5}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":119}},"10":{"start":{"line":27,"column":9},"end":{"line":35,"column":5}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":89}},"12":{"start":{"line":30,"column":9},"end":{"line":35,"column":5}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":71}},"14":{"start":{"line":33,"column":9},"end":{"line":35,"column":5}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":71}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}},"17":{"start":{"line":39,"column":4},"end":{"line":42,"column":5}},"18":{"start":{"line":40,"column":8},"end":{"line":40,"column":47}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":42}},"20":{"start":{"line":43,"column":4},"end":{"line":51,"column":7}},"21":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":22}},"23":{"start":{"line":47,"column":13},"end":{"line":49,"column":9}},"24":{"start":{"line":48,"column":12},"end":{"line":48,"column":21}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":17}},"26":{"start":{"line":53,"column":0},"end":{"line":53,"column":54}},"27":{"start":{"line":55,"column":4},"end":{"line":70,"column":7}},"28":{"start":{"line":56,"column":8},"end":{"line":68,"column":9}},"29":{"start":{"line":57,"column":27},"end":{"line":57,"column":30}},"30":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"31":{"start":{"line":59,"column":16},"end":{"line":59,"column":55}},"32":{"start":{"line":60,"column":16},"end":{"line":60,"column":45}},"33":{"start":{"line":62,"column":12},"end":{"line":67,"column":13}},"34":{"start":{"line":63,"column":16},"end":{"line":63,"column":57}},"35":{"start":{"line":65,"column":17},"end":{"line":67,"column":13}},"36":{"start":{"line":66,"column":16},"end":{"line":66,"column":57}},"37":{"start":{"line":69,"column":8},"end":{"line":69,"column":17}},"38":{"start":{"line":72,"column":0},"end":{"line":72,"column":62}},"39":{"start":{"line":74,"column":4},"end":{"line":106,"column":5}},"40":{"start":{"line":75,"column":8},"end":{"line":105,"column":11}},"41":{"start":{"line":76,"column":29},"end":{"line":76,"column":54}},"42":{"start":{"line":77,"column":31},"end":{"line":77,"column":66}},"43":{"start":{"line":78,"column":12},"end":{"line":78,"column":74}},"44":{"start":{"line":79,"column":26},"end":{"line":79,"column":72}},"45":{"start":{"line":80,"column":24},"end":{"line":80,"column":51}},"46":{"start":{"line":82,"column":12},"end":{"line":104,"column":13}},"47":{"start":{"line":84,"column":20},"end":{"line":84,"column":94}},"48":{"start":{"line":84,"column":77},"end":{"line":84,"column":91}},"49":{"start":{"line":85,"column":20},"end":{"line":85,"column":26}},"50":{"start":{"line":87,"column":20},"end":{"line":87,"column":94}},"51":{"start":{"line":87,"column":77},"end":{"line":87,"column":91}},"52":{"start":{"line":88,"column":20},"end":{"line":88,"column":26}},"53":{"start":{"line":90,"column":20},"end":{"line":92,"column":23}},"54":{"start":{"line":91,"column":24},"end":{"line":91,"column":84}},"55":{"start":{"line":93,"column":20},"end":{"line":93,"column":95}},"56":{"start":{"line":94,"column":20},"end":{"line":94,"column":26}},"57":{"start":{"line":96,"column":20},"end":{"line":98,"column":26}},"58":{"start":{"line":97,"column":24},"end":{"line":97,"column":118}},"59":{"start":{"line":99,"column":20},"end":{"line":99,"column":62}},"60":{"start":{"line":100,"column":20},"end":{"line":100,"column":26}},"61":{"start":{"line":102,"column":20},"end":{"line":102,"column":95}},"62":{"start":{"line":102,"column":73},"end":{"line":102,"column":87}},"63":{"start":{"line":103,"column":20},"end":{"line":103,"column":26}},"64":{"start":{"line":108,"column":0},"end":{"line":108,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"validateKeyMatchesKind","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":43},"end":{"line":36,"column":1}},"line":9},"2":{"name":"orderSectionsByString","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":30}},"loc":{"start":{"line":38,"column":65},"end":{"line":52,"column":1}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":26},"end":{"line":43,"column":27}},"loc":{"start":{"line":43,"column":36},"end":{"line":51,"column":5}},"line":43},"4":{"name":"orderSectionsBySortObject","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":34}},"loc":{"start":{"line":54,"column":72},"end":{"line":71,"column":1}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":26},"end":{"line":55,"column":27}},"loc":{"start":{"line":55,"column":36},"end":{"line":70,"column":5}},"line":55},"6":{"name":"applyRules","decl":{"start":{"line":73,"column":9},"end":{"line":73,"column":19}},"loc":{"start":{"line":73,"column":51},"end":{"line":107,"column":1}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":22},"end":{"line":75,"column":23}},"loc":{"start":{"line":75,"column":37},"end":{"line":105,"column":9}},"line":75},"8":{"name":"(anonymous_8)","decl":{"start":{"line":84,"column":64},"end":{"line":84,"column":65}},"loc":{"start":{"line":84,"column":77},"end":{"line":84,"column":91}},"line":84},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":64},"end":{"line":87,"column":65}},"loc":{"start":{"line":87,"column":77},"end":{"line":87,"column":91}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":37},"end":{"line":90,"column":38}},"loc":{"start":{"line":90,"column":50},"end":{"line":92,"column":21}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":96,"column":42},"end":{"line":96,"column":43}},"loc":{"start":{"line":96,"column":60},"end":{"line":98,"column":21}},"line":96},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":60},"end":{"line":102,"column":61}},"loc":{"start":{"line":102,"column":73},"end":{"line":102,"column":87}},"line":102}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":35,"column":5}},{"start":{"line":24,"column":4},"end":{"line":35,"column":5}}],"line":24},"4":{"loc":{"start":{"line":27,"column":9},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":35,"column":5}},{"start":{"line":27,"column":9},"end":{"line":35,"column":5}}],"line":27},"5":{"loc":{"start":{"line":30,"column":9},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":9},"end":{"line":35,"column":5}},{"start":{"line":30,"column":9},"end":{"line":35,"column":5}}],"line":30},"6":{"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":112}},"type":"binary-expr","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":66}},{"start":{"line":30,"column":70},"end":{"line":30,"column":112}}],"line":30},"7":{"loc":{"start":{"line":33,"column":9},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":35,"column":5}},{"start":{"line":33,"column":9},"end":{"line":35,"column":5}}],"line":33},"8":{"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":106}},"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":63}},{"start":{"line":33,"column":67},"end":{"line":33,"column":106}}],"line":33},"9":{"loc":{"start":{"line":39,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":42,"column":5}},{"start":{"line":39,"column":4},"end":{"line":42,"column":5}}],"line":39},"10":{"loc":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},{"start":{"line":44,"column":8},"end":{"line":49,"column":9}}],"line":44},"11":{"loc":{"start":{"line":47,"column":13},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":49,"column":9}},{"start":{"line":47,"column":13},"end":{"line":49,"column":9}}],"line":47},"12":{"loc":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},{"start":{"line":58,"column":12},"end":{"line":61,"column":13}}],"line":58},"13":{"loc":{"start":{"line":62,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":67,"column":13}},{"start":{"line":62,"column":12},"end":{"line":67,"column":13}}],"line":62},"14":{"loc":{"start":{"line":63,"column":23},"end":{"line":63,"column":56}},"type":"cond-expr","locations":[{"start":{"line":63,"column":50},"end":{"line":63,"column":52}},{"start":{"line":63,"column":55},"end":{"line":63,"column":56}}],"line":63},"15":{"loc":{"start":{"line":65,"column":17},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":65,"column":17},"end":{"line":67,"column":13}},{"start":{"line":65,"column":17},"end":{"line":67,"column":13}}],"line":65},"16":{"loc":{"start":{"line":66,"column":23},"end":{"line":66,"column":56}},"type":"cond-expr","locations":[{"start":{"line":66,"column":50},"end":{"line":66,"column":51}},{"start":{"line":66,"column":54},"end":{"line":66,"column":56}}],"line":66},"17":{"loc":{"start":{"line":74,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":106,"column":5}},{"start":{"line":74,"column":4},"end":{"line":106,"column":5}}],"line":74},"18":{"loc":{"start":{"line":82,"column":12},"end":{"line":104,"column":13}},"type":"switch","locations":[{"start":{"line":83,"column":16},"end":{"line":85,"column":26}},{"start":{"line":86,"column":16},"end":{"line":88,"column":26}},{"start":{"line":89,"column":16},"end":{"line":94,"column":26}},{"start":{"line":95,"column":16},"end":{"line":100,"column":26}},{"start":{"line":101,"column":16},"end":{"line":103,"column":26}}],"line":82}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1094932,"7":1094932,"8":1094932,"9":0,"10":1094932,"11":0,"12":1094932,"13":0,"14":1094932,"15":0,"16":1,"17":45,"18":42,"19":42,"20":45,"21":174721,"22":90919,"23":83802,"24":61584,"25":22218,"26":1,"27":13,"28":1951,"29":2014,"30":2014,"31":1111,"32":1111,"33":2014,"34":685,"35":1329,"36":994,"37":272,"38":1,"39":688,"40":688,"41":841,"42":841,"43":841,"44":841,"45":841,"46":841,"47":444,"48":534017,"49":444,"50":11,"51":64612,"52":11,"53":364,"54":516896,"55":364,"56":364,"57":11,"58":64612,"59":11,"60":11,"61":11,"62":64612,"63":11,"64":1},"f":{"0":1,"1":1094932,"2":45,"3":174721,"4":13,"5":1951,"6":688,"7":841,"8":534017,"9":64612,"10":516896,"11":64612,"12":64612},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,1094932],"4":[0,1094932],"5":[0,1094932],"6":[1094932,1086257],"7":[0,1094932],"8":[1094932,8675],"9":[42,3],"10":[90919,83802],"11":[61584,22218],"12":[1111,903],"13":[685,1329],"14":[388,297],"15":[994,335],"16":[257,737],"17":[688,0],"18":[444,11,364,11,11]},"inputSourceMap":{"version":3,"file":"C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/QueryUtils.ts","sources":["C:/Users/jonah/Desktop/Personal Projects/project_team123/src/utils/QueryUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from \"decimal.js\";\r\nimport {ApplyRule, ApplyToken, Sort} from \"../models/IQuery\";\r\nimport {Section} from \"../models/Sections\";\r\nimport {InsightDatasetKind, InsightError} from \"../controller/IInsightFacade\";\r\n\r\nexport function validateKeyMatchesKind(key: string | undefined, kind: InsightDatasetKind | undefined) {\r\n\tconst SectionFields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\r\n\tconst RoomFields = [\r\n\t\t\"lat\",\r\n\t\t\"lon\",\r\n\t\t\"seats\",\r\n\t\t\"fullname\",\r\n\t\t\"shortname\",\r\n\t\t\"number\",\r\n\t\t\"name\",\r\n\t\t\"address\",\r\n\t\t\"type\",\r\n\t\t\"furniture\",\r\n\t\t\"href\",\r\n\t];\r\n\tif (key === undefined) {\r\n\t\tthrow new InsightError(\"Fatal error. Key undefined when validating match with dataset kind.\");\r\n\t} else if (kind === undefined) {\r\n\t\tthrow new InsightError(\"Fatal error. Dataset has no kind set.\");\r\n\t} else if (kind === InsightDatasetKind.Sections && !SectionFields.includes(key.split(\"_\")[1])) {\r\n\t\tthrow new InsightError(`Invalid key: ${key}`);\r\n\t} else if (kind === InsightDatasetKind.Rooms && !RoomFields.includes(key.split(\"_\")[1])) {\r\n\t\tthrow new InsightError(`Invalid key: ${key}`);\r\n\t}\r\n}\r\n\r\nexport function orderSectionsByString(\r\n\tselectedSections: any[],\r\n\torderKey: string,\r\n\tkind: InsightDatasetKind | undefined\r\n): void {\r\n\tif (orderKey.includes(\"_\")) {\r\n\t\tvalidateKeyMatchesKind(orderKey, kind);\r\n\t\torderKey = orderKey.split(\"_\")[1];\r\n\t}\r\n\r\n\tselectedSections.sort((a, b) => {\r\n\t\tif (a[orderKey] < b[orderKey]) {\r\n\t\t\treturn -1;\r\n\t\t} else if (a[orderKey] > b[orderKey]) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n}\r\n\r\nexport function orderSectionsBySortObject(\r\n\tselectedSections: any[],\r\n\torderObject: Sort,\r\n\tkind: InsightDatasetKind | undefined\r\n): void {\r\n\tselectedSections.sort((a, b) => {\r\n\t\tfor (let key of orderObject.keys) {\r\n\t\t\tlet orderKey = key;\r\n\r\n\t\t\t// If key in keys is a section or room key, keep only the part after \"_\"\r\n\t\t\tif (key.includes(\"_\")) {\r\n\t\t\t\tvalidateKeyMatchesKind(orderKey, kind);\r\n\t\t\t\torderKey = key.split(\"_\")[1];\r\n\t\t\t}\r\n\r\n\t\t\tif (a[orderKey] < b[orderKey]) {\r\n\t\t\t\treturn orderObject.dir === \"UP\" ? -1 : 1;\r\n\t\t\t} else if (a[orderKey] > b[orderKey]) {\r\n\t\t\t\treturn orderObject.dir === \"UP\" ? 1 : -1;\r\n\t\t\t}\r\n\t\t\t// If equal, the loop will check the next key (tiebreaker)\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n}\r\n\r\nexport function applyRules(\r\n\tsections: Section[],\r\n\tresult: any,\r\n\trules: ApplyRule[] | undefined,\r\n\tkind: InsightDatasetKind | undefined\r\n): void {\r\n\tif (rules !== undefined) {\r\n\t\trules.forEach((applyRule) => {\r\n\t\t\tconst applyKey = Object.keys(applyRule)[0];\r\n\t\t\tconst applyToken = Object.keys(applyRule[applyKey])[0] as ApplyToken;\r\n\t\t\tvalidateKeyMatchesKind(applyRule[applyKey][applyToken], kind);\r\n\t\t\tconst field = applyRule[applyKey][applyToken]?.split(\"_\")[1];\r\n\r\n\t\t\tlet total = new Decimal(0);\r\n\t\t\tlet sum;\r\n\r\n\t\t\tswitch (applyToken) {\r\n\t\t\t\tcase \"MAX\":\r\n\t\t\t\t\tresult[applyKey] = Math.max(\r\n\t\t\t\t\t\t...sections.map((section) => section[field as keyof Section] as number)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"MIN\":\r\n\t\t\t\t\tresult[applyKey] = Math.min(\r\n\t\t\t\t\t\t...sections.map((section) => section[field as keyof Section] as number)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"AVG\":\r\n\t\t\t\t\tsections.forEach((section) => {\r\n\t\t\t\t\t\ttotal = total.add(new Decimal(section[field as keyof Section] as number));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult[applyKey] = Number((total.toNumber() / sections.length).toFixed(2));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"SUM\":\r\n\t\t\t\t\tsum = sections.reduce((acc, section) => {\r\n\t\t\t\t\t\treturn new Decimal(acc).add(new Decimal(section[field as keyof Section] as number)).toNumber();\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t\tresult[applyKey] = Number(sum.toFixed(2));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"COUNT\":\r\n\t\t\t\t\tresult[applyKey] = new Set(\r\n\t\t\t\t\t\tsections.map((section) => section[field as keyof Section] as number)\r\n\t\t\t\t\t).size;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce531245eb2db6de4985c4ea659ffc90d425e109","contentHash":"8b5bfedbcef55574eaa453bcd6a7668b0d45610646ff3de41777f0c8ac3c9e81"}}